{"version":3,"file":null,"sources":["src/cal-heatmap.js"],"sourcesContent":["import * as d3 from \"d3\";\n\nexport default class CalHeatMap {\n    constructor() {\n        \"use strict\";\n\n        var self = this;\n\n        this.allowedDataType = [\"json\", \"csv\", \"tsv\", \"txt\"];\n\n        // Default settings\n        this.options = {\n            // selector string of the container to append the graph to\n            // Accept any string value accepted by document.querySelector or CSS3\n            // or an Element object\n            itemSelector: \"#cal-heatmap\",\n\n            // Whether to paint the calendar on init()\n            // Used by testsuite to reduce testing time\n            paintOnLoad: true,\n\n            // ================================================\n            // DOMAIN\n            // ================================================\n\n            // Number of domain to display on the graph\n            range: 12,\n\n            // Size of each cell, in pixel\n            cellSize: 10,\n\n            // Padding between each cell, in pixel\n            cellPadding: 2,\n\n            // For rounded subdomain rectangles, in pixels\n            cellRadius: 0,\n\n            domainGutter: 2,\n\n            domainMargin: [0, 0, 0, 0],\n\n            domain: \"hour\",\n\n            subDomain: \"min\",\n\n            // Number of columns to split the subDomains to\n            // If not null, will takes precedence over rowLimit\n            colLimit: null,\n\n            // Number of rows to split the subDomains to\n            // Will be ignored if colLimit is not null\n            rowLimit: null,\n\n            // First day of the week is Monday\n            // 0 to start the week on Sunday\n            weekStartOnMonday: true,\n\n            // Start date of the graph\n            // @default now\n            start: new Date(),\n\n            minDate: null,\n\n            maxDate: null,\n\n            // ================================================\n            // DATA\n            // ================================================\n\n            // Data source\n            // URL, where to fetch the original datas\n            data: \"\",\n\n            // Data type\n            // Default: json\n            dataType: this.allowedDataType[0],\n\n            // Payload sent when using POST http method\n            // Leave to null (default) for GET request\n            // Expect a string, formatted like \"a=b;c=d\"\n            dataPostPayload: null,\n\n            // Whether to consider missing date:value from the datasource\n            // as equal to 0, or just leave them as missing\n            considerMissingDataAsZero: false,\n\n            // Load remote data on calendar creation\n            // When false, the calendar will be left empty\n            loadOnInit: true,\n\n            // Calendar orientation\n            // false: display domains side by side\n            // true : display domains one under the other\n            verticalOrientation: false,\n\n            // Domain dynamic width/height\n            // The width on a domain depends on the number of\n            domainDynamicDimension: true,\n\n            // Domain Label properties\n            label: {\n                // valid: top, right, bottom, left\n                position: \"bottom\",\n\n                // Valid: left, center, right\n                // Also valid are the direct svg values: start, middle, end\n                align: \"center\",\n\n                // By default, there is no margin/padding around the label\n                offset: {\n                    x: 0,\n                    y: 0\n                },\n\n                rotate: null,\n\n                // Used only on vertical orientation\n                width: 100,\n\n                // Used only on horizontal orientation\n                height: null\n            },\n\n            // ================================================\n            // LEGEND\n            // ================================================\n\n            // Threshold for the legend\n            legend: [10, 20, 30, 40],\n\n            // Whether to display the legend\n            displayLegend: true,\n\n            legendCellSize: 10,\n\n            legendCellPadding: 2,\n\n            legendMargin: [0, 0, 0, 0],\n\n            // Legend vertical position\n            // top: place legend above calendar\n            // bottom: place legend below the calendar\n            legendVerticalPosition: \"bottom\",\n\n            // Legend horizontal position\n            // accepted values: left, center, right\n            legendHorizontalPosition: \"left\",\n\n            // Legend rotation\n            // accepted values: horizontal, vertical\n            legendOrientation: \"horizontal\",\n\n            // Objects holding all the heatmap different colors\n            // null to disable, and use the default css styles\n            //\n            // Examples:\n            // legendColors: {\n            //\t\tmin: \"green\",\n            //\t\tmax: \"red\",\n            //\t\tempty: \"#ffffff\",\n            //\t\tbase: \"grey\",\n            //\t\toverflow: \"red\"\n            // }\n            legendColors: null,\n\n            // ================================================\n            // HIGHLIGHT\n            // ================================================\n\n            // List of dates to highlight\n            // Valid values:\n            // - []: don't highlight anything\n            // - \"now\": highlight the current date\n            // - an array of Date objects: highlight the specified dates\n            highlight: [],\n\n            // ================================================\n            // TEXT FORMATTING / i18n\n            // ================================================\n\n            // Name of the items to represent in the calendar\n            itemName: [\"item\", \"items\"],\n\n            // Formatting of the domain label\n            // @default: null, will use the formatting according to domain type\n            // Accept a string used as specifier by d3.timeFormat()\n            // or a function\n            //\n            // Refer to https://github.com/mbostock/d3/wiki/Time-Formatting\n            // for accepted date formatting used by d3.timeFormat()\n            domainLabelFormat: null,\n\n            // Formatting of the title displayed when hovering a subDomain cell\n            subDomainTitleFormat: {\n                empty: \"{date}\",\n                filled: \"{count} {name} {connector} {date}\"\n            },\n\n            // Formatting of the {date} used in subDomainTitleFormat\n            // @default: null, will use the formatting according to subDomain type\n            // Accept a string used as specifier by d3.timeFormat()\n            // or a function\n            //\n            // Refer to https://github.com/mbostock/d3/wiki/Time-Formatting\n            // for accepted date formatting used by d3.timeFormat()\n            subDomainDateFormat: null,\n\n            // Formatting of the text inside each subDomain cell\n            // @default: null, no text\n            // Accept a string used as specifier by d3.timeFormat()\n            // or a function\n            //\n            // Refer to https://github.com/mbostock/d3/wiki/Time-Formatting\n            // for accepted date formatting used by d3.timeFormat()\n            subDomainTextFormat: null,\n\n            // Formatting of the title displayed when hovering a legend cell\n            legendTitleFormat: {\n                lower: \"less than {min} {name}\",\n                inner: \"between {down} and {up} {name}\",\n                upper: \"more than {max} {name}\"\n            },\n\n            // Animation duration, in ms\n            animationDuration: 500,\n\n            nextSelector: false,\n\n            previousSelector: false,\n\n            itemNamespace: \"cal-heatmap\",\n\n            tooltip: false,\n\n            // ================================================\n            // EVENTS CALLBACK\n            // ================================================\n\n            // Callback when clicking on a time block\n            onClick: null,\n\n            // Callback after painting the empty calendar\n            // Can be used to trigger an API call, once the calendar is ready to be filled\n            afterLoad: null,\n\n            // Callback after loading the next domain in the calendar\n            afterLoadNextDomain: null,\n\n            // Callback after loading the previous domain in the calendar\n            afterLoadPreviousDomain: null,\n\n            // Callback after finishing all actions on the calendar\n            onComplete: null,\n\n            // Callback after fetching the datas, but before applying them to the calendar\n            // Used mainly to convert the datas if they're not formatted like expected\n            // Takes the fetched \"data\" object as argument, must return a json object\n            // formatted like {timestamp:count, timestamp2:count2},\n            afterLoadData(data) {\n                return data;\n            },\n\n            // Callback triggered after calling next().\n            // The `status` argument is equal to true if there is no\n            // more next domain to load\n            //\n            // This callback is also executed once, after calling previous(),\n            // only when the max domain is reached\n            onMaxDomainReached: null,\n\n            // Callback triggered after calling previous().\n            // The `status` argument is equal to true if there is no\n            // more previous domain to load\n            //\n            // This callback is also executed once, after calling next(),\n            // only when the min domain is reached\n            onMinDomainReached: null\n        };\n\n        this._domainType = {\n            \"min\": {\n                name: \"minute\",\n                level: 10,\n                maxItemNumber: 60,\n                defaultRowNumber: 10,\n                defaultColumnNumber: 6,\n                row(d) {\n                    return self.getSubDomainRowNumber(d);\n                },\n                column(d) {\n                    return self.getSubDomainColumnNumber(d);\n                },\n                position: {\n                    x(d) {\n                        return Math.floor(d.getMinutes() / self._domainType.min.row(d));\n                    },\n                    y(d) {\n                        return d.getMinutes() % self._domainType.min.row(d);\n                    }\n                },\n                format: {\n                    date: \"%H:%M, %A %B %-e, %Y\",\n                    legend: \"\",\n                    connector: \"at\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes()).getTime();\n                }\n            },\n            \"hour\": {\n                name: \"hour\",\n                level: 20,\n                maxItemNumber(d) {\n                    switch (self.options.domain) {\n                        case \"day\":\n                            return 24;\n                        case \"week\":\n                            return 24 * 7;\n                        case \"month\":\n                            return 24 * (self.options.domainDynamicDimension ? self.getDayCountInMonth(d) : 31);\n                    }\n                },\n                defaultRowNumber: 6,\n                defaultColumnNumber(d) {\n                    switch (self.options.domain) {\n                        case \"day\":\n                            return 4;\n                        case \"week\":\n                            return 28;\n                        case \"month\":\n                            return self.options.domainDynamicDimension ? self.getDayCountInMonth(d) : 31;\n                    }\n                },\n                row(d) {\n                    return self.getSubDomainRowNumber(d);\n                },\n                column(d) {\n                    return self.getSubDomainColumnNumber(d);\n                },\n                position: {\n                    x(d) {\n                        if (self.options.domain === \"month\") {\n                            if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                                return Math.floor((d.getHours() + (d.getDate() - 1) * 24) / self._domainType.hour.row(d));\n                            }\n                            return Math.floor(d.getHours() / self._domainType.hour.row(d)) + (d.getDate() - 1) * 4;\n                        } else if (self.options.domain === \"week\") {\n                            if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                                return Math.floor((d.getHours() + self.getWeekDay(d) * 24) / self._domainType.hour.row(d));\n                            }\n                            return Math.floor(d.getHours() / self._domainType.hour.row(d)) + self.getWeekDay(d) * 4;\n                        }\n                        return Math.floor(d.getHours() / self._domainType.hour.row(d));\n                    },\n                    y(d) {\n                        var p = d.getHours();\n                        if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                            switch (self.options.domain) {\n                                case \"month\":\n                                    p += (d.getDate() - 1) * 24;\n                                    break;\n                                case \"week\":\n                                    p += self.getWeekDay(d) * 24;\n                                    break;\n                            }\n                        }\n                        return Math.floor(p % self._domainType.hour.row(d));\n                    }\n                },\n                format: {\n                    date: \"%Hh, %A %B %-e, %Y\",\n                    legend: \"%H:00\",\n                    connector: \"at\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours()).getTime();\n                }\n            },\n            \"day\": {\n                name: \"day\",\n                level: 30,\n                maxItemNumber(d) {\n                    switch (self.options.domain) {\n                        case \"week\":\n                            return 7;\n                        case \"month\":\n                            return self.options.domainDynamicDimension ? self.getDayCountInMonth(d) : 31;\n                        case \"year\":\n                            return self.options.domainDynamicDimension ? self.getDayCountInYear(d) : 366;\n                    }\n                },\n                defaultColumnNumber(d) {\n                    d = new Date(d);\n                    switch (self.options.domain) {\n                        case \"week\":\n                            return 1;\n                        case \"month\":\n                            return (self.options.domainDynamicDimension && !self.options.verticalOrientation) ? (self.getWeekNumber(new Date(d.getFullYear(), d.getMonth() + 1, 0)) - self.getWeekNumber(d) + 1) : 6;\n                        case \"year\":\n                            return (self.options.domainDynamicDimension ? (self.getWeekNumber(new Date(d.getFullYear(), 11, 31)) - self.getWeekNumber(new Date(d.getFullYear(), 0)) + 1) : 54);\n                    }\n                },\n                defaultRowNumber: 7,\n                row(d) {\n                    return self.getSubDomainRowNumber(d);\n                },\n                column(d) {\n                    return self.getSubDomainColumnNumber(d);\n                },\n                position: {\n                    x(d) {\n                        switch (self.options.domain) {\n                            case \"week\":\n                                return Math.floor(self.getWeekDay(d) / self._domainType.day.row(d));\n                            case \"month\":\n                                if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                                    return Math.floor((d.getDate() - 1) / self._domainType.day.row(d));\n                                }\n                                return self.getWeekNumber(d) - self.getWeekNumber(new Date(d.getFullYear(), d.getMonth()));\n                            case \"year\":\n                                if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                                    return Math.floor((self.getDayOfYear(d) - 1) / self._domainType.day.row(d));\n                                }\n                                return self.getWeekNumber(d);\n                        }\n                    },\n                    y(d) {\n                        var p = self.getWeekDay(d);\n                        if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                            switch (self.options.domain) {\n                                case \"year\":\n                                    p = self.getDayOfYear(d) - 1;\n                                    break;\n                                case \"week\":\n                                    p = self.getWeekDay(d);\n                                    break;\n                                case \"month\":\n                                    p = d.getDate() - 1;\n                                    break;\n                            }\n                        }\n                        return Math.floor(p % self._domainType.day.row(d));\n                    }\n                },\n                format: {\n                    date: \"%A %B %-e, %Y\",\n                    legend: \"%e %b\",\n                    connector: \"on\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear(), d.getMonth(), d.getDate()).getTime();\n                }\n            },\n            \"week\": {\n                name: \"week\",\n                level: 40,\n                maxItemNumber: 54,\n                defaultColumnNumber(d) {\n                    d = new Date(d);\n                    switch (self.options.domain) {\n                        case \"year\":\n                            return self._domainType.week.maxItemNumber;\n                        case \"month\":\n                            return self.options.domainDynamicDimension ? self.getWeekNumber(new Date(d.getFullYear(), d.getMonth() + 1, 0)) - self.getWeekNumber(d) : 5;\n                    }\n                },\n                defaultRowNumber: 1,\n                row(d) {\n                    return self.getSubDomainRowNumber(d);\n                },\n                column(d) {\n                    return self.getSubDomainColumnNumber(d);\n                },\n                position: {\n                    x(d) {\n                        switch (self.options.domain) {\n                            case \"year\":\n                                return Math.floor(self.getWeekNumber(d) / self._domainType.week.row(d));\n                            case \"month\":\n                                return Math.floor(self.getMonthWeekNumber(d) / self._domainType.week.row(d));\n                        }\n                    },\n                    y(d) {\n                        return self.getWeekNumber(d) % self._domainType.week.row(d);\n                    }\n                },\n                format: {\n                    date: \"%B Week #%W\",\n                    legend: \"%B Week #%W\",\n                    connector: \"in\"\n                },\n                extractUnit(d) {\n                    var dt = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                    // According to ISO-8601, week number computation are based on week starting on Monday\n                    var weekDay = dt.getDay() - (self.options.weekStartOnMonday ? 1 : 0);\n                    if (weekDay < 0) {\n                        weekDay = 6;\n                    }\n                    dt.setDate(dt.getDate() - weekDay);\n                    return dt.getTime();\n                }\n            },\n            \"month\": {\n                name: \"month\",\n                level: 50,\n                maxItemNumber: 12,\n                defaultColumnNumber: 12,\n                defaultRowNumber: 1,\n                row() {\n                    return self.getSubDomainRowNumber();\n                },\n                column() {\n                    return self.getSubDomainColumnNumber();\n                },\n                position: {\n                    x(d) {\n                        return Math.floor(d.getMonth() / self._domainType.month.row(d));\n                    },\n                    y(d) {\n                        return d.getMonth() % self._domainType.month.row(d);\n                    }\n                },\n                format: {\n                    date: \"%B %Y\",\n                    legend: \"%B\",\n                    connector: \"in\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear(), d.getMonth()).getTime();\n                }\n            },\n            \"year\": {\n                name: \"year\",\n                level: 60,\n                row() {\n                    return self.options.rowLimit || 1;\n                },\n                column() {\n                    return self.options.colLimit || 1;\n                },\n                position: {\n                    x() {\n                        return 1;\n                    },\n                    y() {\n                        return 1;\n                    }\n                },\n                format: {\n                    date: \"%Y\",\n                    legend: \"%Y\",\n                    connector: \"in\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear()).getTime();\n                }\n            }\n        };\n\n        for (var type in this._domainType) {\n            if (this._domainType.hasOwnProperty(type)) {\n                var d = this._domainType[type];\n                this._domainType[\"x_\" + type] = {\n                    name: \"x_\" + type,\n                    level: d.type,\n                    maxItemNumber: d.maxItemNumber,\n                    defaultRowNumber: d.defaultRowNumber,\n                    defaultColumnNumber: d.defaultColumnNumber,\n                    row: d.column,\n                    column: d.row,\n                    position: {\n                        x: d.position.y,\n                        y: d.position.x\n                    },\n                    format: d.format,\n                    extractUnit: d.extractUnit\n                };\n            }\n        }\n\n        // Record the address of the last inserted domain when browsing\n        this.lastInsertedSvg = null;\n\n        this._completed = false;\n\n        // Record all the valid domains\n        // Each domain value is a timestamp in milliseconds\n        this._domains = d3.map();\n\n        this.graphDim = {\n            width: 0,\n            height: 0\n        };\n\n        this.legendDim = {\n            width: 0,\n            height: 0\n        };\n\n        this.NAVIGATE_LEFT = 1;\n        this.NAVIGATE_RIGHT = 2;\n\n        // Various update mode when using the update() API\n        this.RESET_ALL_ON_UPDATE = 0;\n        this.RESET_SINGLE_ON_UPDATE = 1;\n        this.APPEND_ON_UPDATE = 2;\n\n        this.DEFAULT_LEGEND_MARGIN = 10;\n\n        this.root = null;\n        this.tooltip = null;\n\n        this._maxDomainReached = false;\n        this._minDomainReached = false;\n\n        this.domainPosition = new DomainPosition();\n        this.Legend = null;\n        this.legendScale = null;\n\n        // List of domains that are skipped because of DST\n        // All times belonging to these domains should be re-assigned to the previous domain\n        this.DSTDomain = [];\n\n        /**\n         * Display the graph for the first time\n         * @return bool True if the calendar is created\n         */\n        this._init = function() {\n\n            self.getDomain(self.options.start).map(function(d) {\n                return d.getTime();\n            }).map(function(d) {\n                self._domains.set(d, self.getSubDomain(d).map(function(d) {\n                    return { t: self._domainType[self.options.subDomain].extractUnit(d), v: null };\n                }));\n            });\n\n            self.root = d3.select(self.options.itemSelector).append(\"svg\").attr(\"class\", \"cal-heatmap-container\");\n\n            self.tooltip = d3.select(self.options.itemSelector)\n                .attr(\"style\", function() {\n                    var current = d3.select(self.options.itemSelector).attr(\"style\");\n                    return (current !== null ? current : \"\") + \"position:relative;\";\n                })\n                .append(\"div\")\n                .attr(\"class\", \"ch-tooltip\");\n\n            self.root.attr(\"x\", 0).attr(\"y\", 0).append(\"svg\").attr(\"class\", \"graph\");\n\n            self.Legend = new Legend(self);\n\n            if (self.options.paintOnLoad) {\n                _initCalendar();\n            }\n\n            return true;\n        };\n\n        function _initCalendar() {\n            self.verticalDomainLabel = (self.options.label.position === \"top\" || self.options.label.position === \"bottom\");\n\n            self.domainVerticalLabelHeight = self.options.label.height === null ? Math.max(25, self.options.cellSize * 2) : self.options.label.height;\n            self.domainHorizontalLabelWidth = 0;\n\n            if (self.options.domainLabelFormat === \"\" && self.options.label.height === null) {\n                self.domainVerticalLabelHeight = 0;\n            }\n\n            if (!self.verticalDomainLabel) {\n                self.domainVerticalLabelHeight = 0;\n                self.domainHorizontalLabelWidth = self.options.label.width;\n            }\n\n            self.paint();\n\n            // =========================================================================//\n            // ATTACHING DOMAIN NAVIGATION EVENT\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n            if (self.options.nextSelector !== false) {\n                d3.select(self.options.nextSelector).on(\"click.\" + self.options.itemNamespace, function() {\n                    d3.event.preventDefault();\n                    return self.loadNextDomain(1);\n                });\n            }\n\n            if (self.options.previousSelector !== false) {\n                d3.select(self.options.previousSelector).on(\"click.\" + self.options.itemNamespace, function() {\n                    d3.event.preventDefault();\n                    return self.loadPreviousDomain(1);\n                });\n            }\n\n            self.Legend.redraw(self.graphDim.width - self.options.domainGutter - self.options.cellPadding);\n            self.afterLoad();\n\n            var domains = self.getDomainKeys();\n\n            // Fill the graph with some datas\n            if (self.options.loadOnInit) {\n                self.getDatas(\n                    self.options.data,\n                    new Date(domains[0]),\n                    self.getSubDomain(domains[domains.length - 1]).pop(),\n                    function() {\n                        self.fill();\n                        self.onComplete();\n                    }\n                );\n            } else {\n                self.onComplete();\n            }\n\n            self.checkIfMinDomainIsReached(domains[0]);\n            self.checkIfMaxDomainIsReached(self.getNextDomain().getTime());\n        }\n\n        // Return the width of the domain block, without the domain gutter\n        // @param int d Domain start timestamp\n        function w(d, outer) {\n            var width = self.options.cellSize * self._domainType[self.options.subDomain].column(d) + self.options.cellPadding * self._domainType[self.options.subDomain].column(d);\n            if (arguments.length === 2 && outer === true) {\n                return width += self.domainHorizontalLabelWidth + self.options.domainGutter + self.options.domainMargin[1] + self.options.domainMargin[3];\n            }\n            return width;\n        }\n\n        // Return the height of the domain block, without the domain gutter\n        function h(d, outer) {\n            var height = self.options.cellSize * self._domainType[self.options.subDomain].row(d) + self.options.cellPadding * self._domainType[self.options.subDomain].row(d);\n            if (arguments.length === 2 && outer === true) {\n                height += self.options.domainGutter + self.domainVerticalLabelHeight + self.options.domainMargin[0] + self.options.domainMargin[2];\n            }\n            return height;\n        }\n\n        /**\n         *\n         *\n         * @param int navigationDir\n         */\n        this.paint = function(navigationDir) {\n\n            var options = self.options;\n\n            if (arguments.length === 0) {\n                navigationDir = false;\n            }\n\n            // Painting all the domains\n            var domainSvg = self.root.select(\".graph\")\n                .selectAll(\".graph-domain\")\n                .data(\n                    function() {\n                        var data = self.getDomainKeys();\n                        return navigationDir === self.NAVIGATE_LEFT ? data.reverse() : data;\n                    },\n                    function(d) {\n                        return d;\n                    }\n                );\n\n            var enteringDomainDim = 0;\n            var exitingDomainDim = 0;\n\n            // =========================================================================//\n            // PAINTING DOMAIN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n\n            var svg = domainSvg\n                .enter()\n                .append(\"svg\")\n                .attr(\"width\", function(d) {\n                    return w(d, true);\n                })\n                .attr(\"height\", function(d) {\n                    return h(d, true);\n                })\n                .attr(\"x\", function(d) {\n                    if (options.verticalOrientation) {\n                        self.graphDim.width = Math.max(self.graphDim.width, w(d, true));\n                        return 0;\n                    } else {\n                        return getDomainPosition(d, self.graphDim, \"width\", w(d, true));\n                    }\n                })\n                .attr(\"y\", function(d) {\n                    if (options.verticalOrientation) {\n                        return getDomainPosition(d, self.graphDim, \"height\", h(d, true));\n                    } else {\n                        self.graphDim.height = Math.max(self.graphDim.height, h(d, true));\n                        return 0;\n                    }\n                })\n                .attr(\"class\", function(d) {\n                    var classname = \"graph-domain\";\n                    var date = new Date(d);\n                    switch (options.domain) {\n                        case \"hour\":\n                            classname += \" h_\" + date.getHours();\n                            /* falls through */\n                        case \"day\":\n                            classname += \" d_\" + date.getDate() + \" dy_\" + date.getDay();\n                            /* falls through */\n                        case \"week\":\n                            classname += \" w_\" + self.getWeekNumber(date);\n                            /* falls through */\n                        case \"month\":\n                            classname += \" m_\" + (date.getMonth() + 1);\n                            /* falls through */\n                        case \"year\":\n                            classname += \" y_\" + date.getFullYear();\n                    }\n                    return classname;\n                });\n\n            self.lastInsertedSvg = svg;\n\n            function getDomainPosition(domainIndex, graphDim, axis, domainDim) {\n                var tmp = 0;\n                switch (navigationDir) {\n                    case false:\n                        tmp = graphDim[axis];\n\n                        graphDim[axis] += domainDim;\n                        self.domainPosition.setPosition(domainIndex, tmp);\n                        return tmp;\n\n                    case self.NAVIGATE_RIGHT:\n                        self.domainPosition.setPosition(domainIndex, graphDim[axis]);\n\n                        enteringDomainDim = domainDim;\n                        exitingDomainDim = self.domainPosition.getPositionFromIndex(1);\n\n                        self.domainPosition.shiftRightBy(exitingDomainDim);\n                        return graphDim[axis];\n\n                    case self.NAVIGATE_LEFT:\n                        tmp = -domainDim;\n\n                        enteringDomainDim = -tmp;\n                        exitingDomainDim = graphDim[axis] - self.domainPosition.getLast();\n\n                        self.domainPosition.setPosition(domainIndex, tmp);\n                        self.domainPosition.shiftLeftBy(enteringDomainDim);\n                        return tmp;\n                }\n            }\n\n            svg.append(\"rect\")\n                .attr(\"width\", function(d) {\n                    return w(d, true) - options.domainGutter - options.cellPadding;\n                })\n                .attr(\"height\", function(d) {\n                    return h(d, true) - options.domainGutter - options.cellPadding;\n                })\n                .attr(\"class\", \"domain-background\");\n\n            // =========================================================================//\n            // PAINTING SUBDOMAINS\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n            var subDomainSvgGroup = svg.append(\"svg\")\n                .attr(\"x\", function() {\n                    if (options.label.position === \"left\") {\n                        return self.domainHorizontalLabelWidth + options.domainMargin[3];\n                    } else {\n                        return options.domainMargin[3];\n                    }\n                })\n                .attr(\"y\", function() {\n                    if (options.label.position === \"top\") {\n                        return self.domainVerticalLabelHeight + options.domainMargin[0];\n                    } else {\n                        return options.domainMargin[0];\n                    }\n                })\n                .attr(\"class\", \"graph-subdomain-group\");\n\n            var rect = subDomainSvgGroup\n                .selectAll(\"g\")\n                .data(function(d) {\n                    return self._domains.get(d);\n                })\n                .enter()\n                .append(\"g\");\n\n            rect\n                .append(\"rect\")\n                .attr(\"class\", function(d) {\n                    return \"graph-rect\" + self.getHighlightClassName(d.t) + (options.onClick !== null ? \" hover_cursor\" : \"\");\n                })\n                .attr(\"width\", options.cellSize)\n                .attr(\"height\", options.cellSize)\n                .attr(\"x\", function(d) {\n                    return self.positionSubDomainX(d.t);\n                })\n                .attr(\"y\", function(d) {\n                    return self.positionSubDomainY(d.t);\n                })\n                .on(\"click\", function(d) {\n                    if (options.onClick !== null) {\n                        return self.onClick(new Date(d.t), d.v);\n                    }\n                })\n                .call(function(selection) {\n                    if (options.cellRadius > 0) {\n                        selection\n                            .attr(\"rx\", options.cellRadius)\n                            .attr(\"ry\", options.cellRadius);\n                    }\n\n                    if (self.legendScale !== null && options.legendColors !== null && options.legendColors.hasOwnProperty(\"base\")) {\n                        selection.attr(\"fill\", options.legendColors.base);\n                    }\n\n                    if (options.tooltip) {\n                        selection.on(\"mouseover\", function(d) {\n                            var domainNode = this.parentNode.parentNode;\n\n                            self.tooltip\n                                .html(self.getSubDomainTitle(d))\n                                .attr(\"style\", \"display: block;\");\n\n                            var tooltipPositionX = self.positionSubDomainX(d.t) - self.tooltip.node().offsetWidth / 2 + options.cellSize / 2;\n                            var tooltipPositionY = self.positionSubDomainY(d.t) - self.tooltip.node().offsetHeight - options.cellSize / 2;\n\n                            // Offset by the domain position\n                            tooltipPositionX += parseInt(domainNode.getAttribute(\"x\"), 10);\n                            tooltipPositionY += parseInt(domainNode.getAttribute(\"y\"), 10);\n\n                            // Offset by the calendar position (when legend is left/top)\n                            tooltipPositionX += parseInt(self.root.select(\".graph\").attr(\"x\"), 10);\n                            tooltipPositionY += parseInt(self.root.select(\".graph\").attr(\"y\"), 10);\n\n                            // Offset by the inside domain position (when label is left/top)\n                            tooltipPositionX += parseInt(domainNode.parentNode.getAttribute(\"x\"), 10);\n                            tooltipPositionY += parseInt(domainNode.parentNode.getAttribute(\"y\"), 10);\n\n                            self.tooltip.attr(\"style\",\n                                \"display: block; \" +\n                                \"left: \" + tooltipPositionX + \"px; \" +\n                                \"top: \" + tooltipPositionY + \"px;\");\n                        });\n\n                        selection.on(\"mouseout\", function() {\n                            self.tooltip\n                                .attr(\"style\", \"display:none\")\n                                .html(\"\");\n                        });\n                    }\n                });\n\n            // Appending a title to each subdomain\n            if (!options.tooltip) {\n                rect.append(\"title\").text(function(d) {\n                    return self.formatDate(new Date(d.t), options.subDomainDateFormat);\n                });\n            }\n\n            // =========================================================================//\n            // PAINTING LABEL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n            if (options.domainLabelFormat !== \"\") {\n                svg.append(\"text\")\n                    .attr(\"class\", \"graph-label\")\n                    .attr(\"y\", function(d) {\n                        var y = options.domainMargin[0];\n                        switch (options.label.position) {\n                            case \"top\":\n                                y += self.domainVerticalLabelHeight / 2;\n                                break;\n                            case \"bottom\":\n                                y += h(d) + self.domainVerticalLabelHeight / 2;\n                        }\n\n                        return y + options.label.offset.y *\n                            (\n                                ((options.label.rotate === \"right\" && options.label.position === \"right\") ||\n                                    (options.label.rotate === \"left\" && options.label.position === \"left\")) ?\n                                -1 : 1\n                            );\n                    })\n                    .attr(\"x\", function(d) {\n                        var x = options.domainMargin[3];\n                        switch (options.label.position) {\n                            case \"right\":\n                                x += w(d);\n                                break;\n                            case \"bottom\":\n                            case \"top\":\n                                x += w(d) / 2;\n                        }\n\n                        if (options.label.align === \"right\") {\n                            return x + self.domainHorizontalLabelWidth - options.label.offset.x *\n                                (options.label.rotate === \"right\" ? -1 : 1);\n                        }\n                        return x + options.label.offset.x;\n\n                    })\n                    .attr(\"text-anchor\", function() {\n                        switch (options.label.align) {\n                            case \"start\":\n                            case \"left\":\n                                return \"start\";\n                            case \"end\":\n                            case \"right\":\n                                return \"end\";\n                            default:\n                                return \"middle\";\n                        }\n                    })\n                    .attr(\"dominant-baseline\", function() {\n                        return self.verticalDomainLabel ? \"middle\" : \"top\";\n                    })\n                    .text(function(d) {\n                        return self.formatDate(new Date(d), options.domainLabelFormat);\n                    })\n                    .call(domainRotate);\n            }\n\n            function domainRotate(selection) {\n                switch (options.label.rotate) {\n                    case \"right\":\n                        selection\n                            .attr(\"transform\", function(d) {\n                                var s = \"rotate(90), \";\n                                switch (options.label.position) {\n                                    case \"right\":\n                                        s += \"translate(-\" + w(d) + \" , -\" + w(d) + \")\";\n                                        break;\n                                    case \"left\":\n                                        s += \"translate(0, -\" + self.domainHorizontalLabelWidth + \")\";\n                                        break;\n                                }\n\n                                return s;\n                            });\n                        break;\n                    case \"left\":\n                        selection\n                            .attr(\"transform\", function(d) {\n                                var s = \"rotate(270), \";\n                                switch (options.label.position) {\n                                    case \"right\":\n                                        s += \"translate(-\" + (w(d) + self.domainHorizontalLabelWidth) + \" , \" + w(d) + \")\";\n                                        break;\n                                    case \"left\":\n                                        s += \"translate(-\" + (self.domainHorizontalLabelWidth) + \" , \" + self.domainHorizontalLabelWidth + \")\";\n                                        break;\n                                }\n\n                                return s;\n                            });\n                        break;\n                }\n            }\n\n            // =========================================================================//\n            // PAINTING DOMAIN SUBDOMAIN CONTENT\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n            if (options.subDomainTextFormat !== null) {\n                rect\n                    .append(\"text\")\n                    .attr(\"class\", function(d) {\n                        return \"subdomain-text\" + self.getHighlightClassName(d.t);\n                    })\n                    .attr(\"x\", function(d) {\n                        return self.positionSubDomainX(d.t) + options.cellSize / 2;\n                    })\n                    .attr(\"y\", function(d) {\n                        return self.positionSubDomainY(d.t) + options.cellSize / 2;\n                    })\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"dominant-baseline\", \"central\")\n                    .text(function(d) {\n                        return self.formatDate(new Date(d.t), options.subDomainTextFormat);\n                    });\n            }\n\n            // =========================================================================//\n            // ANIMATION\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n\n            if (navigationDir !== false) {\n                domainSvg.transition().duration(options.animationDuration)\n                    .attr(\"x\", function(d) {\n                        return options.verticalOrientation ? 0 : self.domainPosition.getPosition(d);\n                    })\n                    .attr(\"y\", function(d) {\n                        return options.verticalOrientation ? self.domainPosition.getPosition(d) : 0;\n                    });\n            }\n\n            var tempWidth = self.graphDim.width;\n            var tempHeight = self.graphDim.height;\n\n            if (options.verticalOrientation) {\n                self.graphDim.height += enteringDomainDim - exitingDomainDim;\n            } else {\n                self.graphDim.width += enteringDomainDim - exitingDomainDim;\n            }\n\n            // At the time of exit, domainsWidth and domainsHeight already automatically shifted\n            domainSvg.exit().transition().duration(options.animationDuration)\n                .attr(\"x\", function(d) {\n                    if (options.verticalOrientation) {\n                        return 0;\n                    } else {\n                        switch (navigationDir) {\n                            case self.NAVIGATE_LEFT:\n                                return Math.min(self.graphDim.width, tempWidth);\n                            case self.NAVIGATE_RIGHT:\n                                return -w(d, true);\n                        }\n                    }\n                })\n                .attr(\"y\", function(d) {\n                    if (options.verticalOrientation) {\n                        switch (navigationDir) {\n                            case self.NAVIGATE_LEFT:\n                                return Math.min(self.graphDim.height, tempHeight);\n                            case self.NAVIGATE_RIGHT:\n                                return -h(d, true);\n                        }\n                    } else {\n                        return 0;\n                    }\n                })\n                .remove();\n\n            // Resize the root container\n            self.resize();\n        };\n    }\n\n    /**\n     * Validate and merge user settings with default settings\n     *\n     * @param  {object} settings User settings\n     * @return {bool} False if settings contains error\n     */\n    /* jshint maxstatements:false */\n    init(settings) {\n        \"use strict\";\n\n        var parent = this;\n\n        var options = parent.options = mergeRecursive(parent.options, settings);\n\n        // Fatal errors\n        // Stop script execution on error\n        validateDomainType();\n        validateSelector(options.itemSelector, false, \"itemSelector\");\n\n        if (parent.allowedDataType.indexOf(options.dataType) === -1) {\n            throw new Error(\"The data type '\" + options.dataType + \"' is not valid data type\");\n        }\n\n        if (d3.select(options.itemSelector).node() === null) {\n            throw new Error(\"The node '\" + options.itemSelector + \"' specified in itemSelector does not exists\");\n        }\n\n        try {\n            validateSelector(options.nextSelector, true, \"nextSelector\");\n            validateSelector(options.previousSelector, true, \"previousSelector\");\n        } catch (error) {\n            console.log(error.message);\n            return false;\n        }\n\n        // If other settings contains error, will fallback to default\n\n        if (!settings.hasOwnProperty(\"subDomain\")) {\n            this.options.subDomain = getOptimalSubDomain(settings.domain);\n        }\n\n        if (typeof options.itemNamespace !== \"string\" || options.itemNamespace === \"\") {\n            console.log(\"itemNamespace can not be empty, falling back to cal-heatmap\");\n            options.itemNamespace = \"cal-heatmap\";\n        }\n\n        // Don't touch these settings\n        var s = [\"data\", \"onComplete\", \"onClick\", \"afterLoad\", \"afterLoadData\", \"afterLoadPreviousDomain\", \"afterLoadNextDomain\"];\n\n        for (var k in s) {\n            if (settings.hasOwnProperty(s[k])) {\n                options[s[k]] = settings[s[k]];\n            }\n        }\n\n        options.subDomainDateFormat = (typeof options.subDomainDateFormat === \"string\" || typeof options.subDomainDateFormat === \"function\" ? options.subDomainDateFormat : this._domainType[options.subDomain].format.date);\n        options.domainLabelFormat = (typeof options.domainLabelFormat === \"string\" || typeof options.domainLabelFormat === \"function\" ? options.domainLabelFormat : this._domainType[options.domain].format.legend);\n        options.subDomainTextFormat = ((typeof options.subDomainTextFormat === \"string\" && options.subDomainTextFormat !== \"\") || typeof options.subDomainTextFormat === \"function\" ? options.subDomainTextFormat : null);\n        options.domainMargin = expandMarginSetting(options.domainMargin);\n        options.legendMargin = expandMarginSetting(options.legendMargin);\n        options.highlight = parent.expandDateSetting(options.highlight);\n        options.itemName = expandItemName(options.itemName);\n        options.colLimit = parseColLimit(options.colLimit);\n        options.rowLimit = parseRowLimit(options.rowLimit);\n        if (!settings.hasOwnProperty(\"legendMargin\")) {\n            autoAddLegendMargin();\n        }\n        autoAlignLabel();\n\n        /**\n         * Validate that a queryString is valid\n         *\n         * @param  {Element|string|bool} selector   The queryString to test\n         * @param  {bool}\tcanBeFalse\tWhether false is an accepted and valid value\n         * @param  {string} name\t\tName of the tested selector\n         * @throws {Error}\t\t\t\tIf the selector is not valid\n         * @return {bool}\t\t\t\tTrue if the selector is a valid queryString\n         */\n        function validateSelector(selector, canBeFalse, name) {\n            if (((canBeFalse && selector === false) || selector instanceof Element || typeof selector === \"string\") && selector !== \"\") {\n                return true;\n            }\n            throw new Error(\"The \" + name + \" is not valid\");\n        }\n\n        /**\n         * Return the optimal subDomain for the specified domain\n         *\n         * @param  {string} domain a domain name\n         * @return {string}        the subDomain name\n         */\n        function getOptimalSubDomain(domain) {\n            switch (domain) {\n                case \"year\":\n                    return \"month\";\n                case \"month\":\n                    return \"day\";\n                case \"week\":\n                    return \"day\";\n                case \"day\":\n                    return \"hour\";\n                default:\n                    return \"min\";\n            }\n        }\n\n        /**\n         * Ensure that the domain and subdomain are valid\n         *\n         * @throw {Error} when domain or subdomain are not valid\n         * @return {bool} True if domain and subdomain are valid and compatible\n         */\n        function validateDomainType() {\n            if (!parent._domainType.hasOwnProperty(options.domain) || options.domain === \"min\" || options.domain.substring(0, 2) === \"x_\") {\n                throw new Error(\"The domain '\" + options.domain + \"' is not valid\");\n            }\n\n            if (!parent._domainType.hasOwnProperty(options.subDomain) || options.subDomain === \"year\") {\n                throw new Error(\"The subDomain '\" + options.subDomain + \"' is not valid\");\n            }\n\n            if (parent._domainType[options.domain].level <= parent._domainType[options.subDomain].level) {\n                throw new Error(\"'\" + options.subDomain + \"' is not a valid subDomain to '\" + options.domain + \"'\");\n            }\n\n            return true;\n        }\n\n        /**\n         * Fine-tune the label alignement depending on its position\n         *\n         * @return void\n         */\n        function autoAlignLabel() {\n            // Auto-align label, depending on it's position\n            if (!settings.hasOwnProperty(\"label\") || (settings.hasOwnProperty(\"label\") && !settings.label.hasOwnProperty(\"align\"))) {\n                switch (options.label.position) {\n                    case \"left\":\n                        options.label.align = \"right\";\n                        break;\n                    case \"right\":\n                        options.label.align = \"left\";\n                        break;\n                    default:\n                        options.label.align = \"center\";\n                }\n\n                if (options.label.rotate === \"left\") {\n                    options.label.align = \"right\";\n                } else if (options.label.rotate === \"right\") {\n                    options.label.align = \"left\";\n                }\n            }\n\n            if (!settings.hasOwnProperty(\"label\") || (settings.hasOwnProperty(\"label\") && !settings.label.hasOwnProperty(\"offset\"))) {\n                if (options.label.position === \"left\" || options.label.position === \"right\") {\n                    options.label.offset = {\n                        x: 10,\n                        y: 15\n                    };\n                }\n            }\n        }\n\n        /**\n         * If not specified, add some margin around the legend depending on its position\n         *\n         * @return void\n         */\n        function autoAddLegendMargin() {\n            switch (options.legendVerticalPosition) {\n                case \"top\":\n                    options.legendMargin[2] = parent.DEFAULT_LEGEND_MARGIN;\n                    break;\n                case \"bottom\":\n                    options.legendMargin[0] = parent.DEFAULT_LEGEND_MARGIN;\n                    break;\n                case \"middle\":\n                case \"center\":\n                    options.legendMargin[options.legendHorizontalPosition === \"right\" ? 3 : 1] = parent.DEFAULT_LEGEND_MARGIN;\n            }\n        }\n\n        /**\n         * Expand a number of an array of numbers to an usable 4 values array\n         *\n         * @param  {integer|array} value\n         * @return {array}        array\n         */\n        function expandMarginSetting(value) {\n            if (typeof value === \"number\") {\n                value = [value];\n            }\n\n            if (!Array.isArray(value)) {\n                console.log(\"Margin only takes an integer or an array of integers\");\n                value = [0];\n            }\n\n            switch (value.length) {\n                case 1:\n                    return [value[0], value[0], value[0], value[0]];\n                case 2:\n                    return [value[0], value[1], value[0], value[1]];\n                case 3:\n                    return [value[0], value[1], value[2], value[1]];\n                case 4:\n                    return value;\n                default:\n                    return value.slice(0, 4);\n            }\n        }\n\n        /**\n         * Convert a string to an array like [singular-form, plural-form]\n         *\n         * @param  {string|array} value Date to convert\n         * @return {array}       An array like [singular-form, plural-form]\n         */\n        function expandItemName(value) {\n            if (typeof value === \"string\") {\n                return [value, value + (value !== \"\" ? \"s\" : \"\")];\n            }\n\n            if (Array.isArray(value)) {\n                if (value.length === 1) {\n                    return [value[0], value[0] + \"s\"];\n                } else if (value.length > 2) {\n                    return value.slice(0, 2);\n                }\n\n                return value;\n            }\n\n            return [\"item\", \"items\"];\n        }\n\n        function parseColLimit(value) {\n            return value > 0 ? value : null;\n        }\n\n        function parseRowLimit(value) {\n            if (value > 0 && options.colLimit > 0) {\n                console.log(\"colLimit and rowLimit are mutually exclusive, rowLimit will be ignored\");\n                return null;\n            }\n            return value > 0 ? value : null;\n        }\n\n        return this._init();\n\n    }\n\n        /**\n         * Convert a keyword or an array of keyword/date to an array of date objects\n         *\n         * @param  {string|array|Date} value Data to convert\n         * @return {array}       An array of Dates\n         */\n        expandDateSetting(value) {\n            \"use strict\";\n\n            if (!Array.isArray(value)) {\n                value = [value];\n            }\n\n            return value.map(function(data) {\n                if (data === \"now\") {\n                    return new Date();\n                }\n                if (data instanceof Date) {\n                    return data;\n                }\n                return false;\n            }).filter(function(d) {\n                return d !== false;\n            });\n        }\n\n        /**\n         * Fill the calendar by coloring the cells\n         *\n         * @param array svg An array of html node to apply the transformation to (optional)\n         *                  It's used to limit the painting to only a subset of the calendar\n         * @return void\n         */\n        fill(svg) {\n            \"use strict\";\n\n            var parent = this;\n            var options = parent.options;\n\n            if (arguments.length === 0) {\n                svg = parent.root.selectAll(\".graph-domain\");\n            }\n\n            var rect = svg\n                .selectAll(\"svg\").selectAll(\"g\")\n                .data(function(d) {\n                    return parent._domains.get(d);\n                });\n\n            /**\n             * Colorize the cell via a style attribute if enabled\n             */\n            function addStyle(element) {\n                if (parent.legendScale === null) {\n                    return false;\n                }\n\n                element.attr(\"fill\", function(d) {\n                    if (d.v === null && (options.hasOwnProperty(\"considerMissingDataAsZero\") && !options.considerMissingDataAsZero)) {\n                        if (options.legendColors.hasOwnProperty(\"base\")) {\n                            return options.legendColors.base;\n                        }\n                    }\n\n                    if (options.legendColors !== null && options.legendColors.hasOwnProperty(\"empty\") &&\n                        (d.v === 0 || (d.v === null && options.hasOwnProperty(\"considerMissingDataAsZero\") && options.considerMissingDataAsZero))\n                    ) {\n                        return options.legendColors.empty;\n                    }\n\n                    if (d.v < 0 && options.legend[0] > 0 && options.legendColors !== null && options.legendColors.hasOwnProperty(\"overflow\")) {\n                        return options.legendColors.overflow;\n                    }\n\n                    return parent.legendScale(Math.min(d.v, options.legend[options.legend.length - 1]));\n                });\n            }\n\n            rect.transition().duration(options.animationDuration).select(\"rect\")\n                .attr(\"class\", function(d) {\n\n                    var htmlClass = parent.getHighlightClassName(d.t).trim().split(\" \");\n                    var pastDate = parent.dateIsLessThan(d.t, new Date());\n                    var sameDate = parent.dateIsEqual(d.t, new Date());\n\n                    if (parent.legendScale === null ||\n                        (d.v === null && (options.hasOwnProperty(\"considerMissingDataAsZero\") && !options.considerMissingDataAsZero) && !options.legendColors.hasOwnProperty(\"base\"))\n                    ) {\n                        htmlClass.push(\"graph-rect\");\n                    }\n\n                    if (sameDate) {\n                        htmlClass.push(\"now\");\n                    } else if (!pastDate) {\n                        htmlClass.push(\"future\");\n                    }\n\n                    if (d.v !== null) {\n                        htmlClass.push(parent.Legend.getClass(d.v, (parent.legendScale === null)));\n                    } else if (options.considerMissingDataAsZero && pastDate) {\n                        htmlClass.push(parent.Legend.getClass(0, (parent.legendScale === null)));\n                    }\n\n                    if (options.onClick !== null) {\n                        htmlClass.push(\"hover_cursor\");\n                    }\n\n                    return htmlClass.join(\" \");\n                })\n                .call(addStyle);\n\n            rect.transition().duration(options.animationDuration).select(\"title\")\n                .text(function(d) {\n                    return parent.getSubDomainTitle(d);\n                });\n\n            function formatSubDomainText(element) {\n                if (typeof options.subDomainTextFormat === \"function\") {\n                    element.text(function(d) {\n                        return options.subDomainTextFormat(d.t, d.v);\n                    });\n                }\n            }\n\n            /**\n             * Change the subDomainText class if necessary\n             * Also change the text, e.g when text is representing the value\n             * instead of the date\n             */\n            rect.transition().duration(options.animationDuration).select(\"text\")\n                .attr(\"class\", function(d) {\n                    return \"subdomain-text\" + parent.getHighlightClassName(d.t);\n                })\n                .call(formatSubDomainText);\n        }\n\n        /**\n         * Sprintf like function.\n         * Replaces placeholders {0} in string with values from provided object.\n         * \n         * @param string formatted String containing placeholders.\n         * @param object args Object with properties to replace placeholders in string.\n         * \n         * @return String\n         */\n        formatStringWithObject(formatted, args) {\n            \"use strict\";\n            for (var prop in args) {\n                if (args.hasOwnProperty(prop)) {\n                    var regexp = new RegExp(\"\\\\{\" + prop + \"\\\\}\", \"gi\");\n                    formatted = formatted.replace(regexp, args[prop]);\n                }\n            }\n            return formatted;\n        }\n\n        // =========================================================================//\n        // EVENTS CALLBACK\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n        // =========================================================================//\n\n        /**\n         * Helper method for triggering event callback\n         *\n         * @param  string\teventName       Name of the event to trigger\n         * @param  array\tsuccessArgs     List of argument to pass to the callback\n         * @param  boolean  skip\t\t\tWhether to skip the event triggering\n         * @return mixed\tTrue when the triggering was skipped, false on error, else the callback function\n         */\n        triggerEvent(eventName, successArgs, skip) {\n            \"use strict\";\n\n            if ((arguments.length === 3 && skip) || this.options[eventName] === null) {\n                return true;\n            }\n\n            if (typeof this.options[eventName] === \"function\") {\n                if (typeof successArgs === \"function\") {\n                    successArgs = successArgs();\n                }\n                return this.options[eventName].apply(this, successArgs);\n            } else {\n                console.log(\"Provided callback for \" + eventName + \" is not a function.\");\n                return false;\n            }\n        }\n\n        /**\n         * Event triggered on a mouse click on a subDomain cell\n         *\n         * @param  Date\t\td\t\tDate of the subdomain block\n         * @param  int\t\titemNb\tNumber of items in that date\n         */\n        onClick(d, itemNb) {\n            \"use strict\";\n\n            return this.triggerEvent(\"onClick\", [d, itemNb]);\n        }\n\n        /**\n         * Event triggered after drawing the calendar, byt before filling it with data\n         */\n        afterLoad() {\n            \"use strict\";\n\n            return this.triggerEvent(\"afterLoad\");\n        }\n\n        /**\n         * Event triggered after completing drawing and filling the calendar\n         */\n        onComplete() {\n            \"use strict\";\n\n            var response = this.triggerEvent(\"onComplete\", [], this._completed);\n            this._completed = true;\n            return response;\n        }\n\n        /**\n         * Event triggered after shifting the calendar one domain back\n         *\n         * @param  Date\t\tstart\tDomain start date\n         * @param  Date\t\tend\t\tDomain end date\n         */\n        afterLoadPreviousDomain(start) {\n            \"use strict\";\n\n            var parent = this;\n            return this.triggerEvent(\"afterLoadPreviousDomain\", function() {\n                var subDomain = parent.getSubDomain(start);\n                return [subDomain.shift(), subDomain.pop()];\n            });\n        }\n\n        /**\n         * Event triggered after shifting the calendar one domain above\n         *\n         * @param  Date\t\tstart\tDomain start date\n         * @param  Date\t\tend\t\tDomain end date\n         */\n        afterLoadNextDomain(start) {\n            \"use strict\";\n\n            var parent = this;\n            return this.triggerEvent(\"afterLoadNextDomain\", function() {\n                var subDomain = parent.getSubDomain(start);\n                return [subDomain.shift(), subDomain.pop()];\n            });\n        }\n\n        /**\n         * Event triggered after loading the leftmost domain allowed by minDate\n         *\n         * @param  boolean  reached True if the leftmost domain was reached\n         */\n        onMinDomainReached(reached) {\n            \"use strict\";\n\n            this._minDomainReached = reached;\n            return this.triggerEvent(\"onMinDomainReached\", [reached]);\n        }\n\n        /**\n         * Event triggered after loading the rightmost domain allowed by maxDate\n         *\n         * @param  boolean  reached True if the rightmost domain was reached\n         */\n        onMaxDomainReached(reached) {\n            \"use strict\";\n\n            this._maxDomainReached = reached;\n            return this.triggerEvent(\"onMaxDomainReached\", [reached]);\n        }\n\n        checkIfMinDomainIsReached(date, upperBound) {\n            \"use strict\";\n\n            if (this.minDomainIsReached(date)) {\n                this.onMinDomainReached(true);\n            }\n\n            if (arguments.length === 2) {\n                if (this._maxDomainReached && !this.maxDomainIsReached(upperBound)) {\n                    this.onMaxDomainReached(false);\n                }\n            }\n        }\n\n        checkIfMaxDomainIsReached(date, lowerBound) {\n            \"use strict\";\n\n            if (this.maxDomainIsReached(date)) {\n                this.onMaxDomainReached(true);\n            }\n\n            if (arguments.length === 2) {\n                if (this._minDomainReached && !this.minDomainIsReached(lowerBound)) {\n                    this.onMinDomainReached(false);\n                }\n            }\n        }\n\n        // =========================================================================//\n        // FORMATTER\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n        // =========================================================================//\n\n        formatNumber() {\n        \treturn d3.format(\",g\").apply(this, arguments);\n        }\n\n        formatDate(d, format) {\n            \"use strict\";\n\n            if (arguments.length < 2) {\n                format = \"title\";\n            }\n\n            if (typeof format === \"function\") {\n                return format(d);\n            } else {\n                var f = d3.timeFormat(format);\n                return f(d);\n            }\n        }\n\n        getSubDomainTitle(d) {\n            \"use strict\";\n\n            if (d.v === null && !this.options.considerMissingDataAsZero) {\n                return this.formatStringWithObject(this.options.subDomainTitleFormat.empty, {\n                    date: this.formatDate(new Date(d.t), this.options.subDomainDateFormat)\n                });\n            } else {\n                var value = d.v;\n                // Consider null as 0\n                if (value === null && this.options.considerMissingDataAsZero) {\n                    value = 0;\n                }\n\n                return this.formatStringWithObject(this.options.subDomainTitleFormat.filled, {\n                    count: this.formatNumber(value),\n                    name: this.options.itemName[(value !== 1 ? 1 : 0)],\n                    connector: this._domainType[this.options.subDomain].format.connector,\n                    date: this.formatDate(new Date(d.t), this.options.subDomainDateFormat)\n                });\n            }\n        }\n\n        // =========================================================================//\n        // DOMAIN NAVIGATION\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n        // =========================================================================//\n\n        /**\n         * Shift the calendar one domain forward\n         *\n         * The new domain is loaded only if it's not beyond maxDate\n         *\n         * @param int n Number of domains to load\n         * @return bool True if the next domain was loaded, else false\n         */\n        loadNextDomain(n) {\n            \"use strict\";\n\n            if (this._maxDomainReached || n === 0) {\n                return false;\n            }\n\n            var bound = this.loadNewDomains(this.NAVIGATE_RIGHT, this.getDomain(this.getNextDomain(), n));\n\n            this.afterLoadNextDomain(bound.end);\n            this.checkIfMaxDomainIsReached(this.getNextDomain().getTime(), bound.start);\n\n            return true;\n        }\n\n        /**\n         * Shift the calendar one domain backward\n         *\n         * The previous domain is loaded only if it's not beyond the minDate\n         *\n         * @param int n Number of domains to load\n         * @return bool True if the previous domain was loaded, else false\n         */\n        loadPreviousDomain(n) {\n            \"use strict\";\n\n            if (this._minDomainReached || n === 0) {\n                return false;\n            }\n\n            var bound = this.loadNewDomains(this.NAVIGATE_LEFT, this.getDomain(this.getDomainKeys()[0], -n).reverse());\n\n            this.afterLoadPreviousDomain(bound.start);\n            this.checkIfMinDomainIsReached(bound.start, bound.end);\n\n            return true;\n        }\n\n        loadNewDomains(direction, newDomains) {\n            \"use strict\";\n\n            var parent = this;\n            var backward = direction === this.NAVIGATE_LEFT;\n            var i = -1;\n            var total = newDomains.length;\n            var domains = this.getDomainKeys();\n\n            function buildSubDomain(d) {\n                return { t: parent._domainType[parent.options.subDomain].extractUnit(d), v: null };\n            }\n\n            // Remove out of bound domains from list of new domains to prepend\n            while (++i < total) {\n                if (backward && this.minDomainIsReached(newDomains[i])) {\n                    newDomains = newDomains.slice(0, i + 1);\n                    break;\n                }\n                if (!backward && this.maxDomainIsReached(newDomains[i])) {\n                    newDomains = newDomains.slice(0, i);\n                    break;\n                }\n            }\n\n            newDomains = newDomains.slice(-this.options.range);\n\n            for (i = 0, total = newDomains.length; i < total; i++) {\n                this._domains.set(\n                    newDomains[i].getTime(),\n                    this.getSubDomain(newDomains[i]).map(buildSubDomain)\n                );\n\n                this._domains.remove(backward ? domains.pop() : domains.shift());\n            }\n\n            domains = this.getDomainKeys();\n\n            if (backward) {\n                newDomains = newDomains.reverse();\n            }\n\n            this.paint(direction);\n\n            this.getDatas(\n                this.options.data,\n                newDomains[0],\n                this.getSubDomain(newDomains[newDomains.length - 1]).pop(),\n                function() {\n                    parent.fill(parent.lastInsertedSvg);\n                }\n            );\n\n            return {\n                start: newDomains[backward ? 0 : 1],\n                end: domains[domains.length - 1]\n            };\n        }\n\n        /**\n         * Return whether a date is inside the scope determined by maxDate\n         *\n         * @param int datetimestamp The timestamp in ms to test\n         * @return bool True if the specified date correspond to the calendar upper bound\n         */\n        maxDomainIsReached(datetimestamp) {\n            \"use strict\";\n\n            return (this.options.maxDate !== null && (this.options.maxDate.getTime() < datetimestamp));\n        }\n\n        /**\n         * Return whether a date is inside the scope determined by minDate\n         *\n         * @param int datetimestamp The timestamp in ms to test\n         * @return bool True if the specified date correspond to the calendar lower bound\n         */\n        minDomainIsReached(datetimestamp) {\n            \"use strict\";\n\n            return (this.options.minDate !== null && (this.options.minDate.getTime() >= datetimestamp));\n        }\n\n        /**\n         * Return the list of the calendar's domain timestamp\n         *\n         * @return Array a sorted array of timestamp\n         */\n        getDomainKeys() {\n            \"use strict\";\n\n            return this._domains.keys()\n                .map(function(d) {\n                    return parseInt(d, 10);\n                })\n                .sort(function(a, b) {\n                    return a - b;\n                });\n        }\n\n        // =========================================================================//\n        // POSITIONNING\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n        // =========================================================================//\n\n        positionSubDomainX(d) {\n            \"use strict\";\n\n            var index = this._domainType[this.options.subDomain].position.x(new Date(d));\n            return index * this.options.cellSize + index * this.options.cellPadding;\n        }\n\n        positionSubDomainY(d) {\n            \"use strict\";\n\n            var index = this._domainType[this.options.subDomain].position.y(new Date(d));\n            return index * this.options.cellSize + index * this.options.cellPadding;\n        }\n\n        getSubDomainColumnNumber(d) {\n            \"use strict\";\n\n            if (this.options.rowLimit > 0) {\n                var i = this._domainType[this.options.subDomain].maxItemNumber;\n                if (typeof i === \"function\") {\n                    i = i(d);\n                }\n                return Math.ceil(i / this.options.rowLimit);\n            }\n\n            var j = this._domainType[this.options.subDomain].defaultColumnNumber;\n            if (typeof j === \"function\") {\n                j = j(d);\n\n            }\n            return this.options.colLimit || j;\n        }\n\n        getSubDomainRowNumber(d) {\n            \"use strict\";\n\n            if (this.options.colLimit > 0) {\n                var i = this._domainType[this.options.subDomain].maxItemNumber;\n                if (typeof i === \"function\") {\n                    i = i(d);\n                }\n                return Math.ceil(i / this.options.colLimit);\n            }\n\n            var j = this._domainType[this.options.subDomain].defaultRowNumber;\n            if (typeof j === \"function\") {\n                j = j(d);\n\n            }\n            return this.options.rowLimit || j;\n        }\n\n        /**\n         * Return a classname if the specified date should be highlighted\n         *\n         * @param  timestamp date Date of the current subDomain\n         * @return String the highlight class\n         */\n        getHighlightClassName(d) {\n            \"use strict\";\n\n            d = new Date(d);\n\n            if (this.options.highlight.length > 0) {\n                for (var i in this.options.highlight) {\n                    if (this.dateIsEqual(this.options.highlight[i], d)) {\n                        return this.isNow(this.options.highlight[i]) ? \" highlight-now\" : \" highlight\";\n                    }\n                }\n            }\n            return \"\";\n        }\n\n        /**\n         * Return whether the specified date is now,\n         * according to the type of subdomain\n         *\n         * @param  Date d The date to compare\n         * @return bool True if the date correspond to a subdomain cell\n         */\n        isNow(d) {\n            \"use strict\";\n\n            return this.dateIsEqual(d, new Date());\n        }\n\n        /**\n         * Return whether 2 dates are equals\n         * This function is subdomain-aware,\n         * and dates comparison are dependent of the subdomain\n         *\n         * @param  Date dateA First date to compare\n         * @param  Date dateB Secon date to compare\n         * @return bool true if the 2 dates are equals\n         */\n        /* jshint maxcomplexity: false */\n        dateIsEqual(dateA, dateB) {\n            \"use strict\";\n\n            if (!(dateA instanceof Date)) {\n                dateA = new Date(dateA);\n            }\n\n            if (!(dateB instanceof Date)) {\n                dateB = new Date(dateB);\n            }\n\n            switch (this.options.subDomain) {\n                case \"x_min\":\n                case \"min\":\n                    return dateA.getFullYear() === dateB.getFullYear() &&\n                        dateA.getMonth() === dateB.getMonth() &&\n                        dateA.getDate() === dateB.getDate() &&\n                        dateA.getHours() === dateB.getHours() &&\n                        dateA.getMinutes() === dateB.getMinutes();\n                case \"x_hour\":\n                case \"hour\":\n                    return dateA.getFullYear() === dateB.getFullYear() &&\n                        dateA.getMonth() === dateB.getMonth() &&\n                        dateA.getDate() === dateB.getDate() &&\n                        dateA.getHours() === dateB.getHours();\n                case \"x_day\":\n                case \"day\":\n                    return dateA.getFullYear() === dateB.getFullYear() &&\n                        dateA.getMonth() === dateB.getMonth() &&\n                        dateA.getDate() === dateB.getDate();\n                case \"x_week\":\n                case \"week\":\n                    return dateA.getFullYear() === dateB.getFullYear() &&\n                        this.getWeekNumber(dateA) === this.getWeekNumber(dateB);\n                case \"x_month\":\n                case \"month\":\n                    return dateA.getFullYear() === dateB.getFullYear() &&\n                        dateA.getMonth() === dateB.getMonth();\n                default:\n                    return false;\n            }\n        }\n\n\n        /**\n         * Returns wether or not dateA is less than or equal to dateB. This function is subdomain aware.\n         * Performs automatic conversion of values.\n         * @param dateA may be a number or a Date\n         * @param dateB may be a number or a Date\n         * @returns {boolean}\n         */\n        dateIsLessThan(dateA, dateB) {\n            \"use strict\";\n\n            if (!(dateA instanceof Date)) {\n                dateA = new Date(dateA);\n            }\n\n            if (!(dateB instanceof Date)) {\n                dateB = new Date(dateB);\n            }\n\n\n            function normalizedMillis(date, subdomain) {\n                switch (subdomain) {\n                    case \"x_min\":\n                    case \"min\":\n                        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes()).getTime();\n                    case \"x_hour\":\n                    case \"hour\":\n                        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours()).getTime();\n                    case \"x_day\":\n                    case \"day\":\n                        return new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime();\n                    case \"x_week\":\n                    case \"week\":\n                    case \"x_month\":\n                    case \"month\":\n                        return new Date(date.getFullYear(), date.getMonth()).getTime();\n                    default:\n                        return date.getTime();\n                }\n            }\n\n            return normalizedMillis(dateA, this.options.subDomain) < normalizedMillis(dateB, this.options.subDomain);\n        }\n\n\n        // =========================================================================//\n        // DATE COMPUTATION\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n        // =========================================================================//\n\n        /**\n         * Return the day of the year for the date\n         * @param\tDate\n         * @return  int Day of the year [1,366]\n         */\n        getDayOfYear() {\n        \treturn d3.timeFormat(\"%j\").apply(this, arguments);\n        }\n\n        /**\n         * Return the week number of the year\n         * Monday as the first day of the week\n         * @return int\tWeek number [0-53]\n         */\n        getWeekNumber(d) {\n            \"use strict\";\n\n            var f = this.options.weekStartOnMonday === true ? d3.timeFormat(\"%W\") : d3.timeFormat(\"%U\");\n            return f(d);\n        }\n\n        /**\n         * Return the week number, relative to its month\n         *\n         * @param  int|Date d Date or timestamp in milliseconds\n         * @return int Week number, relative to the month [0-5]\n         */\n        getMonthWeekNumber(d) {\n            \"use strict\";\n\n            if (typeof d === \"number\") {\n                d = new Date(d);\n            }\n\n            var monthFirstWeekNumber = this.getWeekNumber(new Date(d.getFullYear(), d.getMonth()));\n            return this.getWeekNumber(d) - monthFirstWeekNumber - 1;\n        }\n\n        /**\n         * Return the number of weeks in the dates' year\n         *\n         * @param  int|Date d Date or timestamp in milliseconds\n         * @return int Number of weeks in the date's year\n         */\n        getWeekNumberInYear(d) {\n            \"use strict\";\n\n            if (typeof d === \"number\") {\n                d = new Date(d);\n            }\n        }\n\n        /**\n         * Return the number of days in the date's month\n         *\n         * @param  int|Date d Date or timestamp in milliseconds\n         * @return int Number of days in the date's month\n         */\n        getDayCountInMonth(d) {\n            \"use strict\";\n\n            return this.getEndOfMonth(d).getDate();\n        }\n\n        /**\n         * Return the number of days in the date's year\n         *\n         * @param  int|Date d Date or timestamp in milliseconds\n         * @return int Number of days in the date's year\n         */\n        getDayCountInYear(d) {\n            \"use strict\";\n\n            if (typeof d === \"number\") {\n                d = new Date(d);\n            }\n            return (new Date(d.getFullYear(), 1, 29).getMonth() === 1) ? 366 : 365;\n        }\n\n        /**\n         * Get the weekday from a date\n         *\n         * Return the week day number (0-6) of a date,\n         * depending on whether the week start on monday or sunday\n         *\n         * @param  Date d\n         * @return int The week day number (0-6)\n         */\n        getWeekDay(d) {\n            \"use strict\";\n\n            if (this.options.weekStartOnMonday === false) {\n                return d.getDay();\n            }\n            return d.getDay() === 0 ? 6 : (d.getDay() - 1);\n        }\n\n        /**\n         * Get the last day of the month\n         * @param  Date|int\td\tDate or timestamp in milliseconds\n         * @return Date\t\t\tLast day of the month\n         */\n        getEndOfMonth(d) {\n            \"use strict\";\n\n            if (typeof d === \"number\") {\n                d = new Date(d);\n            }\n            return new Date(d.getFullYear(), d.getMonth() + 1, 0);\n        }\n\n        /**\n         *\n         * @param  Date date\n         * @param  int count\n         * @param  string step\n         * @return Date\n         */\n        jumpDate(date, count, step) {\n            \"use strict\";\n\n            var d = new Date(date);\n            switch (step) {\n                case \"hour\":\n                    d.setHours(d.getHours() + count);\n                    break;\n                case \"day\":\n                    d.setHours(d.getHours() + count * 24);\n                    break;\n                case \"week\":\n                    d.setHours(d.getHours() + count * 24 * 7);\n                    break;\n                case \"month\":\n                    d.setMonth(d.getMonth() + count);\n                    break;\n                case \"year\":\n                    d.setFullYear(d.getFullYear() + count);\n            }\n\n            return new Date(d);\n        }\n\n        // =========================================================================//\n        // DOMAIN COMPUTATION\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n        // =========================================================================//\n\n        /**\n         * Return all the minutes between 2 dates\n         *\n         * @param  Date\td\tdate\tA date\n         * @param  int|date\trange\tNumber of minutes in the range, or a stop date\n         * @return array\tAn array of minutes\n         */\n        getMinuteDomain(d, range) {\n            \"use strict\";\n\n            var start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n            var stop = null;\n            if (range instanceof Date) {\n                stop = new Date(range.getFullYear(), range.getMonth(), range.getDate(), range.getHours());\n            } else {\n                stop = new Date(+start + range * 1000 * 60);\n            }\n            return d3.timeMinutes(Math.min(start, stop), Math.max(start, stop));\n        }\n\n        /**\n         * Return all the hours between 2 dates\n         *\n         * @param  Date\td\tA date\n         * @param  int|date\trange\tNumber of hours in the range, or a stop date\n         * @return array\tAn array of hours\n         */\n        getHourDomain(d, range) {\n            \"use strict\";\n\n            var start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n            var stop = null;\n            if (range instanceof Date) {\n                stop = new Date(range.getFullYear(), range.getMonth(), range.getDate(), range.getHours());\n            } else {\n                stop = new Date(start);\n                stop.setHours(stop.getHours() + range);\n            }\n\n            var domains = d3.timeHours(Math.min(start, stop), Math.max(start, stop));\n\n            // Passing from DST to standard time\n            // If there are 25 hours, let's compress the duplicate hours\n            var i = 0;\n            var total = domains.length;\n            for (i = 0; i < total; i++) {\n                if (i > 0 && (domains[i].getHours() === domains[i - 1].getHours())) {\n                    this.DSTDomain.push(domains[i].getTime());\n                    domains.splice(i, 1);\n                    break;\n                }\n            }\n\n            // d3.time.hours is returning more hours than needed when changing\n            // from DST to standard time, because there is really 2 hours between\n            // 1am and 2am!\n            if (typeof range === \"number\" && domains.length > Math.abs(range)) {\n                domains.splice(domains.length - 1, 1);\n            }\n\n            return domains;\n        }\n\n        /**\n         * Return all the days between 2 dates\n         *\n         * @param  Date\t\td\t\tA date\n         * @param  int|date\trange\tNumber of days in the range, or a stop date\n         * @return array\tAn array of weeks\n         */\n        getDayDomain(d, range) {\n            \"use strict\";\n\n            var start = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n            var stop = null;\n            if (range instanceof Date) {\n                stop = new Date(range.getFullYear(), range.getMonth(), range.getDate());\n            } else {\n                stop = new Date(start);\n                stop = new Date(stop.setDate(stop.getDate() + parseInt(range, 10)));\n            }\n\n            return d3.timeDays(Math.min(start, stop), Math.max(start, stop));\n        }\n\n        /**\n         * Return all the weeks between 2 dates\n         *\n         * @param  Date\td\tA date\n         * @param  int|date\trange\tNumber of minutes in the range, or a stop date\n         * @return array\tAn array of weeks\n         */\n        getWeekDomain(d, range) {\n            \"use strict\";\n\n            var weekStart;\n\n            if (this.options.weekStartOnMonday === false) {\n                weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate() - d.getDay());\n            } else {\n                if (d.getDay() === 1) {\n                    weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                } else if (d.getDay() === 0) {\n                    weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                    weekStart.setDate(weekStart.getDate() - 6);\n                } else {\n                    weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate() - d.getDay() + 1);\n                }\n            }\n\n            var endDate = new Date(weekStart);\n\n            var stop = range;\n            if (typeof range !== \"object\") {\n                stop = new Date(endDate.setDate(endDate.getDate() + range * 7));\n            }\n\n            return (this.options.weekStartOnMonday === true) ?\n                d3.timeMondays(Math.min(weekStart, stop), Math.max(weekStart, stop)) :\n                d3.timeSundays(Math.min(weekStart, stop), Math.max(weekStart, stop));\n        }\n\n        /**\n         * Return all the months between 2 dates\n         *\n         * @param  Date\t\td\t\tA date\n         * @param  int|date\trange\tNumber of months in the range, or a stop date\n         * @return array\tAn array of months\n         */\n        getMonthDomain(d, range) {\n            \"use strict\";\n\n            var start = new Date(d.getFullYear(), d.getMonth());\n            var stop = null;\n            if (range instanceof Date) {\n                stop = new Date(range.getFullYear(), range.getMonth());\n            } else {\n                stop = new Date(start);\n                stop = stop.setMonth(stop.getMonth() + range);\n            }\n\n            return d3.timeMonths(Math.min(start, stop), Math.max(start, stop));\n        }\n\n        /**\n         * Return all the years between 2 dates\n         *\n         * @param  Date\td\tdate\tA date\n         * @param  int|date\trange\tNumber of minutes in the range, or a stop date\n         * @return array\tAn array of hours\n         */\n        getYearDomain(d, range) {\n            \"use strict\";\n\n            var start = new Date(d.getFullYear(), 0);\n            var stop = null;\n            if (range instanceof Date) {\n                stop = new Date(range.getFullYear(), 0);\n            } else {\n                stop = new Date(d.getFullYear() + range, 0);\n            }\n\n            return d3.timeYears(Math.min(start, stop), Math.max(start, stop));\n        }\n\n        /**\n         * Get an array of domain start dates\n         *\n         * @param  int|Date date A random date included in the wanted domain\n         * @param  int|Date range Number of dates to get, or a stop date\n         * @return Array of dates\n         */\n        getDomain(date, range) {\n            \"use strict\";\n\n            if (typeof date === \"number\") {\n                date = new Date(date);\n            }\n\n            if (arguments.length < 2) {\n                range = this.options.range;\n            }\n\n            switch (this.options.domain) {\n                case \"hour\":\n                    var domains = this.getHourDomain(date, range);\n\n                    // Case where an hour is missing, when passing from standard time to DST\n                    // Missing hour is perfectly acceptabl in subDomain, but not in domains\n                    if (typeof range === \"number\" && domains.length < range) {\n                        if (range > 0) {\n                            domains.push(this.getHourDomain(domains[domains.length - 1], 2)[1]);\n                        } else {\n                            domains.shift(this.getHourDomain(domains[0], -2)[0]);\n                        }\n                    }\n                    return domains;\n                case \"day\":\n                    return this.getDayDomain(date, range);\n                case \"week\":\n                    return this.getWeekDomain(date, range);\n                case \"month\":\n                    return this.getMonthDomain(date, range);\n                case \"year\":\n                    return this.getYearDomain(date, range);\n            }\n        }\n\n        /* jshint maxcomplexity: false */\n        getSubDomain(date) {\n            \"use strict\";\n\n            if (typeof date === \"number\") {\n                date = new Date(date);\n            }\n\n            var parent = this;\n\n            /**\n             * @return int\n             */\n            var computeDaySubDomainSize = function(date, domain) {\n                switch (domain) {\n                    case \"year\":\n                        return parent.getDayCountInYear(date);\n                    case \"month\":\n                        return parent.getDayCountInMonth(date);\n                    case \"week\":\n                        return 7;\n                }\n            };\n\n            /**\n             * @return int\n             */\n            var computeMinSubDomainSize = function(date, domain) {\n                switch (domain) {\n                    case \"hour\":\n                        return 60;\n                    case \"day\":\n                        return 60 * 24;\n                    case \"week\":\n                        return 60 * 24 * 7;\n                }\n            };\n\n            /**\n             * @return int\n             */\n            var computeHourSubDomainSize = function(date, domain) {\n                switch (domain) {\n                    case \"day\":\n                        return 24;\n                    case \"week\":\n                        return 168;\n                    case \"month\":\n                        return parent.getDayCountInMonth(date) * 24;\n                }\n            };\n\n            /**\n             * @return int\n             */\n            var computeWeekSubDomainSize = function(date, domain) {\n                if (domain === \"month\") {\n                    var endOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n                    var endWeekNb = parent.getWeekNumber(endOfMonth);\n                    var startWeekNb = parent.getWeekNumber(new Date(date.getFullYear(), date.getMonth()));\n\n                    if (startWeekNb > endWeekNb) {\n                        startWeekNb = 0;\n                        endWeekNb++;\n                    }\n\n                    return endWeekNb - startWeekNb + 1;\n                } else if (domain === \"year\") {\n                    return parent.getWeekNumber(new Date(date.getFullYear(), 11, 31));\n                }\n            };\n\n            switch (this.options.subDomain) {\n                case \"x_min\":\n                case \"min\":\n                    return this.getMinuteDomain(date, computeMinSubDomainSize(date, this.options.domain));\n                case \"x_hour\":\n                case \"hour\":\n                    return this.getHourDomain(date, computeHourSubDomainSize(date, this.options.domain));\n                case \"x_day\":\n                case \"day\":\n                    return this.getDayDomain(date, computeDaySubDomainSize(date, this.options.domain));\n                case \"x_week\":\n                case \"week\":\n                    return this.getWeekDomain(date, computeWeekSubDomainSize(date, this.options.domain));\n                case \"x_month\":\n                case \"month\":\n                    return this.getMonthDomain(date, 12);\n            }\n        }\n\n        /**\n         * Get the n-th next domain after the calendar newest (rightmost) domain\n         * @param  int n\n         * @return Date The start date of the wanted domain\n         */\n        getNextDomain(n) {\n            \"use strict\";\n\n            if (arguments.length === 0) {\n                n = 1;\n            }\n            return this.getDomain(this.jumpDate(this.getDomainKeys().pop(), n, this.options.domain), 1)[0];\n        }\n\n        /**\n         * Get the n-th domain before the calendar oldest (leftmost) domain\n         * @param  int n\n         * @return Date The start date of the wanted domain\n         */\n        getPreviousDomain(n) {\n            \"use strict\";\n\n            if (arguments.length === 0) {\n                n = 1;\n            }\n            return this.getDomain(this.jumpDate(this.getDomainKeys().shift(), -n, this.options.domain), 1)[0];\n        }\n\n\n        // =========================================================================//\n        // DATAS\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n        // =========================================================================//\n\n        /**\n         * Fetch and interpret data from the datasource\n         *\n         * @param string|object source\n         * @param Date startDate\n         * @param Date endDate\n         * @param function callback\n         * @param function|boolean afterLoad function used to convert the data into a json object. Use true to use the afterLoad callback\n         * @param updateMode\n         *\n         * @return mixed\n         * - True if there are no data to load\n         * - False if data are loaded asynchronously\n         */\n        getDatas(source, startDate, endDate, callback, afterLoad, updateMode) {\n            \"use strict\";\n\n            var self = this;\n            if (arguments.length < 5) {\n                afterLoad = true;\n            }\n            if (arguments.length < 6) {\n                updateMode = this.APPEND_ON_UPDATE;\n            }\n            var _callback = function(data) {\n                if (afterLoad !== false) {\n                    if (typeof afterLoad === \"function\") {\n                        data = afterLoad(data);\n                    } else if (typeof(self.options.afterLoadData) === \"function\") {\n                        data = self.options.afterLoadData(data);\n                    } else {\n                        console.log(\"Provided callback for afterLoadData is not a function.\");\n                    }\n                } else if (self.options.dataType === \"csv\" || self.options.dataType === \"tsv\") {\n                    data = this.interpretCSV(data);\n                }\n                self.parseDatas(data, updateMode, startDate, endDate);\n                if (typeof callback === \"function\") {\n                    callback();\n                }\n            };\n\n            switch (typeof source) {\n                case \"string\":\n                    if (source === \"\") {\n                        _callback({});\n                        return true;\n                    } else {\n                        var url = this.parseURI(source, startDate, endDate);\n                        var requestType = \"GET\";\n                        if (self.options.dataPostPayload !== null) {\n                            requestType = \"POST\";\n                        }\n                        var payload = null;\n                        if (self.options.dataPostPayload !== null) {\n                            payload = this.parseURI(self.options.dataPostPayload, startDate, endDate);\n                        }\n\n                        switch (this.options.dataType) {\n                            case \"json\":\n                                d3.json(url, _callback).send(requestType, payload);\n                                break;\n                            case \"csv\":\n                                d3.csv(url, _callback).send(requestType, payload);\n                                break;\n                            case \"tsv\":\n                                d3.tsv(url, _callback).send(requestType, payload);\n                                break;\n                            case \"txt\":\n                                d3.text(url, _callback).send(requestType, payload);\n                                break;\n                        }\n                    }\n                    return false;\n                case \"object\":\n                    if (source === Object(source)) {\n                        _callback(source);\n                        return false;\n                    }\n                    /* falls through */\n                default:\n                    _callback({});\n                    return true;\n            }\n        }\n\n        /**\n         * Populate the calendar internal data\n         *\n         * @param object data\n         * @param constant updateMode\n         * @param Date startDate\n         * @param Date endDate\n         *\n         * @return void\n         */\n        parseDatas(data, updateMode, startDate, endDate) {\n            \"use strict\";\n\n            if (updateMode === this.RESET_ALL_ON_UPDATE) {\n                this._domains.forEach(function(key, value) {\n                    value.forEach(function(element, index, array) {\n                        array[index].v = null;\n                    });\n                });\n            }\n\n            var temp = {};\n\n            var extractTime = function(d) {\n                return d.t;\n            };\n\n            /*jshint forin:false */\n            for (var d in data) {\n                var date = new Date(d * 1000);\n                var domainUnit = this.getDomain(date)[0].getTime();\n\n                // The current data belongs to a domain that was compressed\n                // Compress the data for the two duplicate hours into the same hour\n                if (this.DSTDomain.indexOf(domainUnit) >= 0) {\n\n                    // Re-assign all data to the first or the second duplicate hours\n                    // depending on which is visible\n                    if (this._domains.has(domainUnit - 3600 * 1000)) {\n                        domainUnit -= 3600 * 1000;\n                    }\n                }\n\n                // Skip if data is not relevant to current domain\n                if (isNaN(d) || !data.hasOwnProperty(d) || !this._domains.has(domainUnit) || !(domainUnit >= +startDate && domainUnit < +endDate)) {\n                    continue;\n                }\n\n                var subDomainsData = this._domains.get(domainUnit);\n\n                if (!temp.hasOwnProperty(domainUnit)) {\n                    temp[domainUnit] = subDomainsData.map(extractTime);\n                }\n\n                var index = temp[domainUnit].indexOf(this._domainType[this.options.subDomain].extractUnit(date));\n\n                if (updateMode === this.RESET_SINGLE_ON_UPDATE) {\n                    subDomainsData[index].v = data[d];\n                } else {\n                    if (!isNaN(subDomainsData[index].v)) {\n                        subDomainsData[index].v += data[d];\n                    } else {\n                        subDomainsData[index].v = data[d];\n                    }\n                }\n            }\n        }\n\n        parseURI(str, startDate, endDate) {\n            \"use strict\";\n\n            // Use a timestamp in seconds\n            str = str.replace(/\\{\\{t:start\\}\\}/g, startDate.getTime() / 1000);\n            str = str.replace(/\\{\\{t:end\\}\\}/g, endDate.getTime() / 1000);\n\n            // Use a string date, following the ISO-8601\n            str = str.replace(/\\{\\{d:start\\}\\}/g, startDate.toISOString());\n            str = str.replace(/\\{\\{d:end\\}\\}/g, endDate.toISOString());\n\n            return str;\n        }\n\n        interpretCSV(data) {\n            \"use strict\";\n\n            var d = {};\n            var keys = Object.keys(data[0]);\n            var i, total;\n            for (i = 0, total = data.length; i < total; i++) {\n                d[data[i][keys[0]]] = +data[i][keys[1]];\n            }\n            return d;\n        }\n\n        /**\n         * Handle the calendar layout and dimension\n         *\n         * Expand and shrink the container depending on its children dimension\n         * Also rearrange the children position depending on their dimension,\n         * and the legend position\n         *\n         * @return void\n         */\n        resize() {\n            \"use strict\";\n\n            var parent = this;\n            var options = parent.options;\n            var legendWidth = options.displayLegend ? (parent.Legend.getDim(\"width\") + options.legendMargin[1] + options.legendMargin[3]) : 0;\n            var legendHeight = options.displayLegend ? (parent.Legend.getDim(\"height\") + options.legendMargin[0] + options.legendMargin[2]) : 0;\n\n            var graphWidth = parent.graphDim.width - options.domainGutter - options.cellPadding;\n            var graphHeight = parent.graphDim.height - options.domainGutter - options.cellPadding;\n\n            this.root.transition().duration(options.animationDuration)\n                .attr(\"width\", function() {\n                    if (options.legendVerticalPosition === \"middle\" || options.legendVerticalPosition === \"center\") {\n                        return graphWidth + legendWidth;\n                    }\n                    return Math.max(graphWidth, legendWidth);\n                })\n                .attr(\"height\", function() {\n                    if (options.legendVerticalPosition === \"middle\" || options.legendVerticalPosition === \"center\") {\n                        return Math.max(graphHeight, legendHeight);\n                    }\n                    return graphHeight + legendHeight;\n                });\n\n            this.root.select(\".graph\").transition().duration(options.animationDuration)\n                .attr(\"y\", function() {\n                    if (options.legendVerticalPosition === \"top\") {\n                        return legendHeight;\n                    }\n                    return 0;\n                })\n                .attr(\"x\", function() {\n                    if (\n                        (options.legendVerticalPosition === \"middle\" || options.legendVerticalPosition === \"center\") &&\n                        options.legendHorizontalPosition === \"left\") {\n                        return legendWidth;\n                    }\n                    return 0;\n\n                });\n        }\n\n        // =========================================================================//\n        // PUBLIC API\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n        // =========================================================================//\n\n        /**\n         * Shift the calendar forward\n         */\n        next(n) {\n            \"use strict\";\n\n            if (arguments.length === 0) {\n                n = 1;\n            }\n            return this.loadNextDomain(n);\n        }\n\n        /**\n         * Shift the calendar backward\n         */\n        previous(n) {\n            \"use strict\";\n\n            if (arguments.length === 0) {\n                n = 1;\n            }\n            return this.loadPreviousDomain(n);\n        }\n\n        /**\n         * Jump directly to a specific date\n         *\n         * JumpTo will scroll the calendar until the wanted domain with the specified\n         * date is visible. Unless you set reset to true, the wanted domain\n         * will not necessarily be the first (leftmost) domain of the calendar.\n         *\n         * @param Date date Jump to the domain containing that date\n         * @param bool reset Whether the wanted domain should be the first domain of the calendar\n         * @param bool True of the calendar was scrolled\n         */\n        jumpTo(date, reset) {\n            \"use strict\";\n\n            if (arguments.length < 2) {\n                reset = false;\n            }\n            var domains = this.getDomainKeys();\n            var firstDomain = domains[0];\n            var lastDomain = domains[domains.length - 1];\n\n            if (date < firstDomain) {\n                return this.loadPreviousDomain(this.getDomain(firstDomain, date).length);\n            } else {\n                if (reset) {\n                    return this.loadNextDomain(this.getDomain(firstDomain, date).length);\n                }\n\n                if (date > lastDomain) {\n                    return this.loadNextDomain(this.getDomain(lastDomain, date).length);\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Navigate back to the start date\n         *\n         * @since  3.3.8\n         * @return void\n         */\n        rewind() {\n            \"use strict\";\n\n            this.jumpTo(this.options.start, true);\n        }\n\n        /**\n         * Update the calendar with new data\n         *\n         * @param  object|string\t\tdataSource\t\tThe calendar's datasource, same type as this.options.data\n         * @param  boolean|function\t\tafterLoad\t\tWhether to execute afterLoad() on the data. Pass directly a function\n         * if you don't want to use the afterLoad() callback\n         */\n        update(dataSource, afterLoad, updateMode) {\n            \"use strict\";\n\n            if (arguments.length < 2) {\n                afterLoad = true;\n            }\n            if (arguments.length < 3) {\n                updateMode = this.RESET_ALL_ON_UPDATE;\n            }\n\n            var domains = this.getDomainKeys();\n            var self = this;\n            this.getDatas(\n                dataSource,\n                new Date(domains[0]),\n                this.getSubDomain(domains[domains.length - 1]).pop(),\n                function() {\n                    self.fill();\n                },\n                afterLoad,\n                updateMode\n            );\n        }\n\n        /**\n         * Set the legend\n         *\n         * @param array legend an array of integer, representing the different threshold value\n         * @param array colorRange an array of 2 hex colors, for the minimum and maximum colors\n         */\n        setLegend() {\n            \"use strict\";\n\n            var oldLegend = this.options.legend.slice(0);\n            if (arguments.length >= 1 && Array.isArray(arguments[0])) {\n                this.options.legend = arguments[0];\n            }\n            if (arguments.length >= 2) {\n                if (Array.isArray(arguments[1]) && arguments[1].length >= 2) {\n                    this.options.legendColors = [arguments[1][0], arguments[1][1]];\n                } else {\n                    this.options.legendColors = arguments[1];\n                }\n            }\n\n            if ((arguments.length > 0 && !arrayEquals(oldLegend, this.options.legend)) || arguments.length >= 2) {\n                this.Legend.buildColors();\n                this.fill();\n            }\n\n            this.Legend.redraw(this.graphDim.width - this.options.domainGutter - this.options.cellPadding);\n        }\n\n        /**\n         * Remove the legend\n         *\n         * @return bool False if there is no legend to remove\n         */\n        removeLegend() {\n            \"use strict\";\n\n            if (!this.options.displayLegend) {\n                return false;\n            }\n            this.options.displayLegend = false;\n            this.Legend.remove();\n            return true;\n        }\n\n        /**\n         * Display the legend\n         *\n         * @return bool False if the legend was already displayed\n         */\n        showLegend() {\n            \"use strict\";\n\n            if (this.options.displayLegend) {\n                return false;\n            }\n            this.options.displayLegend = true;\n            this.Legend.redraw(this.graphDim.width - this.options.domainGutter - this.options.cellPadding);\n            return true;\n        }\n\n        /**\n         * Highlight dates\n         *\n         * Add a highlight class to a set of dates\n         *\n         * @since  3.3.5\n         * @param  array Array of dates to highlight\n         * @return bool True if dates were highlighted\n         */\n        highlight(args) {\n            \"use strict\";\n\n            if ((this.options.highlight = this.expandDateSetting(args)).length > 0) {\n                this.fill();\n                return true;\n            }\n            return false;\n        }\n\n        /**\n         * Destroy the calendar\n         *\n         * Usage: cal = cal.destroy();\n         *\n         * @since  3.3.6\n         * @param function A callback function to trigger after destroying the calendar\n         * @return null\n         */\n        destroy(callback) {\n            \"use strict\";\n\n            this.root.transition().duration(this.options.animationDuration)\n                .attr(\"width\", 0)\n                .attr(\"height\", 0)\n                .remove()\n                .each(function() {\n                    if (typeof callback === \"function\") {\n                        callback();\n                    } else if (typeof callback !== \"undefined\") {\n                        console.log(\"Provided callback for destroy() is not a function.\");\n                    }\n                });\n\n            return null;\n        }\n\n        getSVG() {\n            \"use strict\";\n\n            var styles = {\n                \".cal-heatmap-container\": {},\n                \".graph\": {},\n                \".graph-rect\": {},\n                \"rect.highlight\": {},\n                \"rect.now\": {},\n                \"rect.highlight-now\": {},\n                \"text.highlight\": {},\n                \"text.now\": {},\n                \"text.highlight-now\": {},\n                \".domain-background\": {},\n                \".graph-label\": {},\n                \".subdomain-text\": {},\n                \".q0\": {},\n                \".qi\": {}\n            };\n\n            for (var j = 1, total = this.options.legend.length + 1; j <= total; j++) {\n                styles[\".q\" + j] = {};\n            }\n\n            var root = this.root;\n\n            var whitelistStyles = [\n                // SVG specific properties\n                \"stroke\", \"stroke-width\", \"stroke-opacity\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-miterlimit\",\n                \"fill\", \"fill-opacity\", \"fill-rule\",\n                \"marker\", \"marker-start\", \"marker-mid\", \"marker-end\",\n                \"alignement-baseline\", \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\", \"glyph-orientation-vertical\", \"kerning\", \"text-anchor\",\n                \"shape-rendering\",\n\n                // Text Specific properties\n                \"text-transform\", \"font-family\", \"font\", \"font-size\", \"font-weight\"\n            ];\n\n            var filterStyles = function(attribute, property, value) {\n                if (whitelistStyles.indexOf(property) !== -1) {\n                    styles[attribute][property] = value;\n                }\n            };\n\n            var getElement = function(e) {\n                return root.select(e).node();\n            };\n\n            /* jshint forin:false */\n            for (var element in styles) {\n                if (!styles.hasOwnProperty(element)) {\n                    continue;\n                }\n\n                var dom = getElement(element);\n\n                if (dom === null) {\n                    continue;\n                }\n\n                // The DOM Level 2 CSS way\n                /* jshint maxdepth: false */\n                if (\"getComputedStyle\" in window) {\n                    var cs = getComputedStyle(dom, null);\n                    if (cs.length !== 0) {\n                        for (var i = 0; i < cs.length; i++) {\n                            filterStyles(element, cs.item(i), cs.getPropertyValue(cs.item(i)));\n                        }\n\n                        // Opera workaround. Opera doesn\"t support `item`/`length`\n                        // on CSSStyleDeclaration.\n                    } else {\n                        for (var k in cs) {\n                            if (cs.hasOwnProperty(k)) {\n                                filterStyles(element, k, cs[k]);\n                            }\n                        }\n                    }\n\n                    // The IE way\n                } else if (\"currentStyle\" in dom) {\n                    var css = dom.currentStyle;\n                    for (var p in css) {\n                        filterStyles(element, p, css[p]);\n                    }\n                }\n            }\n\n            var string = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" \" +\n                \"xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><style type=\\\"text/css\\\"><![CDATA[ \";\n\n            for (var style in styles) {\n                string += style + \" {\\n\";\n                for (var l in styles[style]) {\n                    string += \"\\t\" + l + \":\" + styles[style][l] + \";\\n\";\n                }\n                string += \"}\\n\";\n            }\n\n            string += \"]]></style>\";\n            string += new XMLSerializer().serializeToString(this.root.node());\n            string += \"</svg>\";\n\n            return string;\n        }\n}\n\n// =========================================================================//\n// DOMAIN POSITION COMPUTATION\t\t\t\t\t\t\t\t\t\t\t\t//\n// =========================================================================//\n\n/**\n * Compute the position of a domain, relative to the calendar\n */\nclass DomainPosition {\n    constructor() {\n        \"use strict\";\n\n        this.positions = d3.map();\n    }\n\n    getPosition(d) {\n        \"use strict\";\n\n        return this.positions.get(d);\n    }\n\n    getPositionFromIndex(i) {\n        \"use strict\";\n\n        var domains = this.getKeys();\n        return this.positions.get(domains[i]);\n    }\n\n    getLast() {\n        \"use strict\";\n\n        var domains = this.getKeys();\n        return this.positions.get(domains[domains.length - 1]);\n    }\n\n    setPosition(d, dim) {\n        \"use strict\";\n\n        this.positions.set(d, dim);\n    }\n\n    shiftRightBy(exitingDomainDim) {\n        \"use strict\";\n\n        this.positions.each(function(key, value, map) {\n            map.set(key, value - exitingDomainDim);\n        });\n\n        var domains = this.getKeys();\n        this.positions.remove(domains[0]);\n    }\n\n    shiftLeftBy(enteringDomainDim) {\n        \"use strict\";\n\n        this.positions.each(function(key, value, map) {\n            map.set(key, value + enteringDomainDim);\n        });\n\n        var domains = this.getKeys();\n        this.positions.remove(domains[domains.length - 1]);\n    }\n\n    getKeys() {\n        \"use strict\";\n\n        return this.positions.keys().sort(function(a, b) {\n            return parseInt(a, 10) - parseInt(b, 10);\n        });\n    }\n}\n\n// =========================================================================//\n// LEGEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n// =========================================================================//\n\nclass Legend {\n    constructor(calendar) {\n        \"use strict\";\n\n        this.calendar = calendar;\n        this.computeDim();\n\n        if (calendar.options.legendColors !== null) {\n            this.buildColors();\n        }\n    }\n\n    computeDim() {\n        \"use strict\";\n\n        var options = this.calendar.options; // Shorter accessor for variable name mangling when minifying\n        this.dim = {\n            width: options.legendCellSize * (options.legend.length + 1) +\n                options.legendCellPadding * (options.legend.length),\n            height: options.legendCellSize\n        };\n    }\n\n    remove() {\n        \"use strict\";\n\n        this.calendar.root.select(\".graph-legend\").remove();\n        this.calendar.resize();\n    }\n\n    redraw(width) {\n        \"use strict\";\n\n        if (!this.calendar.options.displayLegend) {\n            return false;\n        }\n\n        var parent = this;\n        var calendar = this.calendar;\n        var legend = calendar.root;\n        var legendItem;\n        var options = calendar.options; // Shorter accessor for variable name mangling when minifying\n\n        this.computeDim();\n\n        var _legend = options.legend.slice(0);\n        _legend.push(_legend[_legend.length - 1] + 1);\n\n        var legendElement = calendar.root.select(\".graph-legend\");\n        if (legendElement.node() !== null) {\n            legend = legendElement;\n            legendItem = legend\n                .select(\"g\")\n                .selectAll(\"rect\").data(_legend);\n        } else {\n            // Creating the new legend DOM if it doesn't already exist\n            legend = options.legendVerticalPosition === \"top\" ? legend.insert(\"svg\", \".graph\") : legend.append(\"svg\");\n\n            legend\n                .attr(\"x\", getLegendXPosition())\n                .attr(\"y\", getLegendYPosition());\n\n            legendItem = legend\n                .attr(\"class\", \"graph-legend\")\n                .attr(\"height\", parent.getDim(\"height\"))\n                .attr(\"width\", parent.getDim(\"width\"))\n                .append(\"g\")\n                .selectAll().data(_legend);\n        }\n\n        legendItem\n            .enter()\n            .append(\"rect\")\n            .call(legendCellLayout)\n            .attr(\"class\", function(d) {\n                return calendar.Legend.getClass(d, (calendar.legendScale === null));\n            })\n            .attr(\"fill-opacity\", 0)\n            .call(function(selection) {\n                if (calendar.legendScale !== null && options.legendColors !== null && options.legendColors.hasOwnProperty(\"base\")) {\n                    selection.attr(\"fill\", options.legendColors.base);\n                }\n            })\n            .append(\"title\");\n\n        legendItem.exit().transition().duration(options.animationDuration)\n            .attr(\"fill-opacity\", 0)\n            .remove();\n\n        legendItem.transition().delay(function(d, i) {\n                return options.animationDuration * i / 10;\n            })\n            .call(legendCellLayout)\n            .attr(\"fill-opacity\", 1)\n            .call(function(element) {\n                element.attr(\"fill\", function(d, i) {\n                    if (calendar.legendScale === null) {\n                        return \"\";\n                    }\n\n                    if (i === 0) {\n                        return calendar.legendScale(d - 1);\n                    }\n                    return calendar.legendScale(options.legend[i - 1]);\n                });\n\n                element.attr(\"class\", function(d) {\n                    return calendar.Legend.getClass(d, (calendar.legendScale === null));\n                });\n            });\n\n        function legendCellLayout(selection) {\n            selection\n                .attr(\"width\", options.legendCellSize)\n                .attr(\"height\", options.legendCellSize)\n                .attr(\"x\", function(d, i) {\n                    return i * (options.legendCellSize + options.legendCellPadding);\n                });\n        }\n\n        legendItem.select(\"title\").text(function(d, i) {\n            if (i === 0) {\n                return calendar.formatStringWithObject(options.legendTitleFormat.lower, {\n                    min: options.legend[i],\n                    name: options.itemName[1]\n                });\n            } else if (i === _legend.length - 1) {\n                return calendar.formatStringWithObject(options.legendTitleFormat.upper, {\n                    max: options.legend[i - 1],\n                    name: options.itemName[1]\n                });\n            } else {\n                return calendar.formatStringWithObject(options.legendTitleFormat.inner, {\n                    down: options.legend[i - 1],\n                    up: options.legend[i],\n                    name: options.itemName[1]\n                });\n            }\n        });\n\n        legend.transition().duration(options.animationDuration)\n            .attr(\"x\", getLegendXPosition())\n            .attr(\"y\", getLegendYPosition())\n            .attr(\"width\", parent.getDim(\"width\"))\n            .attr(\"height\", parent.getDim(\"height\"));\n\n        legend.select(\"g\").transition().duration(options.animationDuration)\n            .attr(\"transform\", function() {\n                if (options.legendOrientation === \"vertical\") {\n                    return \"rotate(90 \" + options.legendCellSize / 2 + \" \" + options.legendCellSize / 2 + \")\";\n                }\n                return \"\";\n            });\n\n        function getLegendXPosition() {\n            switch (options.legendHorizontalPosition) {\n                case \"right\":\n                    if (options.legendVerticalPosition === \"center\" || options.legendVerticalPosition === \"middle\") {\n                        return width + options.legendMargin[3];\n                    }\n                    return width - parent.getDim(\"width\") - options.legendMargin[1];\n                case \"middle\":\n                case \"center\":\n                    return Math.round(width / 2 - parent.getDim(\"width\") / 2);\n                default:\n                    return options.legendMargin[3];\n            }\n        }\n\n        function getLegendYPosition() {\n            if (options.legendVerticalPosition === \"bottom\") {\n                return calendar.graphDim.height + options.legendMargin[0] - options.domainGutter - options.cellPadding;\n            }\n            return options.legendMargin[0];\n        }\n\n        calendar.resize();\n    }\n\n    /**\n     * Return the dimension of the legend\n     *\n     * Takes into account rotation\n     *\n     * @param  string axis Width or height\n     * @return int height or width in pixels\n     */\n    getDim(axis) {\n        \"use strict\";\n\n        var isHorizontal = (this.calendar.options.legendOrientation === \"horizontal\");\n\n        switch (axis) {\n            case \"width\":\n                return this.dim[isHorizontal ? \"width\" : \"height\"];\n            case \"height\":\n                return this.dim[isHorizontal ? \"height\" : \"width\"];\n        }\n    }\n\n    buildColors() {\n        \"use strict\";\n\n        var options = this.calendar.options; // Shorter accessor for variable name mangling when minifying\n\n        if (options.legendColors === null) {\n            this.calendar.legendScale = null;\n            return false;\n        }\n\n        var _colorRange = [];\n\n        if (Array.isArray(options.legendColors)) {\n            _colorRange = options.legendColors;\n        } else if (options.legendColors.hasOwnProperty(\"min\") && options.legendColors.hasOwnProperty(\"max\")) {\n            _colorRange = [options.legendColors.min, options.legendColors.max];\n        } else {\n            options.legendColors = null;\n            return false;\n        }\n\n        var _legend = options.legend.slice(0);\n\n        if (_legend[0] > 0) {\n            _legend.unshift(0);\n        } else if (_legend[0] < 0) {\n            // Let's guess the leftmost value, it we have to add one\n            _legend.unshift(_legend[0] - (_legend[_legend.length - 1] - _legend[0]) / _legend.length);\n        }\n\n        var colorScale = d3.scaleLinear()\n            .range(_colorRange)\n            .interpolate(d3.interpolateHcl)\n            .domain([d3.min(_legend), d3.max(_legend)]);\n\n        var legendColors = _legend.map(function(element) {\n            return colorScale(element);\n        });\n        this.calendar.legendScale = d3.scaleThreshold().domain(options.legend).range(legendColors);\n\n        return true;\n    }\n\n    /**\n     * Return the classname on the legend for the specified value\n     *\n     * @param integer n Value associated to a date\n     * @param bool withCssClass Whether to display the css class used to style the cell.\n     *                          Disabling will allow styling directly via html fill attribute\n     *\n     * @return string Classname according to the legend\n     */\n    getClass(n, withCssClass) {\n        \"use strict\";\n\n        if (n === null || isNaN(n)) {\n            return \"\";\n        }\n\n        var index = [this.calendar.options.legend.length + 1];\n\n        for (var i = 0, total = this.calendar.options.legend.length - 1; i <= total; i++) {\n\n            if (this.calendar.options.legend[0] > 0 && n < 0) {\n                index = [\"1\", \"i\"];\n                break;\n            }\n\n            if (n <= this.calendar.options.legend[i]) {\n                index = [i + 1];\n                break;\n            }\n        }\n\n        if (n === 0) {\n            index.push(0);\n        }\n\n        index.unshift(\"\");\n        return (index.join(\" r\") + (withCssClass ? index.join(\" q\") : \"\")).trim();\n    }\n}\n\n/**\n * #source http://stackoverflow.com/a/383245/805649\n */\nfunction mergeRecursive(obj1, obj2) {\n    \"use strict\";\n\n    /*jshint forin:false */\n    for (var p in obj2) {\n        try {\n            // Property in destination object set; update its value.\n            if (obj2[p].constructor === Object) {\n                obj1[p] = mergeRecursive(obj1[p], obj2[p]);\n            } else {\n                obj1[p] = obj2[p];\n            }\n        } catch (e) {\n            // Property in destination object not set; create it and set its value.\n            obj1[p] = obj2[p];\n        }\n    }\n\n    return obj1;\n}\n\n/**\n * Check if 2 arrays are equals\n *\n * @link http://stackoverflow.com/a/14853974/805649\n * @param  array array the array to compare to\n * @return bool true of the 2 arrays are equals\n */\nfunction arrayEquals(arrayA, arrayB) {\n    \"use strict\";\n\n    // if the other array is a falsy value, return\n    if (!arrayB || !arrayA) {\n        return false;\n    }\n\n    // compare lengths - can save a lot of time\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n\n    for (var i = 0; i < arrayA.length; i++) {\n        // Check if we have nested arrays\n        if (arrayA[i] instanceof Array && arrayB[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!arrayEquals(arrayA[i], arrayB[i])) {\n                return false;\n            }\n        } else if (arrayA[i] !== arrayB[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n"],"names":["mergeRecursive","obj1","obj2","p","constructor","Object","e","arrayEquals","arrayA","arrayB","length","i","Array","CalHeatMap","[object Object]","_initCalendar","self","verticalDomainLabel","options","label","position","domainVerticalLabelHeight","height","Math","max","cellSize","domainHorizontalLabelWidth","domainLabelFormat","width","paint","nextSelector","d3.select","on","itemNamespace","d3.event","preventDefault","loadNextDomain","previousSelector","loadPreviousDomain","Legend","redraw","graphDim","domainGutter","cellPadding","afterLoad","domains","getDomainKeys","loadOnInit","getDatas","data","Date","getSubDomain","pop","fill","onComplete","checkIfMinDomainIsReached","checkIfMaxDomainIsReached","getNextDomain","getTime","w","d","outer","_domainType","subDomain","column","arguments","domainMargin","h","row","this","allowedDataType","itemSelector","paintOnLoad","range","cellRadius","domain","colLimit","rowLimit","weekStartOnMonday","start","minDate","maxDate","dataType","dataPostPayload","considerMissingDataAsZero","verticalOrientation","domainDynamicDimension","align","offset","x","y","rotate","legend","displayLegend","legendCellSize","legendCellPadding","legendMargin","legendVerticalPosition","legendHorizontalPosition","legendOrientation","legendColors","highlight","itemName","subDomainTitleFormat","empty","filled","subDomainDateFormat","subDomainTextFormat","legendTitleFormat","lower","inner","upper","animationDuration","tooltip","onClick","afterLoadNextDomain","afterLoadPreviousDomain","onMaxDomainReached","onMinDomainReached","min","name","level","maxItemNumber","defaultRowNumber","defaultColumnNumber","getSubDomainRowNumber","getSubDomainColumnNumber","floor","getMinutes","format","date","connector","getFullYear","getMonth","getDate","getHours","hour","getDayCountInMonth","getWeekDay","day","getDayCountInYear","getWeekNumber","getDayOfYear","week","getMonthWeekNumber","dt","weekDay","getDay","setDate","month","year","type","hasOwnProperty","extractUnit","lastInsertedSvg","_completed","_domains","d3.map","legendDim","NAVIGATE_LEFT","NAVIGATE_RIGHT","RESET_ALL_ON_UPDATE","RESET_SINGLE_ON_UPDATE","APPEND_ON_UPDATE","DEFAULT_LEGEND_MARGIN","root","_maxDomainReached","_minDomainReached","domainPosition","DomainPosition","legendScale","DSTDomain","_init","getDomain","map","set","t","v","append","attr","current","navigationDir","getDomainPosition","domainIndex","axis","domainDim","tmp","setPosition","enteringDomainDim","exitingDomainDim","getPositionFromIndex","shiftRightBy","getLast","shiftLeftBy","domainRotate","selection","s","domainSvg","select","selectAll","reverse","svg","enter","classname","subDomainSvgGroup","rect","get","getHighlightClassName","positionSubDomainX","positionSubDomainY","call","base","domainNode","parentNode","html","getSubDomainTitle","tooltipPositionX","node","offsetWidth","tooltipPositionY","offsetHeight","parseInt","getAttribute","text","formatDate","transition","duration","getPosition","tempWidth","tempHeight","exit","remove","resize","settings","validateSelector","selector","canBeFalse","Element","Error","getOptimalSubDomain","validateDomainType","parent","substring","autoAlignLabel","autoAddLegendMargin","expandMarginSetting","value","isArray","console","log","slice","expandItemName","parseColLimit","parseRowLimit","indexOf","error","message","k","expandDateSetting","filter","addStyle","element","overflow","formatSubDomainText","htmlClass","trim","split","pastDate","dateIsLessThan","sameDate","dateIsEqual","push","getClass","join","formatted","args","prop","regexp","RegExp","replace","eventName","successArgs","skip","apply","itemNb","triggerEvent","response","shift","reached","upperBound","minDomainIsReached","maxDomainIsReached","lowerBound","d3.format","f","d3.timeFormat","formatStringWithObject","count","formatNumber","n","bound","loadNewDomains","end","direction","newDomains","buildSubDomain","backward","total","datetimestamp","keys","sort","a","b","index","ceil","j","isNow","dateA","dateB","normalizedMillis","subdomain","monthFirstWeekNumber","getEndOfMonth","step","setHours","setMonth","setFullYear","stop","d3.timeMinutes","d3.timeHours","splice","abs","d3.timeDays","weekStart","endDate","d3.timeMondays","d3.timeSundays","d3.timeMonths","d3.timeYears","getHourDomain","getDayDomain","getWeekDomain","getMonthDomain","getYearDomain","computeDaySubDomainSize","computeMinSubDomainSize","computeHourSubDomainSize","computeWeekSubDomainSize","endOfMonth","endWeekNb","startWeekNb","getMinuteDomain","jumpDate","source","startDate","callback","updateMode","_callback","afterLoadData","interpretCSV","parseDatas","url","parseURI","requestType","payload","d3.json","send","d3.csv","d3.tsv","d3.text","forEach","key","array","temp","extractTime","domainUnit","has","isNaN","subDomainsData","str","toISOString","legendWidth","getDim","legendHeight","graphWidth","graphHeight","reset","firstDomain","lastDomain","jumpTo","dataSource","oldLegend","buildColors","each","styles",".cal-heatmap-container",".graph",".graph-rect","rect.highlight","rect.now","rect.highlight-now","text.highlight","text.now","text.highlight-now",".domain-background",".graph-label",".subdomain-text",".q0",".qi","whitelistStyles","filterStyles","attribute","property","getElement","dom","window","cs","getComputedStyle","item","getPropertyValue","css","currentStyle","string","style","l","XMLSerializer","serializeToString","positions","getKeys","dim","calendar","computeDim","legendCellLayout","getLegendXPosition","round","getLegendYPosition","legendItem","_legend","legendElement","insert","delay","down","up","isHorizontal","_colorRange","unshift","colorScale","d3.scaleLinear","interpolate","d3.interpolateHcl","d3.min","d3.max","d3.scaleThreshold","withCssClass"],"mappings":"8MA84GA,SAASA,GAAeC,EAAMC,GAI1B,IAAK,GAAIC,KAAKD,GACV,IAEQA,EAAKC,GAAGC,cAAgBC,OACxBJ,EAAKE,GAAKH,EAAeC,EAAKE,GAAID,EAAKC,IAEvCF,EAAKE,GAAKD,EAAKC,GAErB,MAAOG,GAELL,EAAKE,GAAKD,EAAKC,GAIvB,MAAOF,GAUX,QAASM,GAAYC,EAAQC,GAIzB,IAAKA,IAAWD,EACZ,OAAO,CAIX,IAAIA,EAAOE,SAAWD,EAAOC,OACzB,OAAO,CAGX,KAAK,GAAIC,GAAI,EAAGA,EAAIH,EAAOE,OAAQC,IAE/B,GAAIH,EAAOG,YAAcC,QAASH,EAAOE,YAAcC,QAEnD,IAAKL,EAAYC,EAAOG,GAAIF,EAAOE,IAC/B,OAAO,MAER,IAAIH,EAAOG,KAAOF,EAAOE,GAE5B,OAAO,CAGf,QAAO,OAj8GUE,GACjBC,cA+oBI,QAASC,KACLC,EAAKC,oBAAuD,QAAhCD,EAAKE,QAAQC,MAAMC,UAAsD,WAAhCJ,EAAKE,QAAQC,MAAMC,SAExFJ,EAAKK,0BAA0D,OAA9BL,EAAKE,QAAQC,MAAMG,OAAkBC,KAAKC,IAAI,GAA4B,EAAxBR,EAAKE,QAAQO,UAAgBT,EAAKE,QAAQC,MAAMG,OACnIN,EAAKU,2BAA6B,EAEK,KAAnCV,EAAKE,QAAQS,mBAA0D,OAA9BX,EAAKE,QAAQC,MAAMG,SAC5DN,EAAKK,0BAA4B,GAGhCL,EAAKC,sBACND,EAAKK,0BAA4B,EACjCL,EAAKU,2BAA6BV,EAAKE,QAAQC,MAAMS,OAGzDZ,EAAKa,QAKDb,EAAKE,QAAQY,gBAAiB,GAC9BC,SAAUf,EAAKE,QAAQY,cAAcE,GAAG,SAAWhB,EAAKE,QAAQe,cAAe,WAE3E,MADAC,SAASC,iBACFnB,EAAKoB,eAAe,KAI/BpB,EAAKE,QAAQmB,oBAAqB,GAClCN,SAAUf,EAAKE,QAAQmB,kBAAkBL,GAAG,SAAWhB,EAAKE,QAAQe,cAAe,WAE/E,MADAC,SAASC,iBACFnB,EAAKsB,mBAAmB,KAIvCtB,EAAKuB,OAAOC,OAAOxB,EAAKyB,SAASb,MAAQZ,EAAKE,QAAQwB,aAAe1B,EAAKE,QAAQyB,aAClF3B,EAAK4B,WAEL,IAAIC,GAAU7B,EAAK8B,eAGf9B,GAAKE,QAAQ6B,WACb/B,EAAKgC,SACDhC,EAAKE,QAAQ+B,KACb,GAAIC,MAAKL,EAAQ,IACjB7B,EAAKmC,aAAaN,EAAQA,EAAQnC,OAAS,IAAI0C,MAC/C,WACIpC,EAAKqC,OACLrC,EAAKsC,eAIbtC,EAAKsC,aAGTtC,EAAKuC,0BAA0BV,EAAQ,IACvC7B,EAAKwC,0BAA0BxC,EAAKyC,gBAAgBC,WAKxD,QAASC,GAAEC,EAAGC,GACV,GAAIjC,GAAQZ,EAAKE,QAAQO,SAAWT,EAAK8C,YAAY9C,EAAKE,QAAQ6C,WAAWC,OAAOJ,GAAK5C,EAAKE,QAAQyB,YAAc3B,EAAK8C,YAAY9C,EAAKE,QAAQ6C,WAAWC,OAAOJ,EACpK,OAAyB,KAArBK,UAAUvD,QAAgBmD,KAAU,EAC7BjC,GAASZ,EAAKU,2BAA6BV,EAAKE,QAAQwB,aAAe1B,EAAKE,QAAQgD,aAAa,GAAKlD,EAAKE,QAAQgD,aAAa,GAEpItC,EAIX,QAASuC,GAAEP,EAAGC,GACV,GAAIvC,GAASN,EAAKE,QAAQO,SAAWT,EAAK8C,YAAY9C,EAAKE,QAAQ6C,WAAWK,IAAIR,GAAK5C,EAAKE,QAAQyB,YAAc3B,EAAK8C,YAAY9C,EAAKE,QAAQ6C,WAAWK,IAAIR,EAI/J,OAHyB,KAArBK,UAAUvD,QAAgBmD,KAAU,IACpCvC,GAAUN,EAAKE,QAAQwB,aAAe1B,EAAKK,0BAA4BL,EAAKE,QAAQgD,aAAa,GAAKlD,EAAKE,QAAQgD,aAAa,IAE7H5C,EAttBX,GAAIN,GAAOqD,IAEXA,MAAKC,iBAAmB,OAAQ,MAAO,MAAO,OAG9CD,KAAKnD,SAIDqD,aAAc,eAIdC,aAAa,EAObC,MAAO,GAGPhD,SAAU,GAGVkB,YAAa,EAGb+B,WAAY,EAEZhC,aAAc,EAEdwB,cAAe,EAAG,EAAG,EAAG,GAExBS,OAAQ,OAERZ,UAAW,MAIXa,SAAU,KAIVC,SAAU,KAIVC,mBAAmB,EAInBC,MAAO,GAAI7B,MAEX8B,QAAS,KAETC,QAAS,KAQThC,KAAM,GAINiC,SAAUb,KAAKC,gBAAgB,GAK/Ba,gBAAiB,KAIjBC,2BAA2B,EAI3BrC,YAAY,EAKZsC,qBAAqB,EAIrBC,wBAAwB,EAGxBnE,OAEIC,SAAU,SAIVmE,MAAO,SAGPC,QACIC,EAAG,EACHC,EAAG,GAGPC,OAAQ,KAGR/D,MAAO,IAGPN,OAAQ,MAQZsE,QAAS,GAAI,GAAI,GAAI,IAGrBC,eAAe,EAEfC,eAAgB,GAEhBC,kBAAmB,EAEnBC,cAAe,EAAG,EAAG,EAAG,GAKxBC,uBAAwB,SAIxBC,yBAA0B,OAI1BC,kBAAmB,aAanBC,aAAc,KAWdC,aAOAC,UAAW,OAAQ,SASnB3E,kBAAmB,KAGnB4E,sBACIC,MAAO,SACPC,OAAQ,qCAUZC,oBAAqB,KASrBC,oBAAqB,KAGrBC,mBACIC,MAAO,yBACPC,MAAO,iCACPC,MAAO,0BAIXC,kBAAmB,IAEnBlF,cAAc,EAEdO,kBAAkB,EAElBJ,cAAe,cAEfgF,SAAS,EAOTC,QAAS,KAITtE,UAAW,KAGXuE,oBAAqB,KAGrBC,wBAAyB,KAGzB9D,WAAY,KAMZxC,cAAcmC,GACV,MAAOA,IASXoE,mBAAoB,KAQpBC,mBAAoB,MAGxBjD,KAAKP,aACDyD,KACIC,KAAM,SACNC,MAAO,GACPC,cAAe,GACfC,iBAAkB,GAClBC,oBAAqB,EACrB9G,IAAI8C,GACA,MAAO5C,GAAK6G,sBAAsBjE,IAEtC9C,OAAO8C,GACH,MAAO5C,GAAK8G,yBAAyBlE,IAEzCxC,UACIN,EAAE8C,GACE,MAAOrC,MAAKwG,MAAMnE,EAAEoE,aAAehH,EAAK8C,YAAYyD,IAAInD,IAAIR,KAEhE9C,EAAE8C,GACE,MAAOA,GAAEoE,aAAehH,EAAK8C,YAAYyD,IAAInD,IAAIR,KAGzDqE,QACIC,KAAM,uBACNtC,OAAQ,GACRuC,UAAW,MAEfrH,YAAY8C,GACR,MAAO,IAAIV,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,UAAW1E,EAAE2E,WAAY3E,EAAEoE,cAActE,YAGlG8E,MACIhB,KAAM,OACNC,MAAO,GACP3G,cAAc8C,GACV,OAAQ5C,EAAKE,QAAQyD,QACjB,IAAK,MACD,MAAO,GACX,KAAK,OACD,MAAO,IACX,KAAK,QACD,MAAO,KAAM3D,EAAKE,QAAQoE,uBAAyBtE,EAAKyH,mBAAmB7E,GAAK,MAG5F+D,iBAAkB,EAClB7G,oBAAoB8C,GAChB,OAAQ5C,EAAKE,QAAQyD,QACjB,IAAK,MACD,MAAO,EACX,KAAK,OACD,MAAO,GACX,KAAK,QACD,MAAO3D,GAAKE,QAAQoE,uBAAyBtE,EAAKyH,mBAAmB7E,GAAK,KAGtF9C,IAAI8C,GACA,MAAO5C,GAAK6G,sBAAsBjE,IAEtC9C,OAAO8C,GACH,MAAO5C,GAAK8G,yBAAyBlE,IAEzCxC,UACIN,EAAE8C,GACE,MAA4B,UAAxB5C,EAAKE,QAAQyD,OACT3D,EAAKE,QAAQ0D,SAAW,GAAK5D,EAAKE,QAAQ2D,SAAW,EAC9CtD,KAAKwG,OAAOnE,EAAE2E,WAAiC,IAAnB3E,EAAE0E,UAAY,IAAWtH,EAAK8C,YAAY0E,KAAKpE,IAAIR,IAEnFrC,KAAKwG,MAAMnE,EAAE2E,WAAavH,EAAK8C,YAAY0E,KAAKpE,IAAIR,IAA0B,GAAnBA,EAAE0E,UAAY,GACjD,SAAxBtH,EAAKE,QAAQyD,OAChB3D,EAAKE,QAAQ0D,SAAW,GAAK5D,EAAKE,QAAQ2D,SAAW,EAC9CtD,KAAKwG,OAAOnE,EAAE2E,WAAkC,GAArBvH,EAAK0H,WAAW9E,IAAW5C,EAAK8C,YAAY0E,KAAKpE,IAAIR,IAEpFrC,KAAKwG,MAAMnE,EAAE2E,WAAavH,EAAK8C,YAAY0E,KAAKpE,IAAIR,IAA2B,EAArB5C,EAAK0H,WAAW9E,GAE9ErC,KAAKwG,MAAMnE,EAAE2E,WAAavH,EAAK8C,YAAY0E,KAAKpE,IAAIR,KAE/D9C,EAAE8C,GACE,GAAIzD,GAAIyD,EAAE2E,UACV,IAAIvH,EAAKE,QAAQ0D,SAAW,GAAK5D,EAAKE,QAAQ2D,SAAW,EACrD,OAAQ7D,EAAKE,QAAQyD,QACjB,IAAK,QACDxE,GAAyB,IAAnByD,EAAE0E,UAAY,EACpB,MACJ,KAAK,OACDnI,GAA0B,GAArBa,EAAK0H,WAAW9E,GAIjC,MAAOrC,MAAKwG,MAAM5H,EAAIa,EAAK8C,YAAY0E,KAAKpE,IAAIR,MAGxDqE,QACIC,KAAM,qBACNtC,OAAQ,QACRuC,UAAW,MAEfrH,YAAY8C,GACR,MAAO,IAAIV,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,UAAW1E,EAAE2E,YAAY7E,YAGlFiF,KACInB,KAAM,MACNC,MAAO,GACP3G,cAAc8C,GACV,OAAQ5C,EAAKE,QAAQyD,QACjB,IAAK,OACD,MAAO,EACX,KAAK,QACD,MAAO3D,GAAKE,QAAQoE,uBAAyBtE,EAAKyH,mBAAmB7E,GAAK,EAC9E,KAAK,OACD,MAAO5C,GAAKE,QAAQoE,uBAAyBtE,EAAK4H,kBAAkBhF,GAAK,MAGrF9C,oBAAoB8C,GAEhB,OADAA,EAAI,GAAIV,MAAKU,GACL5C,EAAKE,QAAQyD,QACjB,IAAK,OACD,MAAO,EACX,KAAK,QACD,MAAQ3D,GAAKE,QAAQoE,yBAA2BtE,EAAKE,QAAQmE,oBAAwBrE,EAAK6H,cAAc,GAAI3F,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAa,EAAG,IAAMrH,EAAK6H,cAAcjF,GAAK,EAAK,CAC3L,KAAK,OACD,MAAQ5C,GAAKE,QAAQoE,uBAA0BtE,EAAK6H,cAAc,GAAI3F,MAAKU,EAAEwE,cAAe,GAAI,KAAOpH,EAAK6H,cAAc,GAAI3F,MAAKU,EAAEwE,cAAe,IAAM,EAAK,KAG3KT,iBAAkB,EAClB7G,IAAI8C,GACA,MAAO5C,GAAK6G,sBAAsBjE,IAEtC9C,OAAO8C,GACH,MAAO5C,GAAK8G,yBAAyBlE,IAEzCxC,UACIN,EAAE8C,GACE,OAAQ5C,EAAKE,QAAQyD,QACjB,IAAK,OACD,MAAOpD,MAAKwG,MAAM/G,EAAK0H,WAAW9E,GAAK5C,EAAK8C,YAAY6E,IAAIvE,IAAIR,GACpE,KAAK,QACD,MAAI5C,GAAKE,QAAQ0D,SAAW,GAAK5D,EAAKE,QAAQ2D,SAAW,EAC9CtD,KAAKwG,OAAOnE,EAAE0E,UAAY,GAAKtH,EAAK8C,YAAY6E,IAAIvE,IAAIR,IAE5D5C,EAAK6H,cAAcjF,GAAK5C,EAAK6H,cAAc,GAAI3F,MAAKU,EAAEwE,cAAexE,EAAEyE,YAClF,KAAK,OACD,MAAIrH,GAAKE,QAAQ0D,SAAW,GAAK5D,EAAKE,QAAQ2D,SAAW,EAC9CtD,KAAKwG,OAAO/G,EAAK8H,aAAalF,GAAK,GAAK5C,EAAK8C,YAAY6E,IAAIvE,IAAIR,IAErE5C,EAAK6H,cAAcjF,KAGtC9C,EAAE8C,GACE,GAAIzD,GAAIa,EAAK0H,WAAW9E,EACxB,IAAI5C,EAAKE,QAAQ0D,SAAW,GAAK5D,EAAKE,QAAQ2D,SAAW,EACrD,OAAQ7D,EAAKE,QAAQyD,QACjB,IAAK,OACDxE,EAAIa,EAAK8H,aAAalF,GAAK,CAC3B,MACJ,KAAK,OACDzD,EAAIa,EAAK0H,WAAW9E,EACpB,MACJ,KAAK,QACDzD,EAAIyD,EAAE0E,UAAY,EAI9B,MAAO/G,MAAKwG,MAAM5H,EAAIa,EAAK8C,YAAY6E,IAAIvE,IAAIR,MAGvDqE,QACIC,KAAM,gBACNtC,OAAQ,QACRuC,UAAW,MAEfrH,YAAY8C,GACR,MAAO,IAAIV,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,WAAW5E,YAGpEqF,MACIvB,KAAM,OACNC,MAAO,GACPC,cAAe,GACf5G,oBAAoB8C,GAEhB,OADAA,EAAI,GAAIV,MAAKU,GACL5C,EAAKE,QAAQyD,QACjB,IAAK,OACD,MAAO3D,GAAK8C,YAAYiF,KAAKrB,aACjC,KAAK,QACD,MAAO1G,GAAKE,QAAQoE,uBAAyBtE,EAAK6H,cAAc,GAAI3F,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAa,EAAG,IAAMrH,EAAK6H,cAAcjF,GAAK,IAGtJ+D,iBAAkB,EAClB7G,IAAI8C,GACA,MAAO5C,GAAK6G,sBAAsBjE,IAEtC9C,OAAO8C,GACH,MAAO5C,GAAK8G,yBAAyBlE,IAEzCxC,UACIN,EAAE8C,GACE,OAAQ5C,EAAKE,QAAQyD,QACjB,IAAK,OACD,MAAOpD,MAAKwG,MAAM/G,EAAK6H,cAAcjF,GAAK5C,EAAK8C,YAAYiF,KAAK3E,IAAIR,GACxE,KAAK,QACD,MAAOrC,MAAKwG,MAAM/G,EAAKgI,mBAAmBpF,GAAK5C,EAAK8C,YAAYiF,KAAK3E,IAAIR,MAGrF9C,EAAE8C,GACE,MAAO5C,GAAK6H,cAAcjF,GAAK5C,EAAK8C,YAAYiF,KAAK3E,IAAIR,KAGjEqE,QACIC,KAAM,cACNtC,OAAQ,cACRuC,UAAW,MAEfrH,YAAY8C,GACR,GAAIqF,GAAK,GAAI/F,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,WAE/CY,EAAUD,EAAGE,UAAYnI,EAAKE,QAAQ4D,kBAAoB,EAAI,EAKlE,OAJIoE,GAAU,IACVA,EAAU,GAEdD,EAAGG,QAAQH,EAAGX,UAAYY,GACnBD,EAAGvF,YAGlB2F,OACI7B,KAAM,QACNC,MAAO,GACPC,cAAe,GACfE,oBAAqB,GACrBD,iBAAkB,EAClB7G,MACI,MAAOE,GAAK6G,yBAEhB/G,SACI,MAAOE,GAAK8G,4BAEhB1G,UACIN,EAAE8C,GACE,MAAOrC,MAAKwG,MAAMnE,EAAEyE,WAAarH,EAAK8C,YAAYuF,MAAMjF,IAAIR,KAEhE9C,EAAE8C,GACE,MAAOA,GAAEyE,WAAarH,EAAK8C,YAAYuF,MAAMjF,IAAIR,KAGzDqE,QACIC,KAAM,QACNtC,OAAQ,KACRuC,UAAW,MAEfrH,YAAY8C,GACR,MAAO,IAAIV,MAAKU,EAAEwE,cAAexE,EAAEyE,YAAY3E,YAGvD4F,MACI9B,KAAM,OACNC,MAAO,GACP3G,MACI,MAAOE,GAAKE,QAAQ2D,UAAY,GAEpC/D,SACI,MAAOE,GAAKE,QAAQ0D,UAAY,GAEpCxD,UACIN,IACI,MAAO,IAEXA,IACI,MAAO,KAGfmH,QACIC,KAAM,KACNtC,OAAQ,KACRuC,UAAW,MAEfrH,YAAY8C,GACR,MAAO,IAAIV,MAAKU,EAAEwE,eAAe1E,YAK7C,KAAK,GAAI6F,KAAQlF,MAAKP,YAClB,GAAIO,KAAKP,YAAY0F,eAAeD,GAAO,CACvC,GAAI3F,GAAIS,KAAKP,YAAYyF,EACzBlF,MAAKP,YAAY,KAAOyF,IACpB/B,KAAM,KAAO+B,EACb9B,MAAO7D,EAAE2F,KACT7B,cAAe9D,EAAE8D,cACjBC,iBAAkB/D,EAAE+D,iBACpBC,oBAAqBhE,EAAEgE,oBACvBxD,IAAKR,EAAEI,OACPA,OAAQJ,EAAEQ,IACVhD,UACIqE,EAAG7B,EAAExC,SAASsE,EACdA,EAAG9B,EAAExC,SAASqE,GAElBwC,OAAQrE,EAAEqE,OACVwB,YAAa7F,EAAE6F,aAM3BpF,KAAKqF,gBAAkB,KAEvBrF,KAAKsF,YAAa,EAIlBtF,KAAKuF,SAAWC,QAEhBxF,KAAK5B,UACDb,MAAO,EACPN,OAAQ,GAGZ+C,KAAKyF,WACDlI,MAAO,EACPN,OAAQ,GAGZ+C,KAAK0F,cAAgB,EACrB1F,KAAK2F,eAAiB,EAGtB3F,KAAK4F,oBAAsB,EAC3B5F,KAAK6F,uBAAyB,EAC9B7F,KAAK8F,iBAAmB,EAExB9F,KAAK+F,sBAAwB,GAE7B/F,KAAKgG,KAAO,KACZhG,KAAK4C,QAAU,KAEf5C,KAAKiG,mBAAoB,EACzBjG,KAAKkG,mBAAoB,EAEzBlG,KAAKmG,eAAiB,GAAIC,GAC1BpG,KAAK9B,OAAS,KACd8B,KAAKqG,YAAc,KAInBrG,KAAKsG,aAMLtG,KAAKuG,MAAQ,WA4BT,MA1BA5J,GAAK6J,UAAU7J,EAAKE,QAAQ6D,OAAO+F,IAAI,SAASlH,GAC5C,MAAOA,GAAEF,YACVoH,IAAI,SAASlH,GACZ5C,EAAK4I,SAASmB,IAAInH,EAAG5C,EAAKmC,aAAaS,GAAGkH,IAAI,SAASlH,GACnD,OAASoH,EAAGhK,EAAK8C,YAAY9C,EAAKE,QAAQ6C,WAAW0F,YAAY7F,GAAIqH,EAAG,WAIhFjK,EAAKqJ,KAAOtI,SAAUf,EAAKE,QAAQqD,cAAc2G,OAAO,OAAOC,KAAK,QAAS,yBAE7EnK,EAAKiG,QAAUlF,SAAUf,EAAKE,QAAQqD,cACjC4G,KAAK,QAAS,WACX,GAAIC,GAAUrJ,SAAUf,EAAKE,QAAQqD,cAAc4G,KAAK,QACxD,QAAoB,OAAZC,EAAmBA,EAAU,IAAM,uBAE9CF,OAAO,OACPC,KAAK,QAAS,cAEnBnK,EAAKqJ,KAAKc,KAAK,IAAK,GAAGA,KAAK,IAAK,GAAGD,OAAO,OAAOC,KAAK,QAAS,SAEhEnK,EAAKuB,OAAS,GAAIA,GAAOvB,GAErBA,EAAKE,QAAQsD,aACbzD,KAGG,GAqFXsD,KAAKxC,MAAQ,SAASwJ,GA6ElB,QAASC,GAAkBC,EAAa9I,EAAU+I,EAAMC,GACpD,GAAIC,GAAM,CACV,QAAQL,GACJ,KAAK,EAKD,MAJAK,GAAMjJ,EAAS+I,GAEf/I,EAAS+I,IAASC,EAClBzK,EAAKwJ,eAAemB,YAAYJ,EAAaG,GACtCA,CAEX,KAAK1K,GAAKgJ,eAON,MANAhJ,GAAKwJ,eAAemB,YAAYJ,EAAa9I,EAAS+I,IAEtDI,EAAoBH,EACpBI,EAAmB7K,EAAKwJ,eAAesB,qBAAqB,GAE5D9K,EAAKwJ,eAAeuB,aAAaF,GAC1BpJ,EAAS+I,EAEpB,KAAKxK,GAAK+I,cAQN,MAPA2B,IAAOD,EAEPG,GAAqBF,EACrBG,EAAmBpJ,EAAS+I,GAAQxK,EAAKwJ,eAAewB,UAExDhL,EAAKwJ,eAAemB,YAAYJ,EAAaG,GAC7C1K,EAAKwJ,eAAeyB,YAAYL,GACzBF,GAgLnB,QAASQ,GAAaC,GAClB,OAAQjL,EAAQC,MAAMwE,QAClB,IAAK,QACDwG,EACKhB,KAAK,YAAa,SAASvH,GACxB,GAAIwI,GAAI,cACR,QAAQlL,EAAQC,MAAMC,UAClB,IAAK,QACDgL,GAAK,cAAgBzI,EAAEC,GAAK,OAASD,EAAEC,GAAK,GAC5C,MACJ,KAAK,OACDwI,GAAK,iBAAmBpL,EAAKU,2BAA6B,IAIlE,MAAO0K,IAEf,MACJ,KAAK,OACDD,EACKhB,KAAK,YAAa,SAASvH,GACxB,GAAIwI,GAAI,eACR,QAAQlL,EAAQC,MAAMC,UAClB,IAAK,QACDgL,GAAK,eAAiBzI,EAAEC,GAAK5C,EAAKU,4BAA8B,MAAQiC,EAAEC,GAAK,GAC/E,MACJ,KAAK,OACDwI,GAAK,cAAiBpL,EAAKU,2BAA8B,MAAQV,EAAKU,2BAA6B,IAI3G,MAAO0K,MArT3B,GAAIlL,GAAUF,EAAKE,OAEM,KAArB+C,UAAUvD,SACV2K,GAAgB,EAIpB,IAAIgB,GAAYrL,EAAKqJ,KAAKiC,OAAO,UAC5BC,UAAU,iBACVtJ,KACG,WACI,GAAIA,GAAOjC,EAAK8B,eAChB,OAAOuI,KAAkBrK,EAAK+I,cAAgB9G,EAAKuJ,UAAYvJ,GAEnE,SAASW,GACL,MAAOA,KAIfgI,EAAoB,EACpBC,EAAmB,EAMnBY,EAAMJ,EACLK,QACAxB,OAAO,OACPC,KAAK,QAAS,SAASvH,GACpB,MAAOD,GAAEC,GAAG,KAEfuH,KAAK,SAAU,SAASvH,GACrB,MAAOO,GAAEP,GAAG,KAEfuH,KAAK,IAAK,SAASvH,GAChB,MAAI1C,GAAQmE,qBACRrE,EAAKyB,SAASb,MAAQL,KAAKC,IAAIR,EAAKyB,SAASb,MAAO+B,EAAEC,GAAG,IAClD,GAEA0H,EAAkB1H,EAAG5C,EAAKyB,SAAU,QAASkB,EAAEC,GAAG,MAGhEuH,KAAK,IAAK,SAASvH,GAChB,MAAI1C,GAAQmE,oBACDiG,EAAkB1H,EAAG5C,EAAKyB,SAAU,SAAU0B,EAAEP,GAAG,KAE1D5C,EAAKyB,SAASnB,OAASC,KAAKC,IAAIR,EAAKyB,SAASnB,OAAQ6C,EAAEP,GAAG,IACpD,KAGduH,KAAK,QAAS,SAASvH,GACpB,GAAI+I,GAAY,eACZzE,EAAO,GAAIhF,MAAKU,EACpB,QAAQ1C,EAAQyD,QACZ,IAAK,OACDgI,GAAa,MAAQzE,EAAKK,UAE9B,KAAK,MACDoE,GAAa,MAAQzE,EAAKI,UAAY,OAASJ,EAAKiB,QAExD,KAAK,OACDwD,GAAa,MAAQ3L,EAAK6H,cAAcX,EAE5C,KAAK,QACDyE,GAAa,OAASzE,EAAKG,WAAa,EAE5C,KAAK,OACDsE,GAAa,MAAQzE,EAAKE,cAElC,MAAOuE,IAGf3L,GAAK0I,gBAAkB+C,EAiCvBA,EAAIvB,OAAO,QACNC,KAAK,QAAS,SAASvH,GACpB,MAAOD,GAAEC,GAAG,GAAQ1C,EAAQwB,aAAexB,EAAQyB,cAEtDwI,KAAK,SAAU,SAASvH,GACrB,MAAOO,GAAEP,GAAG,GAAQ1C,EAAQwB,aAAexB,EAAQyB,cAEtDwI,KAAK,QAAS,oBAKnB,IAAIyB,GAAoBH,EAAIvB,OAAO,OAC9BC,KAAK,IAAK,WACP,MAA+B,SAA3BjK,EAAQC,MAAMC,SACPJ,EAAKU,2BAA6BR,EAAQgD,aAAa,GAEvDhD,EAAQgD,aAAa,KAGnCiH,KAAK,IAAK,WACP,MAA+B,QAA3BjK,EAAQC,MAAMC,SACPJ,EAAKK,0BAA4BH,EAAQgD,aAAa,GAEtDhD,EAAQgD,aAAa,KAGnCiH,KAAK,QAAS,yBAEf0B,EAAOD,EACNL,UAAU,KACVtJ,KAAK,SAASW,GACX,MAAO5C,GAAK4I,SAASkD,IAAIlJ,KAE5B8I,QACAxB,OAAO,IAEZ2B,GACK3B,OAAO,QACPC,KAAK,QAAS,SAASvH,GACpB,MAAO,aAAe5C,EAAK+L,sBAAsBnJ,EAAEoH,IAA0B,OAApB9J,EAAQgG,QAAmB,gBAAkB,MAEzGiE,KAAK,QAASjK,EAAQO,UACtB0J,KAAK,SAAUjK,EAAQO,UACvB0J,KAAK,IAAK,SAASvH,GAChB,MAAO5C,GAAKgM,mBAAmBpJ,EAAEoH,KAEpCG,KAAK,IAAK,SAASvH,GAChB,MAAO5C,GAAKiM,mBAAmBrJ,EAAEoH,KAEpChJ,GAAG,QAAS,SAAS4B,GAClB,GAAwB,OAApB1C,EAAQgG,QACR,MAAOlG,GAAKkG,QAAQ,GAAIhE,MAAKU,EAAEoH,GAAIpH,EAAEqH,KAG5CiC,KAAK,SAASf,GACPjL,EAAQwD,WAAa,GACrByH,EACKhB,KAAK,KAAMjK,EAAQwD,YACnByG,KAAK,KAAMjK,EAAQwD,YAGH,OAArB1D,EAAK0J,aAAiD,OAAzBxJ,EAAQkF,cAAyBlF,EAAQkF,aAAaoD,eAAe,SAClG2C,EAAUhB,KAAK,OAAQjK,EAAQkF,aAAa+G,MAG5CjM,EAAQ+F,UACRkF,EAAUnK,GAAG,YAAa,SAAS4B,GAC/B,GAAIwJ,GAAa/I,KAAKgJ,WAAWA,UAEjCrM,GAAKiG,QACAqG,KAAKtM,EAAKuM,kBAAkB3J,IAC5BuH,KAAK,QAAS,kBAEnB,IAAIqC,GAAmBxM,EAAKgM,mBAAmBpJ,EAAEoH,GAAKhK,EAAKiG,QAAQwG,OAAOC,YAAc,EAAIxM,EAAQO,SAAW,EAC3GkM,EAAmB3M,EAAKiM,mBAAmBrJ,EAAEoH,GAAKhK,EAAKiG,QAAQwG,OAAOG,aAAe1M,EAAQO,SAAW,CAG5G+L,IAAoBK,SAAST,EAAWU,aAAa,KAAM,IAC3DH,GAAoBE,SAAST,EAAWU,aAAa,KAAM,IAG3DN,GAAoBK,SAAS7M,EAAKqJ,KAAKiC,OAAO,UAAUnB,KAAK,KAAM,IACnEwC,GAAoBE,SAAS7M,EAAKqJ,KAAKiC,OAAO,UAAUnB,KAAK,KAAM,IAGnEqC,GAAoBK,SAAST,EAAWC,WAAWS,aAAa,KAAM,IACtEH,GAAoBE,SAAST,EAAWC,WAAWS,aAAa,KAAM,IAEtE9M,EAAKiG,QAAQkE,KAAK,QACd,yBACWqC,EAAmB,YACpBG,EAAmB,SAGrCxB,EAAUnK,GAAG,WAAY,WACrBhB,EAAKiG,QACAkE,KAAK,QAAS,gBACdmC,KAAK,SAMrBpM,EAAQ+F,SACT4F,EAAK3B,OAAO,SAAS6C,KAAK,SAASnK,GAC/B,MAAO5C,GAAKgN,WAAW,GAAI9K,MAAKU,EAAEoH,GAAI9J,EAAQwF,uBAOpB,KAA9BxF,EAAQS,mBACR8K,EAAIvB,OAAO,QACNC,KAAK,QAAS,eACdA,KAAK,IAAK,SAASvH,GAChB,GAAI8B,GAAIxE,EAAQgD,aAAa,EAC7B,QAAQhD,EAAQC,MAAMC,UAClB,IAAK,MACDsE,GAAK1E,EAAKK,0BAA4B,CACtC,MACJ,KAAK,SACDqE,GAAKvB,EAAEP,GAAK5C,EAAKK,0BAA4B,EAGrD,MAAOqE,GAAIxE,EAAQC,MAAMqE,OAAOE,GAEG,UAAzBxE,EAAQC,MAAMwE,QAAiD,UAA3BzE,EAAQC,MAAMC,UACtB,SAAzBF,EAAQC,MAAMwE,QAAgD,SAA3BzE,EAAQC,MAAMC,UACtD,EAAK,KAGhB+J,KAAK,IAAK,SAASvH,GAChB,GAAI6B,GAAIvE,EAAQgD,aAAa,EAC7B,QAAQhD,EAAQC,MAAMC,UAClB,IAAK,QACDqE,GAAK9B,EAAEC,EACP,MACJ,KAAK,SACL,IAAK,MACD6B,GAAK9B,EAAEC,GAAK,EAGpB,MAA4B,UAAxB1C,EAAQC,MAAMoE,MACPE,EAAIzE,EAAKU,2BAA6BR,EAAQC,MAAMqE,OAAOC,GACpC,UAAzBvE,EAAQC,MAAMwE,QAAqB,EAAK,GAE1CF,EAAIvE,EAAQC,MAAMqE,OAAOC,IAGnC0F,KAAK,cAAe,WACjB,OAAQjK,EAAQC,MAAMoE,OAClB,IAAK,QACL,IAAK,OACD,MAAO,OACX,KAAK,MACL,IAAK,QACD,MAAO,KACX,SACI,MAAO,YAGlB4F,KAAK,oBAAqB,WACvB,MAAOnK,GAAKC,oBAAsB,SAAW,QAEhD8M,KAAK,SAASnK,GACX,MAAO5C,GAAKgN,WAAW,GAAI9K,MAAKU,GAAI1C,EAAQS,qBAE/CuL,KAAKhB,GA2CsB,OAAhChL,EAAQyF,qBACRkG,EACK3B,OAAO,QACPC,KAAK,QAAS,SAASvH,GACpB,MAAO,iBAAmB5C,EAAK+L,sBAAsBnJ,EAAEoH,KAE1DG,KAAK,IAAK,SAASvH,GAChB,MAAO5C,GAAKgM,mBAAmBpJ,EAAEoH,GAAK9J,EAAQO,SAAW,IAE5D0J,KAAK,IAAK,SAASvH,GAChB,MAAO5C,GAAKiM,mBAAmBrJ,EAAEoH,GAAK9J,EAAQO,SAAW,IAE5D0J,KAAK,cAAe,UACpBA,KAAK,oBAAqB,WAC1B4C,KAAK,SAASnK,GACX,MAAO5C,GAAKgN,WAAW,GAAI9K,MAAKU,EAAEoH,GAAI9J,EAAQyF,uBAQtD0E,KAAkB,GAClBgB,EAAU4B,aAAaC,SAAShN,EAAQ8F,mBACnCmE,KAAK,IAAK,SAASvH,GAChB,MAAO1C,GAAQmE,oBAAsB,EAAIrE,EAAKwJ,eAAe2D,YAAYvK,KAE5EuH,KAAK,IAAK,SAASvH,GAChB,MAAO1C,GAAQmE,oBAAsBrE,EAAKwJ,eAAe2D,YAAYvK,GAAK,GAItF,IAAIwK,GAAYpN,EAAKyB,SAASb,MAC1ByM,EAAarN,EAAKyB,SAASnB,MAE3BJ,GAAQmE,oBACRrE,EAAKyB,SAASnB,QAAUsK,EAAoBC,EAE5C7K,EAAKyB,SAASb,OAASgK,EAAoBC,EAI/CQ,EAAUiC,OAAOL,aAAaC,SAAShN,EAAQ8F,mBAC1CmE,KAAK,IAAK,SAASvH,GAChB,GAAI1C,EAAQmE,oBACR,MAAO,EAEP,QAAQgG,GACJ,IAAKrK,GAAK+I,cACN,MAAOxI,MAAKgG,IAAIvG,EAAKyB,SAASb,MAAOwM,EACzC,KAAKpN,GAAKgJ,eACN,OAAQrG,EAAEC,GAAG,MAI5BuH,KAAK,IAAK,SAASvH,GAChB,IAAI1C,EAAQmE,oBAQR,MAAO,EAPP,QAAQgG,GACJ,IAAKrK,GAAK+I,cACN,MAAOxI,MAAKgG,IAAIvG,EAAKyB,SAASnB,OAAQ+M,EAC1C,KAAKrN,GAAKgJ,eACN,OAAQ7F,EAAEP,GAAG,MAM5B2K,SAGLvN,EAAKwN,UAWb1N,KAAK2N,GAuED,QAASC,GAAiBC,EAAUC,EAAYpH,GAC5C,IAAMoH,GAAcD,KAAa,GAAUA,YAAoBE,UAA+B,gBAAbF,KAAuC,KAAbA,EACvG,OAAO,CAEX,MAAM,IAAIG,OAAM,OAAStH,EAAO,iBASpC,QAASuH,GAAoBpK,GACzB,OAAQA,GACJ,IAAK,OACD,MAAO,OACX,KAAK,QACD,MAAO,KACX,KAAK,OACD,MAAO,KACX,KAAK,MACD,MAAO,MACX,SACI,MAAO,OAUnB,QAASqK,KACL,IAAKC,EAAOnL,YAAY0F,eAAetI,EAAQyD,SAA8B,QAAnBzD,EAAQyD,QAAuD,OAAnCzD,EAAQyD,OAAOuK,UAAU,EAAG,GAC9G,KAAM,IAAIJ,OAAM,eAAiB5N,EAAQyD,OAAS,iBAGtD,KAAKsK,EAAOnL,YAAY0F,eAAetI,EAAQ6C,YAAoC,SAAtB7C,EAAQ6C,UACjE,KAAM,IAAI+K,OAAM,kBAAoB5N,EAAQ6C,UAAY,iBAG5D,IAAIkL,EAAOnL,YAAY5C,EAAQyD,QAAQ8C,OAASwH,EAAOnL,YAAY5C,EAAQ6C,WAAW0D,MAClF,KAAM,IAAIqH,OAAM,IAAM5N,EAAQ6C,UAAY,kCAAoC7C,EAAQyD,OAAS,IAGnG,QAAO,EAQX,QAASwK,KAEL,IAAKV,EAASjF,eAAe,UAAaiF,EAASjF,eAAe,WAAaiF,EAAStN,MAAMqI,eAAe,SAAW,CACpH,OAAQtI,EAAQC,MAAMC,UAClB,IAAK,OACDF,EAAQC,MAAMoE,MAAQ,OACtB,MACJ,KAAK,QACDrE,EAAQC,MAAMoE,MAAQ,MACtB,MACJ,SACIrE,EAAQC,MAAMoE,MAAQ,SAGD,SAAzBrE,EAAQC,MAAMwE,OACdzE,EAAQC,MAAMoE,MAAQ,QACU,UAAzBrE,EAAQC,MAAMwE,SACrBzE,EAAQC,MAAMoE,MAAQ,UAIzBkJ,EAASjF,eAAe,UAAaiF,EAASjF,eAAe,WAAaiF,EAAStN,MAAMqI,eAAe,aAC1E,SAA3BtI,EAAQC,MAAMC,UAAkD,UAA3BF,EAAQC,MAAMC,WACnDF,EAAQC,MAAMqE,QACVC,EAAG,GACHC,EAAG,MAWnB,QAAS0J,KACL,OAAQlO,EAAQ+E,wBACZ,IAAK,MACD/E,EAAQ8E,aAAa,GAAKiJ,EAAO7E,qBACjC,MACJ,KAAK,SACDlJ,EAAQ8E,aAAa,GAAKiJ,EAAO7E,qBACjC,MACJ,KAAK,SACL,IAAK,SACDlJ,EAAQ8E,aAAkD,UAArC9E,EAAQgF,yBAAuC,EAAI,GAAK+I,EAAO7E,uBAUhG,QAASiF,GAAoBC,GAUzB,OATqB,gBAAVA,KACPA,GAASA,IAGR1O,MAAM2O,QAAQD,KACfE,QAAQC,IAAI,wDACZH,GAAS,IAGLA,EAAM5O,QACV,IAAK,GACD,OAAQ4O,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAChD,KAAK,GACD,OAAQA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAChD,KAAK,GACD,OAAQA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAChD,KAAK,GACD,MAAOA,EACX,SACI,MAAOA,GAAMI,MAAM,EAAG,IAUlC,QAASC,GAAeL,GACpB,MAAqB,gBAAVA,IACCA,EAAOA,GAAmB,KAAVA,EAAe,IAAM,KAG7C1O,MAAM2O,QAAQD,GACO,IAAjBA,EAAM5O,QACE4O,EAAM,GAAIA,EAAM,GAAK,KACtBA,EAAM5O,OAAS,EACf4O,EAAMI,MAAM,EAAG,GAGnBJ,GAGH,OAAQ,SAGpB,QAASM,GAAcN,GACnB,MAAOA,GAAQ,EAAIA,EAAQ,KAG/B,QAASO,GAAcP,GACnB,MAAIA,GAAQ,GAAKpO,EAAQ0D,SAAW,GAChC4K,QAAQC,IAAI,0EACL,MAEJH,EAAQ,EAAIA,EAAQ,KA5O/B,GAAIL,GAAS5K,KAETnD,EAAU+N,EAAO/N,QAAUlB,EAAeiP,EAAO/N,QAASuN,EAO9D,IAHAO,IACAN,EAAiBxN,EAAQqD,cAAc,EAAO,gBAE1C0K,EAAO3K,gBAAgBwL,QAAQ5O,EAAQgE,aAAc,EACrD,KAAM,IAAI4J,OAAM,kBAAoB5N,EAAQgE,SAAW,2BAG3D,IAA+C,OAA3CnD,SAAUb,EAAQqD,cAAckJ,OAChC,KAAM,IAAIqB,OAAM,aAAe5N,EAAQqD,aAAe,8CAG1D,KACImK,EAAiBxN,EAAQY,cAAc,EAAM,gBAC7C4M,EAAiBxN,EAAQmB,kBAAkB,EAAM,oBACnD,MAAO0N,GAEL,MADAP,SAAQC,IAAIM,EAAMC,UACX,EAKNvB,EAASjF,eAAe,eACzBnF,KAAKnD,QAAQ6C,UAAYgL,EAAoBN,EAAS9J,SAGrB,gBAA1BzD,GAAQe,eAAwD,KAA1Bf,EAAQe,gBACrDuN,QAAQC,IAAI,+DACZvO,EAAQe,cAAgB,cAI5B,IAAImK,IAAK,OAAQ,aAAc,UAAW,YAAa,gBAAiB,0BAA2B,sBAEnG,KAAK,GAAI6D,KAAK7D,GACNqC,EAASjF,eAAe4C,EAAE6D,MAC1B/O,EAAQkL,EAAE6D,IAAMxB,EAASrC,EAAE6D,IAsMnC,OAlMA/O,GAAQwF,oBAA8D,gBAAhCxF,GAAQwF,qBAA2E,kBAAhCxF,GAAQwF,oBAAqCxF,EAAQwF,oBAAsBrC,KAAKP,YAAY5C,EAAQ6C,WAAWkE,OAAOC,KAC/MhH,EAAQS,kBAA0D,gBAA9BT,GAAQS,mBAAuE,kBAA9BT,GAAQS,kBAAmCT,EAAQS,kBAAoB0C,KAAKP,YAAY5C,EAAQyD,QAAQsD,OAAOrC,OACpM1E,EAAQyF,oBAA+D,gBAAhCzF,GAAQyF,qBAAoE,KAAhCzF,EAAQyF,qBAAsE,kBAAhCzF,GAAQyF,oBAAqCzF,EAAQyF,oBAAsB,KAC5MzF,EAAQgD,aAAemL,EAAoBnO,EAAQgD,cACnDhD,EAAQ8E,aAAeqJ,EAAoBnO,EAAQ8E,cACnD9E,EAAQmF,UAAY4I,EAAOiB,kBAAkBhP,EAAQmF,WACrDnF,EAAQoF,SAAWqJ,EAAezO,EAAQoF,UAC1CpF,EAAQ0D,SAAWgL,EAAc1O,EAAQ0D,UACzC1D,EAAQ2D,SAAWgL,EAAc3O,EAAQ2D,UACpC4J,EAASjF,eAAe,iBACzB4F,IAEJD,IAsLO9K,KAAKuG,QAUZ9J,kBAAkBwO,GAOd,MAJK1O,OAAM2O,QAAQD,KACfA,GAASA,IAGNA,EAAMxE,IAAI,SAAS7H,GACtB,MAAa,QAATA,EACO,GAAIC,MAEXD,YAAgBC,OACTD,IAGZkN,OAAO,SAASvM,GACf,MAAOA,MAAM,IAWrB9C,KAAK2L,GAmBD,QAAS2D,GAASC,GACd,MAA2B,QAAvBpB,EAAOvE,iBAIX2F,GAAQlF,KAAK,OAAQ,SAASvH,GAC1B,MAAY,QAARA,EAAEqH,GAAe/J,EAAQsI,eAAe,+BAAiCtI,EAAQkE,2BAC7ElE,EAAQkF,aAAaoD,eAAe,QAC7BtI,EAAQkF,aAAa+G,KAIP,OAAzBjM,EAAQkF,cAAyBlF,EAAQkF,aAAaoD,eAAe,WAC5D,IAAR5F,EAAEqH,GAAoB,OAARrH,EAAEqH,GAAc/J,EAAQsI,eAAe,8BAAgCtI,EAAQkE,2BAEvFlE,EAAQkF,aAAaI,MAG5B5C,EAAEqH,EAAI,GAAK/J,EAAQ0E,OAAO,GAAK,GAA8B,OAAzB1E,EAAQkF,cAAyBlF,EAAQkF,aAAaoD,eAAe,YAClGtI,EAAQkF,aAAakK,SAGzBrB,EAAOvE,YAAYnJ,KAAKgG,IAAI3D,EAAEqH,EAAG/J,EAAQ0E,OAAO1E,EAAQ0E,OAAOlF,OAAS,OA0CvF,QAAS6P,GAAoBF,GACkB,kBAAhCnP,GAAQyF,qBACf0J,EAAQtC,KAAK,SAASnK,GAClB,MAAO1C,GAAQyF,oBAAoB/C,EAAEoH,EAAGpH,EAAEqH,KAnFtD,GAAIgE,GAAS5K,KACTnD,EAAU+N,EAAO/N,OAEI,KAArB+C,UAAUvD,SACV+L,EAAMwC,EAAO5E,KAAKkC,UAAU,iBAGhC,IAAIM,GAAOJ,EACNF,UAAU,OAAOA,UAAU,KAC3BtJ,KAAK,SAASW,GACX,MAAOqL,GAAOrF,SAASkD,IAAIlJ,IAgCnCiJ,GAAKoB,aAAaC,SAAShN,EAAQ8F,mBAAmBsF,OAAO,QACxDnB,KAAK,QAAS,SAASvH,GAEpB,GAAI4M,GAAYvB,EAAOlC,sBAAsBnJ,EAAEoH,GAAGyF,OAAOC,MAAM,KAC3DC,EAAW1B,EAAO2B,eAAehN,EAAEoH,EAAG,GAAI9H,OAC1C2N,EAAW5B,EAAO6B,YAAYlN,EAAEoH,EAAG,GAAI9H,MAwB3C,QAtB2B,OAAvB+L,EAAOvE,aACE,OAAR9G,EAAEqH,GAAe/J,EAAQsI,eAAe,+BAAiCtI,EAAQkE,4BAA+BlE,EAAQkF,aAAaoD,eAAe,UAErJgH,EAAUO,KAAK,cAGfF,EACAL,EAAUO,KAAK,OACPJ,GACRH,EAAUO,KAAK,UAGP,OAARnN,EAAEqH,EACFuF,EAAUO,KAAK9B,EAAO1M,OAAOyO,SAASpN,EAAEqH,EAA2B,OAAvBgE,EAAOvE,cAC5CxJ,EAAQkE,2BAA6BuL,GAC5CH,EAAUO,KAAK9B,EAAO1M,OAAOyO,SAAS,EAA2B,OAAvB/B,EAAOvE,cAG7B,OAApBxJ,EAAQgG,SACRsJ,EAAUO,KAAK,gBAGZP,EAAUS,KAAK,OAEzB/D,KAAKkD,GAEVvD,EAAKoB,aAAaC,SAAShN,EAAQ8F,mBAAmBsF,OAAO,SACxDyB,KAAK,SAASnK,GACX,MAAOqL,GAAO1B,kBAAkB3J,KAgBxCiJ,EAAKoB,aAAaC,SAAShN,EAAQ8F,mBAAmBsF,OAAO,QACxDnB,KAAK,QAAS,SAASvH,GACpB,MAAO,iBAAmBqL,EAAOlC,sBAAsBnJ,EAAEoH,KAE5DkC,KAAKqD,GAYdzP,uBAAuBoQ,EAAWC,GAE9B,IAAK,GAAIC,KAAQD,GACb,GAAIA,EAAK3H,eAAe4H,GAAO,CAC3B,GAAIC,GAAS,GAAIC,QAAO,MAAQF,EAAO,MAAO,KAC9CF,GAAYA,EAAUK,QAAQF,EAAQF,EAAKC,IAGnD,MAAOF,GAeXpQ,aAAa0Q,EAAWC,EAAaC,GAGjC,SAA0B,IAArBzN,UAAUvD,QAAgBgR,GAAqC,OAA5BrN,KAAKnD,QAAQsQ,MAId,kBAA5BnN,MAAKnD,QAAQsQ,IACO,kBAAhBC,KACPA,EAAcA,KAEXpN,KAAKnD,QAAQsQ,GAAWG,MAAMtN,KAAMoN,KAE3CjC,QAAQC,IAAI,yBAA2B+B,EAAY,wBAC5C,IAUf1Q,QAAQ8C,EAAGgO,GAGP,MAAOvN,MAAKwN,aAAa,WAAYjO,EAAGgO,IAM5C9Q,YAGI,MAAOuD,MAAKwN,aAAa,aAM7B/Q,aAGI,GAAIgR,GAAWzN,KAAKwN,aAAa,gBAAkBxN,KAAKsF,WAExD,OADAtF,MAAKsF,YAAa,EACXmI,EASXhR,wBAAwBiE,GAGpB,GAAIkK,GAAS5K,IACb,OAAOA,MAAKwN,aAAa,0BAA2B,WAChD,GAAI9N,GAAYkL,EAAO9L,aAAa4B,EACpC,QAAQhB,EAAUgO,QAAShO,EAAUX,SAU7CtC,oBAAoBiE,GAGhB,GAAIkK,GAAS5K,IACb,OAAOA,MAAKwN,aAAa,sBAAuB,WAC5C,GAAI9N,GAAYkL,EAAO9L,aAAa4B,EACpC,QAAQhB,EAAUgO,QAAShO,EAAUX,SAS7CtC,mBAAmBkR,GAIf,MADA3N,MAAKkG,kBAAoByH,EAClB3N,KAAKwN,aAAa,sBAAuBG,IAQpDlR,mBAAmBkR,GAIf,MADA3N,MAAKiG,kBAAoB0H,EAClB3N,KAAKwN,aAAa,sBAAuBG,IAGpDlR,0BAA0BoH,EAAM+J,GAGxB5N,KAAK6N,mBAAmBhK,IACxB7D,KAAKiD,oBAAmB,GAGH,IAArBrD,UAAUvD,QACN2D,KAAKiG,oBAAsBjG,KAAK8N,mBAAmBF,IACnD5N,KAAKgD,oBAAmB,GAKpCvG,0BAA0BoH,EAAMkK,GAGxB/N,KAAK8N,mBAAmBjK,IACxB7D,KAAKgD,oBAAmB,GAGH,IAArBpD,UAAUvD,QACN2D,KAAKkG,oBAAsBlG,KAAK6N,mBAAmBE,IACnD/N,KAAKiD,oBAAmB,GASpCxG,eACC,MAAOuR,UAAU,MAAMV,MAAMtN,KAAMJ,WAGpCnD,WAAW8C,EAAGqE,GAOV,GAJIhE,UAAUvD,OAAS,IACnBuH,EAAS,SAGS,kBAAXA,GACP,MAAOA,GAAOrE,EAEd,IAAI0O,GAAIC,aAActK,EACtB,OAAOqK,GAAE1O,GAIjB9C,kBAAkB8C,GAGd,GAAY,OAARA,EAAEqH,GAAe5G,KAAKnD,QAAQkE,0BAI3B,CACH,GAAIkK,GAAQ1L,EAAEqH,CAMd,OAJc,QAAVqE,GAAkBjL,KAAKnD,QAAQkE,4BAC/BkK,EAAQ,GAGLjL,KAAKmO,uBAAuBnO,KAAKnD,QAAQqF,qBAAqBE,QACjEgM,MAAOpO,KAAKqO,aAAapD,GACzB9H,KAAMnD,KAAKnD,QAAQoF,SAAoB,IAAVgJ,EAAc,EAAI,GAC/CnH,UAAW9D,KAAKP,YAAYO,KAAKnD,QAAQ6C,WAAWkE,OAAOE,UAC3DD,KAAM7D,KAAK2J,WAAW,GAAI9K,MAAKU,EAAEoH,GAAI3G,KAAKnD,QAAQwF,uBAdtD,MAAOrC,MAAKmO,uBAAuBnO,KAAKnD,QAAQqF,qBAAqBC,OACjE0B,KAAM7D,KAAK2J,WAAW,GAAI9K,MAAKU,EAAEoH,GAAI3G,KAAKnD,QAAQwF,uBA8B9D5F,eAAe6R,GAGX,GAAItO,KAAKiG,mBAA2B,IAANqI,EAC1B,OAAO,CAGX,IAAIC,GAAQvO,KAAKwO,eAAexO,KAAK2F,eAAgB3F,KAAKwG,UAAUxG,KAAKZ,gBAAiBkP,GAK1F,OAHAtO,MAAK8C,oBAAoByL,EAAME,KAC/BzO,KAAKb,0BAA0Ba,KAAKZ,gBAAgBC,UAAWkP,EAAM7N,QAE9D,EAWXjE,mBAAmB6R,GAGf,GAAItO,KAAKkG,mBAA2B,IAANoI,EAC1B,OAAO,CAGX,IAAIC,GAAQvO,KAAKwO,eAAexO,KAAK0F,cAAe1F,KAAKwG,UAAUxG,KAAKvB,gBAAgB,IAAK6P,GAAGnG,UAKhG,OAHAnI,MAAK+C,wBAAwBwL,EAAM7N,OACnCV,KAAKd,0BAA0BqP,EAAM7N,MAAO6N,EAAME,MAE3C,EAGXhS,eAAeiS,EAAWC,GAStB,QAASC,GAAerP,GACpB,OAASoH,EAAGiE,EAAOnL,YAAYmL,EAAO/N,QAAQ6C,WAAW0F,YAAY7F,GAAIqH,EAAG,MAIhF,IAXA,GAAIgE,GAAS5K,KACT6O,EAAWH,IAAc1O,KAAK0F,cAC9BpJ,GAAI,EACJwS,EAAQH,EAAWtS,OACnBmC,EAAUwB,KAAKvB,kBAOVnC,EAAIwS,GAAO,CAChB,GAAID,GAAY7O,KAAK6N,mBAAmBc,EAAWrS,IAAK,CACpDqS,EAAaA,EAAWtD,MAAM,EAAG/O,EAAI,EACrC,OAEJ,IAAKuS,GAAY7O,KAAK8N,mBAAmBa,EAAWrS,IAAK,CACrDqS,EAAaA,EAAWtD,MAAM,EAAG/O,EACjC,QAMR,IAFAqS,EAAaA,EAAWtD,OAAOrL,KAAKnD,QAAQuD,OAEvC9D,EAAI,EAAGwS,EAAQH,EAAWtS,OAAQC,EAAIwS,EAAOxS,IAC9C0D,KAAKuF,SAASmB,IACViI,EAAWrS,GAAG+C,UACdW,KAAKlB,aAAa6P,EAAWrS,IAAImK,IAAImI,IAGzC5O,KAAKuF,SAAS2E,OAAO2E,EAAWrQ,EAAQO,MAAQP,EAAQkP,QAoB5D,OAjBAlP,GAAUwB,KAAKvB,gBAEXoQ,IACAF,EAAaA,EAAWxG,WAG5BnI,KAAKxC,MAAMkR,GAEX1O,KAAKrB,SACDqB,KAAKnD,QAAQ+B,KACb+P,EAAW,GACX3O,KAAKlB,aAAa6P,EAAWA,EAAWtS,OAAS,IAAI0C,MACrD,WACI6L,EAAO5L,KAAK4L,EAAOvF,oBAKvB3E,MAAOiO,EAAWE,EAAW,EAAI,GACjCJ,IAAKjQ,EAAQA,EAAQnC,OAAS,IAUtCI,mBAAmBsS,GAGf,MAAiC,QAAzB/O,KAAKnD,QAAQ+D,SAAqBZ,KAAKnD,QAAQ+D,QAAQvB,UAAY0P,EAS/EtS,mBAAmBsS,GAGf,MAAiC,QAAzB/O,KAAKnD,QAAQ8D,SAAqBX,KAAKnD,QAAQ8D,QAAQtB,WAAa0P,EAQhFtS,gBAGI,MAAOuD,MAAKuF,SAASyJ,OAChBvI,IAAI,SAASlH,GACV,MAAOiK,UAASjK,EAAG,MAEtB0P,KAAK,SAASC,EAAGC,GACd,MAAOD,GAAIC,IAQvB1S,mBAAmB8C,GAGf,GAAI6P,GAAQpP,KAAKP,YAAYO,KAAKnD,QAAQ6C,WAAW3C,SAASqE,EAAE,GAAIvC,MAAKU,GACzE,OAAO6P,GAAQpP,KAAKnD,QAAQO,SAAWgS,EAAQpP,KAAKnD,QAAQyB,YAGhE7B,mBAAmB8C,GAGf,GAAI6P,GAAQpP,KAAKP,YAAYO,KAAKnD,QAAQ6C,WAAW3C,SAASsE,EAAE,GAAIxC,MAAKU,GACzE,OAAO6P,GAAQpP,KAAKnD,QAAQO,SAAWgS,EAAQpP,KAAKnD,QAAQyB,YAGhE7B,yBAAyB8C,GAGrB,GAAIS,KAAKnD,QAAQ2D,SAAW,EAAG,CAC3B,GAAIlE,GAAI0D,KAAKP,YAAYO,KAAKnD,QAAQ6C,WAAW2D,aAIjD,OAHiB,kBAAN/G,KACPA,EAAIA,EAAEiD,IAEHrC,KAAKmS,KAAK/S,EAAI0D,KAAKnD,QAAQ2D,UAGtC,GAAI8O,GAAItP,KAAKP,YAAYO,KAAKnD,QAAQ6C,WAAW6D,mBAKjD,OAJiB,kBAAN+L,KACPA,EAAIA,EAAE/P,IAGHS,KAAKnD,QAAQ0D,UAAY+O,EAGpC7S,sBAAsB8C,GAGlB,GAAIS,KAAKnD,QAAQ0D,SAAW,EAAG,CAC3B,GAAIjE,GAAI0D,KAAKP,YAAYO,KAAKnD,QAAQ6C,WAAW2D,aAIjD,OAHiB,kBAAN/G,KACPA,EAAIA,EAAEiD,IAEHrC,KAAKmS,KAAK/S,EAAI0D,KAAKnD,QAAQ0D,UAGtC,GAAI+O,GAAItP,KAAKP,YAAYO,KAAKnD,QAAQ6C,WAAW4D,gBAKjD,OAJiB,kBAANgM,KACPA,EAAIA,EAAE/P,IAGHS,KAAKnD,QAAQ2D,UAAY8O,EASpC7S,sBAAsB8C,GAKlB,GAFAA,EAAI,GAAIV,MAAKU,GAETS,KAAKnD,QAAQmF,UAAU3F,OAAS,EAChC,IAAK,GAAIC,KAAK0D,MAAKnD,QAAQmF,UACvB,GAAIhC,KAAKyM,YAAYzM,KAAKnD,QAAQmF,UAAU1F,GAAIiD,GAC5C,MAAOS,MAAKuP,MAAMvP,KAAKnD,QAAQmF,UAAU1F,IAAM,iBAAmB,YAI9E,OAAO,GAUXG,MAAM8C,GAGF,MAAOS,MAAKyM,YAAYlN,EAAG,GAAIV,OAanCpC,YAAY+S,EAAOC,GAWf,OARMD,YAAiB3Q,QACnB2Q,EAAQ,GAAI3Q,MAAK2Q,IAGfC,YAAiB5Q,QACnB4Q,EAAQ,GAAI5Q,MAAK4Q,IAGbzP,KAAKnD,QAAQ6C,WACjB,IAAK,QACL,IAAK,MACD,MAAO8P,GAAMzL,gBAAkB0L,EAAM1L,eACjCyL,EAAMxL,aAAeyL,EAAMzL,YAC3BwL,EAAMvL,YAAcwL,EAAMxL,WAC1BuL,EAAMtL,aAAeuL,EAAMvL,YAC3BsL,EAAM7L,eAAiB8L,EAAM9L,YACrC,KAAK,SACL,IAAK,OACD,MAAO6L,GAAMzL,gBAAkB0L,EAAM1L,eACjCyL,EAAMxL,aAAeyL,EAAMzL,YAC3BwL,EAAMvL,YAAcwL,EAAMxL,WAC1BuL,EAAMtL,aAAeuL,EAAMvL,UACnC,KAAK,QACL,IAAK,MACD,MAAOsL,GAAMzL,gBAAkB0L,EAAM1L,eACjCyL,EAAMxL,aAAeyL,EAAMzL,YAC3BwL,EAAMvL,YAAcwL,EAAMxL,SAClC,KAAK,SACL,IAAK,OACD,MAAOuL,GAAMzL,gBAAkB0L,EAAM1L,eACjC/D,KAAKwE,cAAcgL,KAAWxP,KAAKwE,cAAciL,EACzD,KAAK,UACL,IAAK,QACD,MAAOD,GAAMzL,gBAAkB0L,EAAM1L,eACjCyL,EAAMxL,aAAeyL,EAAMzL,UACnC,SACI,OAAO,GAYnBvH,eAAe+S,EAAOC,GAYlB,QAASC,GAAiB7L,EAAM8L,GAC5B,OAAQA,GACJ,IAAK,QACL,IAAK,MACD,MAAO,IAAI9Q,MAAKgF,EAAKE,cAAeF,EAAKG,WAAYH,EAAKI,UAAWJ,EAAKK,WAAYL,EAAKF,cAActE,SAC7G,KAAK,SACL,IAAK,OACD,MAAO,IAAIR,MAAKgF,EAAKE,cAAeF,EAAKG,WAAYH,EAAKI,UAAWJ,EAAKK,YAAY7E,SAC1F,KAAK,QACL,IAAK,MACD,MAAO,IAAIR,MAAKgF,EAAKE,cAAeF,EAAKG,WAAYH,EAAKI,WAAW5E,SACzE,KAAK,SACL,IAAK,OACL,IAAK,UACL,IAAK,QACD,MAAO,IAAIR,MAAKgF,EAAKE,cAAeF,EAAKG,YAAY3E,SACzD,SACI,MAAOwE,GAAKxE,WAIxB,MA9BMmQ,aAAiB3Q,QACnB2Q,EAAQ,GAAI3Q,MAAK2Q,IAGfC,YAAiB5Q,QACnB4Q,EAAQ,GAAI5Q,MAAK4Q,IAyBdC,EAAiBF,EAAOxP,KAAKnD,QAAQ6C,WAAagQ,EAAiBD,EAAOzP,KAAKnD,QAAQ6C,WAalGjD,eACC,MAAOyR,cAAc,MAAMZ,MAAMtN,KAAMJ,WAQxCnD,cAAc8C,GAGV,GAAI0O,GAAIjO,KAAKnD,QAAQ4D,qBAAsB,EAAOyN,aAAc,MAAQA,aAAc,KACtF,OAAOD,GAAE1O,GASb9C,mBAAmB8C,GAGE,gBAANA,KACPA,EAAI,GAAIV,MAAKU,GAGjB,IAAIqQ,GAAuB5P,KAAKwE,cAAc,GAAI3F,MAAKU,EAAEwE,cAAexE,EAAEyE,YAC1E,OAAOhE,MAAKwE,cAAcjF,GAAKqQ,EAAuB,EAS1DnT,oBAAoB8C,GAGC,gBAANA,KACPA,EAAI,GAAIV,MAAKU,IAUrB9C,mBAAmB8C,GAGf,MAAOS,MAAK6P,cAActQ,GAAG0E,UASjCxH,kBAAkB8C,GAMd,MAHiB,gBAANA,KACPA,EAAI,GAAIV,MAAKU,IAEuC,IAAhD,GAAIV,MAAKU,EAAEwE,cAAe,EAAG,IAAIC,WAAoB,IAAM,IAYvEvH,WAAW8C,GAGP,MAAIS,MAAKnD,QAAQ4D,qBAAsB,EAC5BlB,EAAEuF,SAES,IAAfvF,EAAEuF,SAAiB,EAAKvF,EAAEuF,SAAW,EAQhDrI,cAAc8C,GAMV,MAHiB,gBAANA,KACPA,EAAI,GAAIV,MAAKU,IAEV,GAAIV,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAa,EAAG,GAUvDvH,SAASoH,EAAMuK,EAAO0B,GAGlB,GAAIvQ,GAAI,GAAIV,MAAKgF,EACjB,QAAQiM,GACJ,IAAK,OACDvQ,EAAEwQ,SAASxQ,EAAE2E,WAAakK,EAC1B,MACJ,KAAK,MACD7O,EAAEwQ,SAASxQ,EAAE2E,WAAqB,GAARkK,EAC1B,MACJ,KAAK,OACD7O,EAAEwQ,SAASxQ,EAAE2E,WAAqB,GAARkK,EAAa,EACvC,MACJ,KAAK,QACD7O,EAAEyQ,SAASzQ,EAAEyE,WAAaoK,EAC1B,MACJ,KAAK,OACD7O,EAAE0Q,YAAY1Q,EAAEwE,cAAgBqK,GAGxC,MAAO,IAAIvP,MAAKU,GAcpB9C,gBAAgB8C,EAAGa,GAGf,GAAIM,GAAQ,GAAI7B,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,UAAW1E,EAAE2E,YAC/DgM,EAAO,IAMX,OAJIA,GADA9P,YAAiBvB,MACV,GAAIA,MAAKuB,EAAM2D,cAAe3D,EAAM4D,WAAY5D,EAAM6D,UAAW7D,EAAM8D,YAEvE,GAAIrF,OAAM6B,EAAgB,IAARN,EAAe,IAErC+P,cAAejT,KAAKgG,IAAIxC,EAAOwP,GAAOhT,KAAKC,IAAIuD,EAAOwP,IAUjEzT,cAAc8C,EAAGa,GAGb,GAAIM,GAAQ,GAAI7B,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,UAAW1E,EAAE2E,YAC/DgM,EAAO,IACP9P,aAAiBvB,MACjBqR,EAAO,GAAIrR,MAAKuB,EAAM2D,cAAe3D,EAAM4D,WAAY5D,EAAM6D,UAAW7D,EAAM8D,aAE9EgM,EAAO,GAAIrR,MAAK6B,GAChBwP,EAAKH,SAASG,EAAKhM,WAAa9D,GAGpC,IAAI5B,GAAU4R,YAAalT,KAAKgG,IAAIxC,EAAOwP,GAAOhT,KAAKC,IAAIuD,EAAOwP,IAI9D5T,EAAI,EACJwS,EAAQtQ,EAAQnC,MACpB,KAAKC,EAAI,EAAGA,EAAIwS,EAAOxS,IACnB,GAAIA,EAAI,GAAMkC,EAAQlC,GAAG4H,aAAe1F,EAAQlC,EAAI,GAAG4H,WAAa,CAChElE,KAAKsG,UAAUoG,KAAKlO,EAAQlC,GAAG+C,WAC/Bb,EAAQ6R,OAAO/T,EAAG,EAClB,OAWR,MAJqB,gBAAV8D,IAAsB5B,EAAQnC,OAASa,KAAKoT,IAAIlQ,IACvD5B,EAAQ6R,OAAO7R,EAAQnC,OAAS,EAAG,GAGhCmC,EAUX/B,aAAa8C,EAAGa,GAGZ,GAAIM,GAAQ,GAAI7B,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,WAClDiM,EAAO,IAQX,OAPI9P,aAAiBvB,MACjBqR,EAAO,GAAIrR,MAAKuB,EAAM2D,cAAe3D,EAAM4D,WAAY5D,EAAM6D,YAE7DiM,EAAO,GAAIrR,MAAK6B,GAChBwP,EAAO,GAAIrR,MAAKqR,EAAKnL,QAAQmL,EAAKjM,UAAYuF,SAASpJ,EAAO,OAG3DmQ,WAAYrT,KAAKgG,IAAIxC,EAAOwP,GAAOhT,KAAKC,IAAIuD,EAAOwP,IAU9DzT,cAAc8C,EAAGa,GAGb,GAAIoQ,EAEAxQ,MAAKnD,QAAQ4D,qBAAsB,EACnC+P,EAAY,GAAI3R,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,UAAY1E,EAAEuF,UAEjD,IAAfvF,EAAEuF,SACF0L,EAAY,GAAI3R,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,WAChC,IAAf1E,EAAEuF,UACT0L,EAAY,GAAI3R,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,WACtDuM,EAAUzL,QAAQyL,EAAUvM,UAAY,IAExCuM,EAAY,GAAI3R,MAAKU,EAAEwE,cAAexE,EAAEyE,WAAYzE,EAAE0E,UAAY1E,EAAEuF,SAAW,EAIvF,IAAI2L,GAAU,GAAI5R,MAAK2R,GAEnBN,EAAO9P,CAKX,OAJqB,gBAAVA,KACP8P,EAAO,GAAIrR,MAAK4R,EAAQ1L,QAAQ0L,EAAQxM,UAAoB,EAAR7D,KAGhDJ,KAAKnD,QAAQ4D,qBAAsB,EACvCiQ,cAAexT,KAAKgG,IAAIsN,EAAWN,GAAOhT,KAAKC,IAAIqT,EAAWN,IAC9DS,cAAezT,KAAKgG,IAAIsN,EAAWN,GAAOhT,KAAKC,IAAIqT,EAAWN,IAUtEzT,eAAe8C,EAAGa,GAGd,GAAIM,GAAQ,GAAI7B,MAAKU,EAAEwE,cAAexE,EAAEyE,YACpCkM,EAAO,IAQX,OAPI9P,aAAiBvB,MACjBqR,EAAO,GAAIrR,MAAKuB,EAAM2D,cAAe3D,EAAM4D,aAE3CkM,EAAO,GAAIrR,MAAK6B,GAChBwP,EAAOA,EAAKF,SAASE,EAAKlM,WAAa5D,IAGpCwQ,aAAc1T,KAAKgG,IAAIxC,EAAOwP,GAAOhT,KAAKC,IAAIuD,EAAOwP,IAUhEzT,cAAc8C,EAAGa,GAGb,GAAIM,GAAQ,GAAI7B,MAAKU,EAAEwE,cAAe,GAClCmM,EAAO,IAOX,OALIA,GADA9P,YAAiBvB,MACV,GAAIA,MAAKuB,EAAM2D,cAAe,GAE9B,GAAIlF,MAAKU,EAAEwE,cAAgB3D,EAAO,GAGtCyQ,YAAa3T,KAAKgG,IAAIxC,EAAOwP,GAAOhT,KAAKC,IAAIuD,EAAOwP,IAU/DzT,UAAUoH,EAAMzD,GAWZ,OARoB,gBAATyD,KACPA,EAAO,GAAIhF,MAAKgF,IAGhBjE,UAAUvD,OAAS,IACnB+D,EAAQJ,KAAKnD,QAAQuD,OAGjBJ,KAAKnD,QAAQyD,QACjB,IAAK,OACD,GAAI9B,GAAUwB,KAAK8Q,cAAcjN,EAAMzD,EAWvC,OAPqB,gBAAVA,IAAsB5B,EAAQnC,OAAS+D,IAC1CA,EAAQ,EACR5B,EAAQkO,KAAK1M,KAAK8Q,cAActS,EAAQA,EAAQnC,OAAS,GAAI,GAAG,IAEhEmC,EAAQkP,MAAM1N,KAAK8Q,cAActS,EAAQ,IAAI,GAAI,KAGlDA,CACX,KAAK,MACD,MAAOwB,MAAK+Q,aAAalN,EAAMzD,EACnC,KAAK,OACD,MAAOJ,MAAKgR,cAAcnN,EAAMzD,EACpC,KAAK,QACD,MAAOJ,MAAKiR,eAAepN,EAAMzD,EACrC,KAAK,OACD,MAAOJ,MAAKkR,cAAcrN,EAAMzD,IAK5C3D,aAAaoH,GAGW,gBAATA,KACPA,EAAO,GAAIhF,MAAKgF,GAGpB,IAAI+G,GAAS5K,KAKTmR,EAA0B,SAAStN,EAAMvD,GACzC,OAAQA,GACJ,IAAK,OACD,MAAOsK,GAAOrG,kBAAkBV,EACpC,KAAK,QACD,MAAO+G,GAAOxG,mBAAmBP,EACrC,KAAK,OACD,MAAO,KAOfuN,EAA0B,SAASvN,EAAMvD,GACzC,OAAQA,GACJ,IAAK,OACD,MAAO,GACX,KAAK,MACD,MAAO,KACX,KAAK,OACD,MAAO,SAOf+Q,EAA2B,SAASxN,EAAMvD,GAC1C,OAAQA,GACJ,IAAK,MACD,MAAO,GACX,KAAK,OACD,MAAO,IACX,KAAK,QACD,MAAyC,IAAlCsK,EAAOxG,mBAAmBP,KAOzCyN,EAA2B,SAASzN,EAAMvD,GAC1C,GAAe,UAAXA,EAAoB,CACpB,GAAIiR,GAAa,GAAI1S,MAAKgF,EAAKE,cAAeF,EAAKG,WAAa,EAAG,GAC/DwN,EAAY5G,EAAOpG,cAAc+M,GACjCE,EAAc7G,EAAOpG,cAAc,GAAI3F,MAAKgF,EAAKE,cAAeF,EAAKG;AAOzE,MALIyN,GAAcD,IACdC,EAAc,EACdD,KAGGA,EAAYC,EAAc,EAC9B,GAAe,SAAXnR,EACP,MAAOsK,GAAOpG,cAAc,GAAI3F,MAAKgF,EAAKE,cAAe,GAAI,KAIrE,QAAQ/D,KAAKnD,QAAQ6C,WACjB,IAAK,QACL,IAAK,MACD,MAAOM,MAAK0R,gBAAgB7N,EAAMuN,EAAwBvN,EAAM7D,KAAKnD,QAAQyD,QACjF,KAAK,SACL,IAAK,OACD,MAAON,MAAK8Q,cAAcjN,EAAMwN,EAAyBxN,EAAM7D,KAAKnD,QAAQyD,QAChF,KAAK,QACL,IAAK,MACD,MAAON,MAAK+Q,aAAalN,EAAMsN,EAAwBtN,EAAM7D,KAAKnD,QAAQyD,QAC9E,KAAK,SACL,IAAK,OACD,MAAON,MAAKgR,cAAcnN,EAAMyN,EAAyBzN,EAAM7D,KAAKnD,QAAQyD,QAChF,KAAK,UACL,IAAK,QACD,MAAON,MAAKiR,eAAepN,EAAM,KAS7CpH,cAAc6R,GAMV,MAHyB,KAArB1O,UAAUvD,SACViS,EAAI,GAEDtO,KAAKwG,UAAUxG,KAAK2R,SAAS3R,KAAKvB,gBAAgBM,MAAOuP,EAAGtO,KAAKnD,QAAQyD,QAAS,GAAG,GAQhG7D,kBAAkB6R,GAMd,MAHyB,KAArB1O,UAAUvD,SACViS,EAAI,GAEDtO,KAAKwG,UAAUxG,KAAK2R,SAAS3R,KAAKvB,gBAAgBiP,SAAUY,EAAGtO,KAAKnD,QAAQyD,QAAS,GAAG,GAsBnG7D,SAASmV,EAAQC,EAAWpB,EAASqB,EAAUvT,EAAWwT,GAGtD,GAAIpV,GAAOqD,IACPJ,WAAUvD,OAAS,IACnBkC,GAAY,GAEZqB,UAAUvD,OAAS,IACnB0V,EAAa/R,KAAK8F,iBAEtB,IAAIkM,GAAY,SAASpT,GACjBL,KAAc,EACW,kBAAdA,GACPK,EAAOL,EAAUK,GAC6B,kBAAhCjC,GAAKE,QAAQoV,cAC3BrT,EAAOjC,EAAKE,QAAQoV,cAAcrT,GAElCuM,QAAQC,IAAI,0DAEiB,QAA1BzO,EAAKE,QAAQgE,UAAgD,QAA1BlE,EAAKE,QAAQgE,WACvDjC,EAAOoB,KAAKkS,aAAatT,IAE7BjC,EAAKwV,WAAWvT,EAAMmT,EAAYF,EAAWpB,GACrB,kBAAbqB,IACPA,IAIR,cAAeF,IACX,IAAK,SACD,GAAe,KAAXA,EAEA,MADAI,QACO,CAEP,IAAII,GAAMpS,KAAKqS,SAAST,EAAQC,EAAWpB,GACvC6B,EAAc,KACmB,QAAjC3V,EAAKE,QAAQiE,kBACbwR,EAAc,OAElB,IAAIC,GAAU,IAKd,QAJqC,OAAjC5V,EAAKE,QAAQiE,kBACbyR,EAAUvS,KAAKqS,SAAS1V,EAAKE,QAAQiE,gBAAiB+Q,EAAWpB,IAG7DzQ,KAAKnD,QAAQgE,UACjB,IAAK,OACD2R,OAAQJ,EAAKJ,GAAWS,KAAKH,EAAaC,EAC1C,MACJ,KAAK,MACDG,MAAON,EAAKJ,GAAWS,KAAKH,EAAaC,EACzC,MACJ,KAAK,MACDI,MAAOP,EAAKJ,GAAWS,KAAKH,EAAaC,EACzC,MACJ,KAAK,MACDK,OAAQR,EAAKJ,GAAWS,KAAKH,EAAaC,GAItD,OAAO,CACX,KAAK,SACD,GAAIX,IAAW5V,OAAO4V,GAElB,MADAI,GAAUJ,IACH,CAGf,SAEI,MADAI,QACO,GAcnBvV,WAAWmC,EAAMmT,EAAYF,EAAWpB,GAGhCsB,IAAe/R,KAAK4F,qBACpB5F,KAAKuF,SAASsN,QAAQ,SAASC,EAAK7H,GAChCA,EAAM4H,QAAQ,SAAS7G,EAASoD,EAAO2D,GACnCA,EAAM3D,GAAOxI,EAAI,QAK7B,IAAIoM,MAEAC,EAAc,SAAS1T,GACvB,MAAOA,GAAEoH,EAIb,KAAK,GAAIpH,KAAKX,GAAM,CAChB,GAAIiF,GAAO,GAAIhF,MAAS,IAAJU,GAChB2T,EAAalT,KAAKwG,UAAU3C,GAAM,GAAGxE,SAczC,IAVIW,KAAKsG,UAAUmF,QAAQyH,IAAe,GAIlClT,KAAKuF,SAAS4N,IAAID,EAAa,QAC/BA,GAAc,OAKlBE,MAAM7T,IAAOX,EAAKuG,eAAe5F,IAAOS,KAAKuF,SAAS4N,IAAID,IAAiBA,IAAerB,GAAaqB,GAAczC,EAAzH,CAIA,GAAI4C,GAAiBrT,KAAKuF,SAASkD,IAAIyK,EAElCF,GAAK7N,eAAe+N,KACrBF,EAAKE,GAAcG,EAAe5M,IAAIwM,GAG1C,IAAI7D,GAAQ4D,EAAKE,GAAYzH,QAAQzL,KAAKP,YAAYO,KAAKnD,QAAQ6C,WAAW0F,YAAYvB,GAEtFkO,KAAe/R,KAAK6F,uBACpBwN,EAAejE,GAAOxI,EAAIhI,EAAKW,GAE1B6T,MAAMC,EAAejE,GAAOxI,GAG7ByM,EAAejE,GAAOxI,EAAIhI,EAAKW,GAF/B8T,EAAejE,GAAOxI,GAAKhI,EAAKW,KAQhD9C,SAAS6W,EAAKzB,EAAWpB,GAWrB,MAPA6C,GAAMA,EAAIpG,QAAQ,mBAAoB2E,EAAUxS,UAAY,KAC5DiU,EAAMA,EAAIpG,QAAQ,iBAAkBuD,EAAQpR,UAAY,KAGxDiU,EAAMA,EAAIpG,QAAQ,mBAAoB2E,EAAU0B,eAChDD,EAAMA,EAAIpG,QAAQ,iBAAkBuD,EAAQ8C,eAKhD9W,aAAamC,GAGT,GAEItC,GAAGwS,EAFHvP,KACAyP,EAAOhT,OAAOgT,KAAKpQ,EAAK,GAE5B,KAAKtC,EAAI,EAAGwS,EAAQlQ,EAAKvC,OAAQC,EAAIwS,EAAOxS,IACxCiD,EAAEX,EAAKtC,GAAG0S,EAAK,MAAQpQ,EAAKtC,GAAG0S,EAAK,GAExC,OAAOzP,GAYX9C,SAGI,GAAImO,GAAS5K,KACTnD,EAAU+N,EAAO/N,QACjB2W,EAAc3W,EAAQ2E,cAAiBoJ,EAAO1M,OAAOuV,OAAO,SAAW5W,EAAQ8E,aAAa,GAAK9E,EAAQ8E,aAAa,GAAM,EAC5H+R,EAAe7W,EAAQ2E,cAAiBoJ,EAAO1M,OAAOuV,OAAO,UAAY5W,EAAQ8E,aAAa,GAAK9E,EAAQ8E,aAAa,GAAM,EAE9HgS,EAAa/I,EAAOxM,SAASb,MAAQV,EAAQwB,aAAexB,EAAQyB,YACpEsV,EAAchJ,EAAOxM,SAASnB,OAASJ,EAAQwB,aAAexB,EAAQyB,WAE1E0B,MAAKgG,KAAK4D,aAAaC,SAAShN,EAAQ8F,mBACnCmE,KAAK,QAAS,WACX,MAAuC,WAAnCjK,EAAQ+E,wBAA0E,WAAnC/E,EAAQ+E,uBAChD+R,EAAaH,EAEjBtW,KAAKC,IAAIwW,EAAYH,KAE/B1M,KAAK,SAAU,WACZ,MAAuC,WAAnCjK,EAAQ+E,wBAA0E,WAAnC/E,EAAQ+E,uBAChD1E,KAAKC,IAAIyW,EAAaF,GAE1BE,EAAcF,IAG7B1T,KAAKgG,KAAKiC,OAAO,UAAU2B,aAAaC,SAAShN,EAAQ8F,mBACpDmE,KAAK,IAAK,WACP,MAAuC,QAAnCjK,EAAQ+E,uBACD8R,EAEJ,IAEV5M,KAAK,IAAK,WACP,MACwC,WAAnCjK,EAAQ+E,wBAA0E,WAAnC/E,EAAQ+E,wBACnB,SAArC/E,EAAQgF,yBAGL,EAFI2R,IAcvB/W,KAAK6R,GAMD,MAHyB,KAArB1O,UAAUvD,SACViS,EAAI,GAEDtO,KAAKjC,eAAeuQ,GAM/B7R,SAAS6R,GAML,MAHyB,KAArB1O,UAAUvD,SACViS,EAAI,GAEDtO,KAAK/B,mBAAmBqQ,GAcnC7R,OAAOoH,EAAMgQ,GAGLjU,UAAUvD,OAAS,IACnBwX,GAAQ,EAEZ,IAAIrV,GAAUwB,KAAKvB,gBACfqV,EAActV,EAAQ,GACtBuV,EAAavV,EAAQA,EAAQnC,OAAS,EAE1C,OAAIwH,GAAOiQ,EACA9T,KAAK/B,mBAAmB+B,KAAKwG,UAAUsN,EAAajQ,GAAMxH,QAE7DwX,EACO7T,KAAKjC,eAAeiC,KAAKwG,UAAUsN,EAAajQ,GAAMxH,QAG7DwH,EAAOkQ,GACA/T,KAAKjC,eAAeiC,KAAKwG,UAAUuN,EAAYlQ,GAAMxH,QAaxEI,SAGIuD,KAAKgU,OAAOhU,KAAKnD,QAAQ6D,OAAO,GAUpCjE,OAAOwX,EAAY1V,EAAWwT,GAGtBnS,UAAUvD,OAAS,IACnBkC,GAAY,GAEZqB,UAAUvD,OAAS,IACnB0V,EAAa/R,KAAK4F,oBAGtB,IAAIpH,GAAUwB,KAAKvB,gBACf9B,EAAOqD,IACXA,MAAKrB,SACDsV,EACA,GAAIpV,MAAKL,EAAQ,IACjBwB,KAAKlB,aAAaN,EAAQA,EAAQnC,OAAS,IAAI0C,MAC/C,WACIpC,EAAKqC,QAETT,EACAwT,GAURtV,YAGI,GAAIyX,GAAYlU,KAAKnD,QAAQ0E,OAAO8J,MAAM,EACtCzL,WAAUvD,QAAU,GAAKE,MAAM2O,QAAQtL,UAAU,MACjDI,KAAKnD,QAAQ0E,OAAS3B,UAAU,IAEhCA,UAAUvD,QAAU,IAChBE,MAAM2O,QAAQtL,UAAU,KAAOA,UAAU,GAAGvD,QAAU,EACtD2D,KAAKnD,QAAQkF,cAAgBnC,UAAU,GAAG,GAAIA,UAAU,GAAG,IAE3DI,KAAKnD,QAAQkF,aAAenC,UAAU,KAIzCA,UAAUvD,OAAS,IAAMH,EAAYgY,EAAWlU,KAAKnD,QAAQ0E,SAAY3B,UAAUvD,QAAU,KAC9F2D,KAAK9B,OAAOiW,cACZnU,KAAKhB,QAGTgB,KAAK9B,OAAOC,OAAO6B,KAAK5B,SAASb,MAAQyC,KAAKnD,QAAQwB,aAAe2B,KAAKnD,QAAQyB,aAQtF7B,eAGI,QAAKuD,KAAKnD,QAAQ2E,gBAGlBxB,KAAKnD,QAAQ2E,eAAgB,EAC7BxB,KAAK9B,OAAOgM,UACL,GAQXzN,aAGI,OAAIuD,KAAKnD,QAAQ2E,gBAGjBxB,KAAKnD,QAAQ2E,eAAgB,EAC7BxB,KAAK9B,OAAOC,OAAO6B,KAAK5B,SAASb,MAAQyC,KAAKnD,QAAQwB,aAAe2B,KAAKnD,QAAQyB,cAC3E,GAYX7B,UAAUqQ,GAGN,OAAK9M,KAAKnD,QAAQmF,UAAYhC,KAAK6L,kBAAkBiB,IAAOzQ,OAAS,IACjE2D,KAAKhB,QACE,GAcfvC,QAAQqV,GAeJ,MAZA9R,MAAKgG,KAAK4D,aAAaC,SAAS7J,KAAKnD,QAAQ8F,mBACxCmE,KAAK,QAAS,GACdA,KAAK,SAAU,GACfoD,SACAkK,KAAK,WACsB,kBAAbtC,GACPA,IAC2B,mBAAbA,IACd3G,QAAQC,IAAI,wDAIjB,KAGX3O,SAoBI,IAAK,GAjBD4X,IACAC,4BACAC,YACAC,iBACAC,oBACAC,cACAC,wBACAC,oBACAC,cACAC,wBACAC,wBACAC,kBACAC,qBACAC,SACAC,UAGK7F,EAAI,EAAGR,EAAQ9O,KAAKnD,QAAQ0E,OAAOlF,OAAS,EAAGiT,GAAKR,EAAOQ,IAChE+E,EAAO,KAAO/E,KAGlB,IAAItJ,GAAOhG,KAAKgG,KAEZoP,GAEA,SAAU,eAAgB,iBAAkB,mBAAoB,oBAAqB,iBAAkB,oBACvG,OAAQ,eAAgB,YACxB,SAAU,eAAgB,aAAc,aACxC,sBAAuB,iBAAkB,oBAAqB,+BAAgC,6BAA8B,UAAW,cACvI,kBAGA,iBAAkB,cAAe,OAAQ,YAAa,eAGtDC,EAAe,SAASC,EAAWC,EAAUtK,GACzCmK,EAAgB3J,QAAQ8J,MAAc,IACtClB,EAAOiB,GAAWC,GAAYtK,IAIlCuK,EAAa,SAASvZ,GACtB,MAAO+J,GAAKiC,OAAOhM,GAAGmN,OAI1B,KAAK,GAAI4C,KAAWqI,GAChB,GAAKA,EAAOlP,eAAe6G,GAA3B,CAIA,GAAIyJ,GAAMD,EAAWxJ,EAErB,IAAY,OAARyJ,EAMJ,GAAI,oBAAsBC,QAAQ,CAC9B,GAAIC,GAAKC,iBAAiBH,EAAK,KAC/B,IAAkB,IAAdE,EAAGtZ,OACH,IAAK,GAAIC,GAAI,EAAGA,EAAIqZ,EAAGtZ,OAAQC,IAC3B+Y,EAAarJ,EAAS2J,EAAGE,KAAKvZ,GAAIqZ,EAAGG,iBAAiBH,EAAGE,KAAKvZ,SAMlE,KAAK,GAAIsP,KAAK+J,GACNA,EAAGxQ,eAAeyG,IAClByJ,EAAarJ,EAASJ,EAAG+J,EAAG/J,QAMrC,IAAI,gBAAkB6J,GAAK,CAC9B,GAAIM,GAAMN,EAAIO,YACd,KAAK,GAAIla,KAAKia,GACVV,EAAarJ,EAASlQ,EAAGia,EAAIja,KAKzC,GAAIma,GAAS,sHAGb,KAAK,GAAIC,KAAS7B,GAAQ,CACtB4B,GAAUC,EAAQ,MAClB,KAAK,GAAIC,KAAK9B,GAAO6B,GACjBD,GAAU,KAAOE,EAAI,IAAM9B,EAAO6B,GAAOC,GAAK,KAElDF,IAAU,MAOd,MAJAA,IAAU,cACVA,IAAU,GAAIG,gBAAgBC,kBAAkBrW,KAAKgG,KAAKoD,QAC1D6M,GAAU,eAahB7P,GACF3J,cAGIuD,KAAKsW,UAAY9Q,QAGrB/I,YAAY8C,GAGR,MAAOS,MAAKsW,UAAU7N,IAAIlJ,GAG9B9C,qBAAqBH,GAGjB,GAAIkC,GAAUwB,KAAKuW,SACnB,OAAOvW,MAAKsW,UAAU7N,IAAIjK,EAAQlC,IAGtCG,UAGI,GAAI+B,GAAUwB,KAAKuW,SACnB,OAAOvW,MAAKsW,UAAU7N,IAAIjK,EAAQA,EAAQnC,OAAS,IAGvDI,YAAY8C,EAAGiX,GAGXxW,KAAKsW,UAAU5P,IAAInH,EAAGiX,GAG1B/Z,aAAa+K,GAGTxH,KAAKsW,UAAUlC,KAAK,SAAStB,EAAK7H,EAAOxE,GACrCA,EAAIC,IAAIoM,EAAK7H,EAAQzD,IAGzB,IAAIhJ,GAAUwB,KAAKuW,SACnBvW,MAAKsW,UAAUpM,OAAO1L,EAAQ,IAGlC/B,YAAY8K,GAGRvH,KAAKsW,UAAUlC,KAAK,SAAStB,EAAK7H,EAAOxE,GACrCA,EAAIC,IAAIoM,EAAK7H,EAAQ1D,IAGzB,IAAI/I,GAAUwB,KAAKuW,SACnBvW,MAAKsW,UAAUpM,OAAO1L,EAAQA,EAAQnC,OAAS,IAGnDI,UAGI,MAAOuD,MAAKsW,UAAUtH,OAAOC,KAAK,SAASC,EAAGC,GAC1C,MAAO3F,UAAS0F,EAAG,IAAM1F,SAAS2F,EAAG,YAS3CjR,GACFzB,YAAYga,GAGRzW,KAAKyW,SAAWA,EAChBzW,KAAK0W,aAEiC,OAAlCD,EAAS5Z,QAAQkF,cACjB/B,KAAKmU,cAIb1X,aAGI,GAAII,GAAUmD,KAAKyW,SAAS5Z,OAC5BmD,MAAKwW,KACDjZ,MAAOV,EAAQ4E,gBAAkB5E,EAAQ0E,OAAOlF,OAAS,GACrDQ,EAAQ6E,kBAAqB7E,EAAQ0E,OAAOlF,OAChDY,OAAQJ,EAAQ4E,gBAIxBhF,SAGIuD,KAAKyW,SAASzQ,KAAKiC,OAAO,iBAAiBiC,SAC3ClK,KAAKyW,SAAStM,SAGlB1N,OAAOc,GAiFH,QAASoZ,GAAiB7O,GACtBA,EACKhB,KAAK,QAASjK,EAAQ4E,gBACtBqF,KAAK,SAAUjK,EAAQ4E,gBACvBqF,KAAK,IAAK,SAASvH,EAAGjD,GACnB,MAAOA,IAAKO,EAAQ4E,eAAiB5E,EAAQ6E,qBAsCzD,QAASkV,KACL,OAAQ/Z,EAAQgF,0BACZ,IAAK,QACD,MAAuC,WAAnChF,EAAQ+E,wBAA0E,WAAnC/E,EAAQ+E,uBAChDrE,EAAQV,EAAQ8E,aAAa,GAEjCpE,EAAQqN,EAAO6I,OAAO,SAAW5W,EAAQ8E,aAAa,EACjE,KAAK,SACL,IAAK,SACD,MAAOzE,MAAK2Z,MAAMtZ,EAAQ,EAAIqN,EAAO6I,OAAO,SAAW,EAC3D,SACI,MAAO5W,GAAQ8E,aAAa,IAIxC,QAASmV,KACL,MAAuC,WAAnCja,EAAQ+E,uBACD6U,EAASrY,SAASnB,OAASJ,EAAQ8E,aAAa,GAAK9E,EAAQwB,aAAexB,EAAQyB,YAExFzB,EAAQ8E,aAAa,GA5IhC,IAAK3B,KAAKyW,SAAS5Z,QAAQ2E,cACvB,OAAO,CAGX,IAGIuV,GAHAnM,EAAS5K,KACTyW,EAAWzW,KAAKyW,SAChBlV,EAASkV,EAASzQ,KAElBnJ,EAAU4Z,EAAS5Z,OAEvBmD,MAAK0W,YAEL,IAAIM,GAAUna,EAAQ0E,OAAO8J,MAAM,EACnC2L,GAAQtK,KAAKsK,EAAQA,EAAQ3a,OAAS,GAAK,EAE3C,IAAI4a,GAAgBR,EAASzQ,KAAKiC,OAAO,gBACZ,QAAzBgP,EAAc7N,QACd7H,EAAS0V,EACTF,EAAaxV,EACR0G,OAAO,KACPC,UAAU,QAAQtJ,KAAKoY,KAG5BzV,EAA4C,QAAnC1E,EAAQ+E,uBAAmCL,EAAO2V,OAAO,MAAO,UAAY3V,EAAOsF,OAAO,OAEnGtF,EACKuF,KAAK,IAAK8P,KACV9P,KAAK,IAAKgQ,KAEfC,EAAaxV,EACRuF,KAAK,QAAS,gBACdA,KAAK,SAAU8D,EAAO6I,OAAO,WAC7B3M,KAAK,QAAS8D,EAAO6I,OAAO,UAC5B5M,OAAO,KACPqB,YAAYtJ,KAAKoY,IAG1BD,EACK1O,QACAxB,OAAO,QACPgC,KAAK8N,GACL7P,KAAK,QAAS,SAASvH,GACpB,MAAOkX,GAASvY,OAAOyO,SAASpN,EAA6B,OAAzBkX,EAASpQ,eAEhDS,KAAK,eAAgB,GACrB+B,KAAK,SAASf,GACkB,OAAzB2O,EAASpQ,aAAiD,OAAzBxJ,EAAQkF,cAAyBlF,EAAQkF,aAAaoD,eAAe,SACtG2C,EAAUhB,KAAK,OAAQjK,EAAQkF,aAAa+G,QAGnDjC,OAAO,SAEZkQ,EAAW9M,OAAOL,aAAaC,SAAShN,EAAQ8F,mBAC3CmE,KAAK,eAAgB,GACrBoD,SAEL6M,EAAWnN,aAAauN,MAAM,SAAS5X,EAAGjD,GAClC,MAAOO,GAAQ8F,kBAAoBrG,EAAI,KAE1CuM,KAAK8N,GACL7P,KAAK,eAAgB,GACrB+B,KAAK,SAASmD,GACXA,EAAQlF,KAAK,OAAQ,SAASvH,EAAGjD,GAC7B,MAA6B,QAAzBma,EAASpQ,YACF,GAGD,IAAN/J,EACOma,EAASpQ,YAAY9G,EAAI,GAE7BkX,EAASpQ,YAAYxJ,EAAQ0E,OAAOjF,EAAI,MAGnD0P,EAAQlF,KAAK,QAAS,SAASvH,GAC3B,MAAOkX,GAASvY,OAAOyO,SAASpN,EAA6B,OAAzBkX,EAASpQ,iBAazD0Q,EAAW9O,OAAO,SAASyB,KAAK,SAASnK,EAAGjD,GACxC,MAAU,KAANA,EACOma,EAAStI,uBAAuBtR,EAAQ0F,kBAAkBC,OAC7DU,IAAKrG,EAAQ0E,OAAOjF,GACpB6G,KAAMtG,EAAQoF,SAAS,KAEpB3F,IAAM0a,EAAQ3a,OAAS,EACvBoa,EAAStI,uBAAuBtR,EAAQ0F,kBAAkBG,OAC7DvF,IAAKN,EAAQ0E,OAAOjF,EAAI,GACxB6G,KAAMtG,EAAQoF,SAAS,KAGpBwU,EAAStI,uBAAuBtR,EAAQ0F,kBAAkBE,OAC7D2U,KAAMva,EAAQ0E,OAAOjF,EAAI,GACzB+a,GAAIxa,EAAQ0E,OAAOjF,GACnB6G,KAAMtG,EAAQoF,SAAS,OAKnCV,EAAOqI,aAAaC,SAAShN,EAAQ8F,mBAChCmE,KAAK,IAAK8P,KACV9P,KAAK,IAAKgQ,KACVhQ,KAAK,QAAS8D,EAAO6I,OAAO,UAC5B3M,KAAK,SAAU8D,EAAO6I,OAAO,WAElClS,EAAO0G,OAAO,KAAK2B,aAAaC,SAAShN,EAAQ8F,mBAC5CmE,KAAK,YAAa,WACf,MAAkC,aAA9BjK,EAAQiF,kBACD,aAAejF,EAAQ4E,eAAiB,EAAI,IAAM5E,EAAQ4E,eAAiB,EAAI,IAEnF,KAyBfgV,EAAStM,SAWb1N,OAAO0K,GAGH,GAAImQ,GAA4D,eAA5CtX,KAAKyW,SAAS5Z,QAAQiF,iBAE1C,QAAQqF,GACJ,IAAK,QACD,MAAOnH,MAAKwW,IAAIc,EAAe,QAAU,SAC7C,KAAK,SACD,MAAOtX,MAAKwW,IAAIc,EAAe,SAAW,UAItD7a,cAGI,GAAII,GAAUmD,KAAKyW,SAAS5Z,OAE5B,IAA6B,OAAzBA,EAAQkF,aAER,MADA/B,MAAKyW,SAASpQ,YAAc,MACrB,CAGX,IAAIkR,KAEJ,IAAIhb,MAAM2O,QAAQrO,EAAQkF,cACtBwV,EAAc1a,EAAQkF,iBACnB,CAAA,IAAIlF,EAAQkF,aAAaoD,eAAe,SAAUtI,EAAQkF,aAAaoD,eAAe,OAIzF,MADAtI,GAAQkF,aAAe,MAChB,CAHPwV,IAAe1a,EAAQkF,aAAamB,IAAKrG,EAAQkF,aAAa5E,KAMlE,GAAI6Z,GAAUna,EAAQ0E,OAAO8J,MAAM,EAE/B2L,GAAQ,GAAK,EACbA,EAAQQ,QAAQ,GACTR,EAAQ,GAAK,GAEpBA,EAAQQ,QAAQR,EAAQ,IAAMA,EAAQA,EAAQ3a,OAAS,GAAK2a,EAAQ,IAAMA,EAAQ3a,OAGtF,IAAIob,GAAaC,gBACZtX,MAAMmX,GACNI,YAAYC,kBACZtX,QAAQuX,MAAOb,GAAUc,MAAOd,KAEjCjV,EAAeiV,EAAQvQ,IAAI,SAASuF,GACpC,MAAOyL,GAAWzL,IAItB,OAFAhM,MAAKyW,SAASpQ,YAAc0R,mBAAoBzX,OAAOzD,EAAQ0E,QAAQnB,MAAM2B,IAEtE,EAYXtF,SAAS6R,EAAG0J,GAGR,GAAU,OAAN1J,GAAc8E,MAAM9E,GACpB,MAAO,EAKX,KAAK,GAFDc,IAASpP,KAAKyW,SAAS5Z,QAAQ0E,OAAOlF,OAAS,GAE1CC,EAAI,EAAGwS,EAAQ9O,KAAKyW,SAAS5Z,QAAQ0E,OAAOlF,OAAS,EAAGC,GAAKwS,EAAOxS,IAAK,CAE9E,GAAI0D,KAAKyW,SAAS5Z,QAAQ0E,OAAO,GAAK,GAAK+M,EAAI,EAAG,CAC9Cc,GAAS,IAAK,IACd,OAGJ,GAAId,GAAKtO,KAAKyW,SAAS5Z,QAAQ0E,OAAOjF,GAAI,CACtC8S,GAAS9S,EAAI,EACb,QASR,MALU,KAANgS,GACAc,EAAM1C,KAAK,GAGf0C,EAAMoI,QAAQ,KACNpI,EAAMxC,KAAK,OAASoL,EAAe5I,EAAMxC,KAAK,MAAQ,KAAKR"}