{"version":3,"file":null,"sources":["src/cal-heatmap.js"],"sourcesContent":["import { max, min } from 'd3-array';\nimport { map } from 'd3-collection';\nimport { format } from 'd3-format';\nimport { interpolateHcl } from 'd3-interpolate';\nimport { csv, tsv, json, text } from 'd3-request';\nimport { scaleLinear, scaleThreshold } from 'd3-scale';\nimport { event, select } from 'd3-selection';\nimport { timeDays, timeHours, timeMinutes, timeMondays, timeMonths, timeSundays, timeYears } from 'd3-time';\nimport { timeFormat } from 'd3-time-format';\n\nexport default class CalHeatMap {\n    constructor() {\n        \"use strict\";\n\n        var self = this;\n\n        this.allowedDataType = [\"json\", \"csv\", \"tsv\", \"txt\"];\n\n        // Default settings\n        this.options = {\n            // selector string of the container to append the graph to\n            // Accept any string value accepted by document.querySelector or CSS3\n            // or an Element object\n            itemSelector: \"#cal-heatmap\",\n\n            // Whether to paint the calendar on init()\n            // Used by testsuite to reduce testing time\n            paintOnLoad: true,\n\n            // ================================================\n            // DOMAIN\n            // ================================================\n\n            // Number of domain to display on the graph\n            range: 12,\n\n            // Size of each cell, in pixel\n            cellSize: 10,\n\n            // Padding between each cell, in pixel\n            cellPadding: 2,\n\n            // For rounded subdomain rectangles, in pixels\n            cellRadius: 0,\n\n            domainGutter: 2,\n\n            domainMargin: [0, 0, 0, 0],\n\n            domain: \"hour\",\n\n            subDomain: \"min\",\n\n            // Number of columns to split the subDomains to\n            // If not null, will takes precedence over rowLimit\n            colLimit: null,\n\n            // Number of rows to split the subDomains to\n            // Will be ignored if colLimit is not null\n            rowLimit: null,\n\n            // First day of the week is Monday\n            // 0 to start the week on Sunday\n            weekStartOnMonday: true,\n\n            // Start date of the graph\n            // @default now\n            start: new Date(),\n\n            minDate: null,\n\n            maxDate: null,\n\n            // ================================================\n            // DATA\n            // ================================================\n\n            // Data source\n            // URL, where to fetch the original datas\n            data: \"\",\n\n            // Data type\n            // Default: json\n            dataType: this.allowedDataType[0],\n\n            // Payload sent when using POST http method\n            // Leave to null (default) for GET request\n            // Expect a string, formatted like \"a=b;c=d\"\n            dataPostPayload: null,\n\n            // Whether to consider missing date:value from the datasource\n            // as equal to 0, or just leave them as missing\n            considerMissingDataAsZero: false,\n\n            // Load remote data on calendar creation\n            // When false, the calendar will be left empty\n            loadOnInit: true,\n\n            // Calendar orientation\n            // false: display domains side by side\n            // true : display domains one under the other\n            verticalOrientation: false,\n\n            // Domain dynamic width/height\n            // The width on a domain depends on the number of\n            domainDynamicDimension: true,\n\n            // Domain Label properties\n            label: {\n                // valid: top, right, bottom, left\n                position: \"bottom\",\n\n                // Valid: left, center, right\n                // Also valid are the direct svg values: start, middle, end\n                align: \"center\",\n\n                // By default, there is no margin/padding around the label\n                offset: {\n                    x: 0,\n                    y: 0\n                },\n\n                rotate: null,\n\n                // Used only on vertical orientation\n                width: 100,\n\n                // Used only on horizontal orientation\n                height: null\n            },\n\n            // ================================================\n            // LEGEND\n            // ================================================\n\n            // Threshold for the legend\n            legend: [10, 20, 30, 40],\n\n            // Whether to display the legend\n            displayLegend: true,\n\n            legendCellSize: 10,\n\n            legendCellPadding: 2,\n\n            legendMargin: [0, 0, 0, 0],\n\n            // Legend vertical position\n            // top: place legend above calendar\n            // bottom: place legend below the calendar\n            legendVerticalPosition: \"bottom\",\n\n            // Legend horizontal position\n            // accepted values: left, center, right\n            legendHorizontalPosition: \"left\",\n\n            // Legend rotation\n            // accepted values: horizontal, vertical\n            legendOrientation: \"horizontal\",\n\n            // Objects holding all the heatmap different colors\n            // null to disable, and use the default css styles\n            //\n            // Examples:\n            // legendColors: {\n            //\t\tmin: \"green\",\n            //\t\tmax: \"red\",\n            //\t\tempty: \"#ffffff\",\n            //\t\tbase: \"grey\",\n            //\t\toverflow: \"red\"\n            // }\n            legendColors: null,\n\n            // ================================================\n            // HIGHLIGHT\n            // ================================================\n\n            // List of dates to highlight\n            // Valid values:\n            // - []: don't highlight anything\n            // - \"now\": highlight the current date\n            // - an array of Date objects: highlight the specified dates\n            highlight: [],\n\n            // ================================================\n            // TEXT FORMATTING / i18n\n            // ================================================\n\n            // Name of the items to represent in the calendar\n            itemName: [\"item\", \"items\"],\n\n            // Formatting of the domain label\n            // @default: null, will use the formatting according to domain type\n            // Accept a string used as specifier by d3.timeFormat()\n            // or a function\n            //\n            // Refer to https://github.com/mbostock/d3/wiki/Time-Formatting\n            // for accepted date formatting used by d3.timeFormat()\n            domainLabelFormat: null,\n\n            // Formatting of the title displayed when hovering a subDomain cell\n            subDomainTitleFormat: {\n                empty: \"{date}\",\n                filled: \"{count} {name} {connector} {date}\"\n            },\n\n            // Formatting of the {date} used in subDomainTitleFormat\n            // @default: null, will use the formatting according to subDomain type\n            // Accept a string used as specifier by d3.timeFormat()\n            // or a function\n            //\n            // Refer to https://github.com/mbostock/d3/wiki/Time-Formatting\n            // for accepted date formatting used by d3.timeFormat()\n            subDomainDateFormat: null,\n\n            // Formatting of the text inside each subDomain cell\n            // @default: null, no text\n            // Accept a string used as specifier by d3.timeFormat()\n            // or a function\n            //\n            // Refer to https://github.com/mbostock/d3/wiki/Time-Formatting\n            // for accepted date formatting used by d3.timeFormat()\n            subDomainTextFormat: null,\n\n            // Formatting of the title displayed when hovering a legend cell\n            legendTitleFormat: {\n                lower: \"less than {min} {name}\",\n                inner: \"between {down} and {up} {name}\",\n                upper: \"more than {max} {name}\"\n            },\n\n            // Animation duration, in ms\n            animationDuration: 500,\n\n            nextSelector: false,\n\n            previousSelector: false,\n\n            itemNamespace: \"cal-heatmap\",\n\n            tooltip: false,\n\n            // ================================================\n            // EVENTS CALLBACK\n            // ================================================\n\n            // Callback when clicking on a time block\n            onClick: null,\n\n            // Callback after painting the empty calendar\n            // Can be used to trigger an API call, once the calendar is ready to be filled\n            afterLoad: null,\n\n            // Callback after loading the next domain in the calendar\n            afterLoadNextDomain: null,\n\n            // Callback after loading the previous domain in the calendar\n            afterLoadPreviousDomain: null,\n\n            // Callback after finishing all actions on the calendar\n            onComplete: null,\n\n            // Callback after fetching the datas, but before applying them to the calendar\n            // Used mainly to convert the datas if they're not formatted like expected\n            // Takes the fetched \"data\" object as argument, must return a json object\n            // formatted like {timestamp:count, timestamp2:count2},\n            afterLoadData(data) {\n                return data;\n            },\n\n            // Callback triggered after calling next().\n            // The `status` argument is equal to true if there is no\n            // more next domain to load\n            //\n            // This callback is also executed once, after calling previous(),\n            // only when the max domain is reached\n            onMaxDomainReached: null,\n\n            // Callback triggered after calling previous().\n            // The `status` argument is equal to true if there is no\n            // more previous domain to load\n            //\n            // This callback is also executed once, after calling next(),\n            // only when the min domain is reached\n            onMinDomainReached: null\n        };\n\n        this._domainType = {\n            \"min\": {\n                name: \"minute\",\n                level: 10,\n                maxItemNumber: 60,\n                defaultRowNumber: 10,\n                defaultColumnNumber: 6,\n                row(d) {\n                    return self.getSubDomainRowNumber(d);\n                },\n                column(d) {\n                    return self.getSubDomainColumnNumber(d);\n                },\n                position: {\n                    x(d) {\n                        return Math.floor(d.getMinutes() / self._domainType.min.row(d));\n                    },\n                    y(d) {\n                        return d.getMinutes() % self._domainType.min.row(d);\n                    }\n                },\n                format: {\n                    date: \"%H:%M, %A %B %-e, %Y\",\n                    legend: \"\",\n                    connector: \"at\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes()).getTime();\n                }\n            },\n            \"hour\": {\n                name: \"hour\",\n                level: 20,\n                maxItemNumber(d) {\n                    switch (self.options.domain) {\n                        case \"day\":\n                            return 24;\n                        case \"week\":\n                            return 24 * 7;\n                        case \"month\":\n                            return 24 * (self.options.domainDynamicDimension ? self.getDayCountInMonth(d) : 31);\n                    }\n                },\n                defaultRowNumber: 6,\n                defaultColumnNumber(d) {\n                    switch (self.options.domain) {\n                        case \"day\":\n                            return 4;\n                        case \"week\":\n                            return 28;\n                        case \"month\":\n                            return self.options.domainDynamicDimension ? self.getDayCountInMonth(d) : 31;\n                    }\n                },\n                row(d) {\n                    return self.getSubDomainRowNumber(d);\n                },\n                column(d) {\n                    return self.getSubDomainColumnNumber(d);\n                },\n                position: {\n                    x(d) {\n                        if (self.options.domain === \"month\") {\n                            if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                                return Math.floor((d.getHours() + (d.getDate() - 1) * 24) / self._domainType.hour.row(d));\n                            }\n                            return Math.floor(d.getHours() / self._domainType.hour.row(d)) + (d.getDate() - 1) * 4;\n                        } else if (self.options.domain === \"week\") {\n                            if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                                return Math.floor((d.getHours() + self.getWeekDay(d) * 24) / self._domainType.hour.row(d));\n                            }\n                            return Math.floor(d.getHours() / self._domainType.hour.row(d)) + self.getWeekDay(d) * 4;\n                        }\n                        return Math.floor(d.getHours() / self._domainType.hour.row(d));\n                    },\n                    y(d) {\n                        var p = d.getHours();\n                        if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                            switch (self.options.domain) {\n                                case \"month\":\n                                    p += (d.getDate() - 1) * 24;\n                                    break;\n                                case \"week\":\n                                    p += self.getWeekDay(d) * 24;\n                                    break;\n                            }\n                        }\n                        return Math.floor(p % self._domainType.hour.row(d));\n                    }\n                },\n                format: {\n                    date: \"%Hh, %A %B %-e, %Y\",\n                    legend: \"%H:00\",\n                    connector: \"at\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours()).getTime();\n                }\n            },\n            \"day\": {\n                name: \"day\",\n                level: 30,\n                maxItemNumber(d) {\n                    switch (self.options.domain) {\n                        case \"week\":\n                            return 7;\n                        case \"month\":\n                            return self.options.domainDynamicDimension ? self.getDayCountInMonth(d) : 31;\n                        case \"year\":\n                            return self.options.domainDynamicDimension ? self.getDayCountInYear(d) : 366;\n                    }\n                },\n                defaultColumnNumber(d) {\n                    d = new Date(d);\n                    switch (self.options.domain) {\n                        case \"week\":\n                            return 1;\n                        case \"month\":\n                            return (self.options.domainDynamicDimension && !self.options.verticalOrientation) ? (self.getWeekNumber(new Date(d.getFullYear(), d.getMonth() + 1, 0)) - self.getWeekNumber(d) + 1) : 6;\n                        case \"year\":\n                            return (self.options.domainDynamicDimension ? (self.getWeekNumber(new Date(d.getFullYear(), 11, 31)) - self.getWeekNumber(new Date(d.getFullYear(), 0)) + 1) : 54);\n                    }\n                },\n                defaultRowNumber: 7,\n                row(d) {\n                    return self.getSubDomainRowNumber(d);\n                },\n                column(d) {\n                    return self.getSubDomainColumnNumber(d);\n                },\n                position: {\n                    x(d) {\n                        switch (self.options.domain) {\n                            case \"week\":\n                                return Math.floor(self.getWeekDay(d) / self._domainType.day.row(d));\n                            case \"month\":\n                                if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                                    return Math.floor((d.getDate() - 1) / self._domainType.day.row(d));\n                                }\n                                return self.getWeekNumber(d) - self.getWeekNumber(new Date(d.getFullYear(), d.getMonth()));\n                            case \"year\":\n                                if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                                    return Math.floor((self.getDayOfYear(d) - 1) / self._domainType.day.row(d));\n                                }\n                                return self.getWeekNumber(d);\n                        }\n                    },\n                    y(d) {\n                        var p = self.getWeekDay(d);\n                        if (self.options.colLimit > 0 || self.options.rowLimit > 0) {\n                            switch (self.options.domain) {\n                                case \"year\":\n                                    p = self.getDayOfYear(d) - 1;\n                                    break;\n                                case \"week\":\n                                    p = self.getWeekDay(d);\n                                    break;\n                                case \"month\":\n                                    p = d.getDate() - 1;\n                                    break;\n                            }\n                        }\n                        return Math.floor(p % self._domainType.day.row(d));\n                    }\n                },\n                format: {\n                    date: \"%A %B %-e, %Y\",\n                    legend: \"%e %b\",\n                    connector: \"on\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear(), d.getMonth(), d.getDate()).getTime();\n                }\n            },\n            \"week\": {\n                name: \"week\",\n                level: 40,\n                maxItemNumber: 54,\n                defaultColumnNumber(d) {\n                    d = new Date(d);\n                    switch (self.options.domain) {\n                        case \"year\":\n                            return self._domainType.week.maxItemNumber;\n                        case \"month\":\n                            return self.options.domainDynamicDimension ? self.getWeekNumber(new Date(d.getFullYear(), d.getMonth() + 1, 0)) - self.getWeekNumber(d) : 5;\n                    }\n                },\n                defaultRowNumber: 1,\n                row(d) {\n                    return self.getSubDomainRowNumber(d);\n                },\n                column(d) {\n                    return self.getSubDomainColumnNumber(d);\n                },\n                position: {\n                    x(d) {\n                        switch (self.options.domain) {\n                            case \"year\":\n                                return Math.floor(self.getWeekNumber(d) / self._domainType.week.row(d));\n                            case \"month\":\n                                return Math.floor(self.getMonthWeekNumber(d) / self._domainType.week.row(d));\n                        }\n                    },\n                    y(d) {\n                        return self.getWeekNumber(d) % self._domainType.week.row(d);\n                    }\n                },\n                format: {\n                    date: \"%B Week #%W\",\n                    legend: \"%B Week #%W\",\n                    connector: \"in\"\n                },\n                extractUnit(d) {\n                    var dt = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                    // According to ISO-8601, week number computation are based on week starting on Monday\n                    var weekDay = dt.getDay() - (self.options.weekStartOnMonday ? 1 : 0);\n                    if (weekDay < 0) {\n                        weekDay = 6;\n                    }\n                    dt.setDate(dt.getDate() - weekDay);\n                    return dt.getTime();\n                }\n            },\n            \"month\": {\n                name: \"month\",\n                level: 50,\n                maxItemNumber: 12,\n                defaultColumnNumber: 12,\n                defaultRowNumber: 1,\n                row() {\n                    return self.getSubDomainRowNumber();\n                },\n                column() {\n                    return self.getSubDomainColumnNumber();\n                },\n                position: {\n                    x(d) {\n                        return Math.floor(d.getMonth() / self._domainType.month.row(d));\n                    },\n                    y(d) {\n                        return d.getMonth() % self._domainType.month.row(d);\n                    }\n                },\n                format: {\n                    date: \"%B %Y\",\n                    legend: \"%B\",\n                    connector: \"in\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear(), d.getMonth()).getTime();\n                }\n            },\n            \"year\": {\n                name: \"year\",\n                level: 60,\n                row() {\n                    return self.options.rowLimit || 1;\n                },\n                column() {\n                    return self.options.colLimit || 1;\n                },\n                position: {\n                    x() {\n                        return 1;\n                    },\n                    y() {\n                        return 1;\n                    }\n                },\n                format: {\n                    date: \"%Y\",\n                    legend: \"%Y\",\n                    connector: \"in\"\n                },\n                extractUnit(d) {\n                    return new Date(d.getFullYear()).getTime();\n                }\n            }\n        };\n\n        for (var type in this._domainType) {\n            if (this._domainType.hasOwnProperty(type)) {\n                var d = this._domainType[type];\n                this._domainType[\"x_\" + type] = {\n                    name: \"x_\" + type,\n                    level: d.type,\n                    maxItemNumber: d.maxItemNumber,\n                    defaultRowNumber: d.defaultRowNumber,\n                    defaultColumnNumber: d.defaultColumnNumber,\n                    row: d.column,\n                    column: d.row,\n                    position: {\n                        x: d.position.y,\n                        y: d.position.x\n                    },\n                    format: d.format,\n                    extractUnit: d.extractUnit\n                };\n            }\n        }\n\n        // Record the address of the last inserted domain when browsing\n        this.lastInsertedSvg = null;\n\n        this._completed = false;\n\n        // Record all the valid domains\n        // Each domain value is a timestamp in milliseconds\n        this._domains = map();\n\n        this.graphDim = {\n            width: 0,\n            height: 0\n        };\n\n        this.legendDim = {\n            width: 0,\n            height: 0\n        };\n\n        this.NAVIGATE_LEFT = 1;\n        this.NAVIGATE_RIGHT = 2;\n\n        // Various update mode when using the update() API\n        this.RESET_ALL_ON_UPDATE = 0;\n        this.RESET_SINGLE_ON_UPDATE = 1;\n        this.APPEND_ON_UPDATE = 2;\n\n        this.DEFAULT_LEGEND_MARGIN = 10;\n\n        this.root = null;\n        this.tooltip = null;\n\n        this._maxDomainReached = false;\n        this._minDomainReached = false;\n\n        this.domainPosition = new DomainPosition();\n        this.Legend = null;\n        this.legendScale = null;\n\n        // List of domains that are skipped because of DST\n        // All times belonging to these domains should be re-assigned to the previous domain\n        this.DSTDomain = [];\n\n        /**\n         * Display the graph for the first time\n         * @return bool True if the calendar is created\n         */\n        this._init = function() {\n\n            self.getDomain(self.options.start).map(function(d) {\n                return d.getTime();\n            }).map(function(d) {\n                self._domains.set(d, self.getSubDomain(d).map(function(d) {\n                    return { t: self._domainType[self.options.subDomain].extractUnit(d), v: null };\n                }));\n            });\n\n            self.root = select(self.options.itemSelector).append(\"svg\").attr(\"class\", \"cal-heatmap-container\");\n\n            self.tooltip = select(self.options.itemSelector)\n                .attr(\"style\", function() {\n                    var current = select(self.options.itemSelector).attr(\"style\");\n                    return (current !== null ? current : \"\") + \"position:relative;\";\n                })\n                .append(\"div\")\n                .attr(\"class\", \"ch-tooltip\");\n\n            self.root.attr(\"x\", 0).attr(\"y\", 0).append(\"svg\").attr(\"class\", \"graph\");\n\n            self.Legend = new Legend(self);\n\n            if (self.options.paintOnLoad) {\n                _initCalendar();\n            }\n\n            return true;\n        };\n\n        function _initCalendar() {\n            self.verticalDomainLabel = (self.options.label.position === \"top\" || self.options.label.position === \"bottom\");\n\n            self.domainVerticalLabelHeight = self.options.label.height === null ? Math.max(25, self.options.cellSize * 2) : self.options.label.height;\n            self.domainHorizontalLabelWidth = 0;\n\n            if (self.options.domainLabelFormat === \"\" && self.options.label.height === null) {\n                self.domainVerticalLabelHeight = 0;\n            }\n\n            if (!self.verticalDomainLabel) {\n                self.domainVerticalLabelHeight = 0;\n                self.domainHorizontalLabelWidth = self.options.label.width;\n            }\n\n            self.paint();\n\n            // =========================================================================//\n            // ATTACHING DOMAIN NAVIGATION EVENT\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n            if (self.options.nextSelector !== false) {\n                select(self.options.nextSelector).on(\"click.\" + self.options.itemNamespace, function() {\n                    event.preventDefault();\n                    return self.loadNextDomain(1);\n                });\n            }\n\n            if (self.options.previousSelector !== false) {\n                select(self.options.previousSelector).on(\"click.\" + self.options.itemNamespace, function() {\n                    event.preventDefault();\n                    return self.loadPreviousDomain(1);\n                });\n            }\n\n            self.Legend.redraw(self.graphDim.width - self.options.domainGutter - self.options.cellPadding);\n            self.afterLoad();\n\n            var domains = self.getDomainKeys();\n\n            // Fill the graph with some datas\n            if (self.options.loadOnInit) {\n                self.getDatas(\n                    self.options.data,\n                    new Date(domains[0]),\n                    self.getSubDomain(domains[domains.length - 1]).pop(),\n                    function() {\n                        self.fill();\n                        self.onComplete();\n                    }\n                );\n            } else {\n                self.onComplete();\n            }\n\n            self.checkIfMinDomainIsReached(domains[0]);\n            self.checkIfMaxDomainIsReached(self.getNextDomain().getTime());\n        }\n\n        // Return the width of the domain block, without the domain gutter\n        // @param int d Domain start timestamp\n        function w(d, outer) {\n            var width = self.options.cellSize * self._domainType[self.options.subDomain].column(d) + self.options.cellPadding * self._domainType[self.options.subDomain].column(d);\n            if (arguments.length === 2 && outer === true) {\n                return width += self.domainHorizontalLabelWidth + self.options.domainGutter + self.options.domainMargin[1] + self.options.domainMargin[3];\n            }\n            return width;\n        }\n\n        // Return the height of the domain block, without the domain gutter\n        function h(d, outer) {\n            var height = self.options.cellSize * self._domainType[self.options.subDomain].row(d) + self.options.cellPadding * self._domainType[self.options.subDomain].row(d);\n            if (arguments.length === 2 && outer === true) {\n                height += self.options.domainGutter + self.domainVerticalLabelHeight + self.options.domainMargin[0] + self.options.domainMargin[2];\n            }\n            return height;\n        }\n\n        /**\n         *\n         *\n         * @param int navigationDir\n         */\n        this.paint = function(navigationDir) {\n\n            var options = self.options;\n\n            if (arguments.length === 0) {\n                navigationDir = false;\n            }\n\n            // Painting all the domains\n            var domainSvg = self.root.select(\".graph\")\n                .selectAll(\".graph-domain\")\n                .data(\n                    function() {\n                        var data = self.getDomainKeys();\n                        return navigationDir === self.NAVIGATE_LEFT ? data.reverse() : data;\n                    },\n                    function(d) {\n                        return d;\n                    }\n                );\n\n            var enteringDomainDim = 0;\n            var exitingDomainDim = 0;\n\n            // =========================================================================//\n            // PAINTING DOMAIN\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n\n            var svg = domainSvg\n                .enter()\n                .append(\"svg\")\n                .attr(\"width\", function(d) {\n                    return w(d, true);\n                })\n                .attr(\"height\", function(d) {\n                    return h(d, true);\n                })\n                .attr(\"x\", function(d) {\n                    if (options.verticalOrientation) {\n                        self.graphDim.width = Math.max(self.graphDim.width, w(d, true));\n                        return 0;\n                    } else {\n                        return getDomainPosition(d, self.graphDim, \"width\", w(d, true));\n                    }\n                })\n                .attr(\"y\", function(d) {\n                    if (options.verticalOrientation) {\n                        return getDomainPosition(d, self.graphDim, \"height\", h(d, true));\n                    } else {\n                        self.graphDim.height = Math.max(self.graphDim.height, h(d, true));\n                        return 0;\n                    }\n                })\n                .attr(\"class\", function(d) {\n                    var classname = \"graph-domain\";\n                    var date = new Date(d);\n                    switch (options.domain) {\n                        case \"hour\":\n                            classname += \" h_\" + date.getHours();\n                            /* falls through */\n                        case \"day\":\n                            classname += \" d_\" + date.getDate() + \" dy_\" + date.getDay();\n                            /* falls through */\n                        case \"week\":\n                            classname += \" w_\" + self.getWeekNumber(date);\n                            /* falls through */\n                        case \"month\":\n                            classname += \" m_\" + (date.getMonth() + 1);\n                            /* falls through */\n                        case \"year\":\n                            classname += \" y_\" + date.getFullYear();\n                    }\n                    return classname;\n                });\n\n            self.lastInsertedSvg = svg;\n\n            function getDomainPosition(domainIndex, graphDim, axis, domainDim) {\n                var tmp = 0;\n                switch (navigationDir) {\n                    case false:\n                        tmp = graphDim[axis];\n\n                        graphDim[axis] += domainDim;\n                        self.domainPosition.setPosition(domainIndex, tmp);\n                        return tmp;\n\n                    case self.NAVIGATE_RIGHT:\n                        self.domainPosition.setPosition(domainIndex, graphDim[axis]);\n\n                        enteringDomainDim = domainDim;\n                        exitingDomainDim = self.domainPosition.getPositionFromIndex(1);\n\n                        self.domainPosition.shiftRightBy(exitingDomainDim);\n                        return graphDim[axis];\n\n                    case self.NAVIGATE_LEFT:\n                        tmp = -domainDim;\n\n                        enteringDomainDim = -tmp;\n                        exitingDomainDim = graphDim[axis] - self.domainPosition.getLast();\n\n                        self.domainPosition.setPosition(domainIndex, tmp);\n                        self.domainPosition.shiftLeftBy(enteringDomainDim);\n                        return tmp;\n                }\n            }\n\n            svg.append(\"rect\")\n                .attr(\"width\", function(d) {\n                    return w(d, true) - options.domainGutter - options.cellPadding;\n                })\n                .attr(\"height\", function(d) {\n                    return h(d, true) - options.domainGutter - options.cellPadding;\n                })\n                .attr(\"class\", \"domain-background\");\n\n            // =========================================================================//\n            // PAINTING SUBDOMAINS\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n            var subDomainSvgGroup = svg.append(\"svg\")\n                .attr(\"x\", function() {\n                    if (options.label.position === \"left\") {\n                        return self.domainHorizontalLabelWidth + options.domainMargin[3];\n                    } else {\n                        return options.domainMargin[3];\n                    }\n                })\n                .attr(\"y\", function() {\n                    if (options.label.position === \"top\") {\n                        return self.domainVerticalLabelHeight + options.domainMargin[0];\n                    } else {\n                        return options.domainMargin[0];\n                    }\n                })\n                .attr(\"class\", \"graph-subdomain-group\");\n\n            var rect = subDomainSvgGroup\n                .selectAll(\"g\")\n                .data(function(d) {\n                    return self._domains.get(d);\n                })\n                .enter()\n                .append(\"g\");\n\n            rect\n                .append(\"rect\")\n                .attr(\"class\", function(d) {\n                    return \"graph-rect\" + self.getHighlightClassName(d.t) + (options.onClick !== null ? \" hover_cursor\" : \"\");\n                })\n                .attr(\"width\", options.cellSize)\n                .attr(\"height\", options.cellSize)\n                .attr(\"x\", function(d) {\n                    return self.positionSubDomainX(d.t);\n                })\n                .attr(\"y\", function(d) {\n                    return self.positionSubDomainY(d.t);\n                })\n                .on(\"click\", function(d) {\n                    if (options.onClick !== null) {\n                        return self.onClick(new Date(d.t), d.v);\n                    }\n                })\n                .call(function(selection) {\n                    if (options.cellRadius > 0) {\n                        selection\n                            .attr(\"rx\", options.cellRadius)\n                            .attr(\"ry\", options.cellRadius);\n                    }\n\n                    if (self.legendScale !== null && options.legendColors !== null && options.legendColors.hasOwnProperty(\"base\")) {\n                        selection.attr(\"fill\", options.legendColors.base);\n                    }\n\n                    if (options.tooltip) {\n                        selection.on(\"mouseover\", function(d) {\n                            var domainNode = this.parentNode.parentNode;\n\n                            self.tooltip\n                                .html(self.getSubDomainTitle(d))\n                                .attr(\"style\", \"display: block;\");\n\n                            var tooltipPositionX = self.positionSubDomainX(d.t) - self.tooltip.node().offsetWidth / 2 + options.cellSize / 2;\n                            var tooltipPositionY = self.positionSubDomainY(d.t) - self.tooltip.node().offsetHeight - options.cellSize / 2;\n\n                            // Offset by the domain position\n                            tooltipPositionX += parseInt(domainNode.getAttribute(\"x\"), 10);\n                            tooltipPositionY += parseInt(domainNode.getAttribute(\"y\"), 10);\n\n                            // Offset by the calendar position (when legend is left/top)\n                            tooltipPositionX += parseInt(self.root.select(\".graph\").attr(\"x\"), 10);\n                            tooltipPositionY += parseInt(self.root.select(\".graph\").attr(\"y\"), 10);\n\n                            // Offset by the inside domain position (when label is left/top)\n                            tooltipPositionX += parseInt(domainNode.parentNode.getAttribute(\"x\"), 10);\n                            tooltipPositionY += parseInt(domainNode.parentNode.getAttribute(\"y\"), 10);\n\n                            self.tooltip.attr(\"style\",\n                                \"display: block; \" +\n                                \"left: \" + tooltipPositionX + \"px; \" +\n                                \"top: \" + tooltipPositionY + \"px;\");\n                        });\n\n                        selection.on(\"mouseout\", function() {\n                            self.tooltip\n                                .attr(\"style\", \"display:none\")\n                                .html(\"\");\n                        });\n                    }\n                });\n\n            // Appending a title to each subdomain\n            if (!options.tooltip) {\n                rect.append(\"title\").text(function(d) {\n                    return self.formatDate(new Date(d.t), options.subDomainDateFormat);\n                });\n            }\n\n            // =========================================================================//\n            // PAINTING LABEL\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n            if (options.domainLabelFormat !== \"\") {\n                svg.append(\"text\")\n                    .attr(\"class\", \"graph-label\")\n                    .attr(\"y\", function(d) {\n                        var y = options.domainMargin[0];\n                        switch (options.label.position) {\n                            case \"top\":\n                                y += self.domainVerticalLabelHeight / 2;\n                                break;\n                            case \"bottom\":\n                                y += h(d) + self.domainVerticalLabelHeight / 2;\n                        }\n\n                        return y + options.label.offset.y *\n                            (\n                                ((options.label.rotate === \"right\" && options.label.position === \"right\") ||\n                                    (options.label.rotate === \"left\" && options.label.position === \"left\")) ?\n                                -1 : 1\n                            );\n                    })\n                    .attr(\"x\", function(d) {\n                        var x = options.domainMargin[3];\n                        switch (options.label.position) {\n                            case \"right\":\n                                x += w(d);\n                                break;\n                            case \"bottom\":\n                            case \"top\":\n                                x += w(d) / 2;\n                        }\n\n                        if (options.label.align === \"right\") {\n                            return x + self.domainHorizontalLabelWidth - options.label.offset.x *\n                                (options.label.rotate === \"right\" ? -1 : 1);\n                        }\n                        return x + options.label.offset.x;\n\n                    })\n                    .attr(\"text-anchor\", function() {\n                        switch (options.label.align) {\n                            case \"start\":\n                            case \"left\":\n                                return \"start\";\n                            case \"end\":\n                            case \"right\":\n                                return \"end\";\n                            default:\n                                return \"middle\";\n                        }\n                    })\n                    .attr(\"dominant-baseline\", function() {\n                        return self.verticalDomainLabel ? \"middle\" : \"top\";\n                    })\n                    .text(function(d) {\n                        return self.formatDate(new Date(d), options.domainLabelFormat);\n                    })\n                    .call(domainRotate);\n            }\n\n            function domainRotate(selection) {\n                switch (options.label.rotate) {\n                    case \"right\":\n                        selection\n                            .attr(\"transform\", function(d) {\n                                var s = \"rotate(90), \";\n                                switch (options.label.position) {\n                                    case \"right\":\n                                        s += \"translate(-\" + w(d) + \" , -\" + w(d) + \")\";\n                                        break;\n                                    case \"left\":\n                                        s += \"translate(0, -\" + self.domainHorizontalLabelWidth + \")\";\n                                        break;\n                                }\n\n                                return s;\n                            });\n                        break;\n                    case \"left\":\n                        selection\n                            .attr(\"transform\", function(d) {\n                                var s = \"rotate(270), \";\n                                switch (options.label.position) {\n                                    case \"right\":\n                                        s += \"translate(-\" + (w(d) + self.domainHorizontalLabelWidth) + \" , \" + w(d) + \")\";\n                                        break;\n                                    case \"left\":\n                                        s += \"translate(-\" + (self.domainHorizontalLabelWidth) + \" , \" + self.domainHorizontalLabelWidth + \")\";\n                                        break;\n                                }\n\n                                return s;\n                            });\n                        break;\n                }\n            }\n\n            // =========================================================================//\n            // PAINTING DOMAIN SUBDOMAIN CONTENT\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n            if (options.subDomainTextFormat !== null) {\n                rect\n                    .append(\"text\")\n                    .attr(\"class\", function(d) {\n                        return \"subdomain-text\" + self.getHighlightClassName(d.t);\n                    })\n                    .attr(\"x\", function(d) {\n                        return self.positionSubDomainX(d.t) + options.cellSize / 2;\n                    })\n                    .attr(\"y\", function(d) {\n                        return self.positionSubDomainY(d.t) + options.cellSize / 2;\n                    })\n                    .attr(\"text-anchor\", \"middle\")\n                    .attr(\"dominant-baseline\", \"central\")\n                    .text(function(d) {\n                        return self.formatDate(new Date(d.t), options.subDomainTextFormat);\n                    });\n            }\n\n            // =========================================================================//\n            // ANIMATION\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n            // =========================================================================//\n\n            if (navigationDir !== false) {\n                domainSvg.transition().duration(options.animationDuration)\n                    .attr(\"x\", function(d) {\n                        return options.verticalOrientation ? 0 : self.domainPosition.getPosition(d);\n                    })\n                    .attr(\"y\", function(d) {\n                        return options.verticalOrientation ? self.domainPosition.getPosition(d) : 0;\n                    });\n            }\n\n            var tempWidth = self.graphDim.width;\n            var tempHeight = self.graphDim.height;\n\n            if (options.verticalOrientation) {\n                self.graphDim.height += enteringDomainDim - exitingDomainDim;\n            } else {\n                self.graphDim.width += enteringDomainDim - exitingDomainDim;\n            }\n\n            // At the time of exit, domainsWidth and domainsHeight already automatically shifted\n            domainSvg.exit().transition().duration(options.animationDuration)\n                .attr(\"x\", function(d) {\n                    if (options.verticalOrientation) {\n                        return 0;\n                    } else {\n                        switch (navigationDir) {\n                            case self.NAVIGATE_LEFT:\n                                return Math.min(self.graphDim.width, tempWidth);\n                            case self.NAVIGATE_RIGHT:\n                                return -w(d, true);\n                        }\n                    }\n                })\n                .attr(\"y\", function(d) {\n                    if (options.verticalOrientation) {\n                        switch (navigationDir) {\n                            case self.NAVIGATE_LEFT:\n                                return Math.min(self.graphDim.height, tempHeight);\n                            case self.NAVIGATE_RIGHT:\n                                return -h(d, true);\n                        }\n                    } else {\n                        return 0;\n                    }\n                })\n                .remove();\n\n            // Resize the root container\n            self.resize();\n        };\n    }\n\n    /**\n     * Validate and merge user settings with default settings\n     *\n     * @param  {object} settings User settings\n     * @return {bool} False if settings contains error\n     */\n    /* jshint maxstatements:false */\n    init(settings) {\n        \"use strict\";\n\n        var parent = this;\n\n        var options = parent.options = mergeRecursive(parent.options, settings);\n\n        // Fatal errors\n        // Stop script execution on error\n        validateDomainType();\n        validateSelector(options.itemSelector, false, \"itemSelector\");\n\n        if (parent.allowedDataType.indexOf(options.dataType) === -1) {\n            throw new Error(\"The data type '\" + options.dataType + \"' is not valid data type\");\n        }\n\n        if (select(options.itemSelector).node() === null) {\n            throw new Error(\"The node '\" + options.itemSelector + \"' specified in itemSelector does not exists\");\n        }\n\n        try {\n            validateSelector(options.nextSelector, true, \"nextSelector\");\n            validateSelector(options.previousSelector, true, \"previousSelector\");\n        } catch (error) {\n            console.log(error.message);\n            return false;\n        }\n\n        // If other settings contains error, will fallback to default\n\n        if (!settings.hasOwnProperty(\"subDomain\")) {\n            this.options.subDomain = getOptimalSubDomain(settings.domain);\n        }\n\n        if (typeof options.itemNamespace !== \"string\" || options.itemNamespace === \"\") {\n            console.log(\"itemNamespace can not be empty, falling back to cal-heatmap\");\n            options.itemNamespace = \"cal-heatmap\";\n        }\n\n        // Don't touch these settings\n        var s = [\"data\", \"onComplete\", \"onClick\", \"afterLoad\", \"afterLoadData\", \"afterLoadPreviousDomain\", \"afterLoadNextDomain\"];\n\n        for (var k in s) {\n            if (settings.hasOwnProperty(s[k])) {\n                options[s[k]] = settings[s[k]];\n            }\n        }\n\n        options.subDomainDateFormat = (typeof options.subDomainDateFormat === \"string\" || typeof options.subDomainDateFormat === \"function\" ? options.subDomainDateFormat : this._domainType[options.subDomain].format.date);\n        options.domainLabelFormat = (typeof options.domainLabelFormat === \"string\" || typeof options.domainLabelFormat === \"function\" ? options.domainLabelFormat : this._domainType[options.domain].format.legend);\n        options.subDomainTextFormat = ((typeof options.subDomainTextFormat === \"string\" && options.subDomainTextFormat !== \"\") || typeof options.subDomainTextFormat === \"function\" ? options.subDomainTextFormat : null);\n        options.domainMargin = expandMarginSetting(options.domainMargin);\n        options.legendMargin = expandMarginSetting(options.legendMargin);\n        options.highlight = parent.expandDateSetting(options.highlight);\n        options.itemName = expandItemName(options.itemName);\n        options.colLimit = parseColLimit(options.colLimit);\n        options.rowLimit = parseRowLimit(options.rowLimit);\n        if (!settings.hasOwnProperty(\"legendMargin\")) {\n            autoAddLegendMargin();\n        }\n        autoAlignLabel();\n\n        /**\n         * Validate that a queryString is valid\n         *\n         * @param  {Element|string|bool} selector   The queryString to test\n         * @param  {bool}\tcanBeFalse\tWhether false is an accepted and valid value\n         * @param  {string} name\t\tName of the tested selector\n         * @throws {Error}\t\t\t\tIf the selector is not valid\n         * @return {bool}\t\t\t\tTrue if the selector is a valid queryString\n         */\n        function validateSelector(selector, canBeFalse, name) {\n            if (((canBeFalse && selector === false) || selector instanceof Element || typeof selector === \"string\") && selector !== \"\") {\n                return true;\n            }\n            throw new Error(\"The \" + name + \" is not valid\");\n        }\n\n        /**\n         * Return the optimal subDomain for the specified domain\n         *\n         * @param  {string} domain a domain name\n         * @return {string}        the subDomain name\n         */\n        function getOptimalSubDomain(domain) {\n            switch (domain) {\n                case \"year\":\n                    return \"month\";\n                case \"month\":\n                    return \"day\";\n                case \"week\":\n                    return \"day\";\n                case \"day\":\n                    return \"hour\";\n                default:\n                    return \"min\";\n            }\n        }\n\n        /**\n         * Ensure that the domain and subdomain are valid\n         *\n         * @throw {Error} when domain or subdomain are not valid\n         * @return {bool} True if domain and subdomain are valid and compatible\n         */\n        function validateDomainType() {\n            if (!parent._domainType.hasOwnProperty(options.domain) || options.domain === \"min\" || options.domain.substring(0, 2) === \"x_\") {\n                throw new Error(\"The domain '\" + options.domain + \"' is not valid\");\n            }\n\n            if (!parent._domainType.hasOwnProperty(options.subDomain) || options.subDomain === \"year\") {\n                throw new Error(\"The subDomain '\" + options.subDomain + \"' is not valid\");\n            }\n\n            if (parent._domainType[options.domain].level <= parent._domainType[options.subDomain].level) {\n                throw new Error(\"'\" + options.subDomain + \"' is not a valid subDomain to '\" + options.domain + \"'\");\n            }\n\n            return true;\n        }\n\n        /**\n         * Fine-tune the label alignement depending on its position\n         *\n         * @return void\n         */\n        function autoAlignLabel() {\n            // Auto-align label, depending on it's position\n            if (!settings.hasOwnProperty(\"label\") || (settings.hasOwnProperty(\"label\") && !settings.label.hasOwnProperty(\"align\"))) {\n                switch (options.label.position) {\n                    case \"left\":\n                        options.label.align = \"right\";\n                        break;\n                    case \"right\":\n                        options.label.align = \"left\";\n                        break;\n                    default:\n                        options.label.align = \"center\";\n                }\n\n                if (options.label.rotate === \"left\") {\n                    options.label.align = \"right\";\n                } else if (options.label.rotate === \"right\") {\n                    options.label.align = \"left\";\n                }\n            }\n\n            if (!settings.hasOwnProperty(\"label\") || (settings.hasOwnProperty(\"label\") && !settings.label.hasOwnProperty(\"offset\"))) {\n                if (options.label.position === \"left\" || options.label.position === \"right\") {\n                    options.label.offset = {\n                        x: 10,\n                        y: 15\n                    };\n                }\n            }\n        }\n\n        /**\n         * If not specified, add some margin around the legend depending on its position\n         *\n         * @return void\n         */\n        function autoAddLegendMargin() {\n            switch (options.legendVerticalPosition) {\n                case \"top\":\n                    options.legendMargin[2] = parent.DEFAULT_LEGEND_MARGIN;\n                    break;\n                case \"bottom\":\n                    options.legendMargin[0] = parent.DEFAULT_LEGEND_MARGIN;\n                    break;\n                case \"middle\":\n                case \"center\":\n                    options.legendMargin[options.legendHorizontalPosition === \"right\" ? 3 : 1] = parent.DEFAULT_LEGEND_MARGIN;\n            }\n        }\n\n        /**\n         * Expand a number of an array of numbers to an usable 4 values array\n         *\n         * @param  {integer|array} value\n         * @return {array}        array\n         */\n        function expandMarginSetting(value) {\n            if (typeof value === \"number\") {\n                value = [value];\n            }\n\n            if (!Array.isArray(value)) {\n                console.log(\"Margin only takes an integer or an array of integers\");\n                value = [0];\n            }\n\n            switch (value.length) {\n                case 1:\n                    return [value[0], value[0], value[0], value[0]];\n                case 2:\n                    return [value[0], value[1], value[0], value[1]];\n                case 3:\n                    return [value[0], value[1], value[2], value[1]];\n                case 4:\n                    return value;\n                default:\n                    return value.slice(0, 4);\n            }\n        }\n\n        /**\n         * Convert a string to an array like [singular-form, plural-form]\n         *\n         * @param  {string|array} value Date to convert\n         * @return {array}       An array like [singular-form, plural-form]\n         */\n        function expandItemName(value) {\n            if (typeof value === \"string\") {\n                return [value, value + (value !== \"\" ? \"s\" : \"\")];\n            }\n\n            if (Array.isArray(value)) {\n                if (value.length === 1) {\n                    return [value[0], value[0] + \"s\"];\n                } else if (value.length > 2) {\n                    return value.slice(0, 2);\n                }\n\n                return value;\n            }\n\n            return [\"item\", \"items\"];\n        }\n\n        function parseColLimit(value) {\n            return value > 0 ? value : null;\n        }\n\n        function parseRowLimit(value) {\n            if (value > 0 && options.colLimit > 0) {\n                console.log(\"colLimit and rowLimit are mutually exclusive, rowLimit will be ignored\");\n                return null;\n            }\n            return value > 0 ? value : null;\n        }\n\n        return this._init();\n\n    }\n\n    /**\n     * Convert a keyword or an array of keyword/date to an array of date objects\n     *\n     * @param  {string|array|Date} value Data to convert\n     * @return {array}       An array of Dates\n     */\n    expandDateSetting(value) {\n        \"use strict\";\n\n        if (!Array.isArray(value)) {\n            value = [value];\n        }\n\n        return value.map(function(data) {\n            if (data === \"now\") {\n                return new Date();\n            }\n            if (data instanceof Date) {\n                return data;\n            }\n            return false;\n        }).filter(function(d) {\n            return d !== false;\n        });\n    }\n\n    /**\n     * Fill the calendar by coloring the cells\n     *\n     * @param array svg An array of html node to apply the transformation to (optional)\n     *                  It's used to limit the painting to only a subset of the calendar\n     * @return void\n     */\n    fill(svg) {\n        \"use strict\";\n\n        var parent = this;\n        var options = parent.options;\n\n        if (arguments.length === 0) {\n            svg = parent.root.selectAll(\".graph-domain\");\n        }\n\n        var rect = svg\n            .selectAll(\"svg\").selectAll(\"g\")\n            .data(function(d) {\n                return parent._domains.get(d);\n            });\n\n        /**\n         * Colorize the cell via a style attribute if enabled\n         */\n        function addStyle(element) {\n            if (parent.legendScale === null) {\n                return false;\n            }\n\n            element.attr(\"fill\", function(d) {\n                if (d.v === null && (options.hasOwnProperty(\"considerMissingDataAsZero\") && !options.considerMissingDataAsZero)) {\n                    if (options.legendColors.hasOwnProperty(\"base\")) {\n                        return options.legendColors.base;\n                    }\n                }\n\n                if (options.legendColors !== null && options.legendColors.hasOwnProperty(\"empty\") &&\n                    (d.v === 0 || (d.v === null && options.hasOwnProperty(\"considerMissingDataAsZero\") && options.considerMissingDataAsZero))\n                ) {\n                    return options.legendColors.empty;\n                }\n\n                if (d.v < 0 && options.legend[0] > 0 && options.legendColors !== null && options.legendColors.hasOwnProperty(\"overflow\")) {\n                    return options.legendColors.overflow;\n                }\n\n                return parent.legendScale(Math.min(d.v, options.legend[options.legend.length - 1]));\n            });\n        }\n\n        rect.transition().duration(options.animationDuration).select(\"rect\")\n            .attr(\"class\", function(d) {\n\n                var htmlClass = parent.getHighlightClassName(d.t).trim().split(\" \");\n                var pastDate = parent.dateIsLessThan(d.t, new Date());\n                var sameDate = parent.dateIsEqual(d.t, new Date());\n\n                if (parent.legendScale === null ||\n                    (d.v === null && (options.hasOwnProperty(\"considerMissingDataAsZero\") && !options.considerMissingDataAsZero) && !options.legendColors.hasOwnProperty(\"base\"))\n                ) {\n                    htmlClass.push(\"graph-rect\");\n                }\n\n                if (sameDate) {\n                    htmlClass.push(\"now\");\n                } else if (!pastDate) {\n                    htmlClass.push(\"future\");\n                }\n\n                if (d.v !== null) {\n                    htmlClass.push(parent.Legend.getClass(d.v, (parent.legendScale === null)));\n                } else if (options.considerMissingDataAsZero && pastDate) {\n                    htmlClass.push(parent.Legend.getClass(0, (parent.legendScale === null)));\n                }\n\n                if (options.onClick !== null) {\n                    htmlClass.push(\"hover_cursor\");\n                }\n\n                return htmlClass.join(\" \");\n            })\n            .call(addStyle);\n\n        rect.transition().duration(options.animationDuration).select(\"title\")\n            .text(function(d) {\n                return parent.getSubDomainTitle(d);\n            });\n\n        function formatSubDomainText(element) {\n            if (typeof options.subDomainTextFormat === \"function\") {\n                element.text(function(d) {\n                    return options.subDomainTextFormat(d.t, d.v);\n                });\n            }\n        }\n\n        /**\n         * Change the subDomainText class if necessary\n         * Also change the text, e.g when text is representing the value\n         * instead of the date\n         */\n        rect.transition().duration(options.animationDuration).select(\"text\")\n            .attr(\"class\", function(d) {\n                return \"subdomain-text\" + parent.getHighlightClassName(d.t);\n            })\n            .call(formatSubDomainText);\n    }\n\n    /**\n     * Sprintf like function.\n     * Replaces placeholders {0} in string with values from provided object.\n     * \n     * @param string formatted String containing placeholders.\n     * @param object args Object with properties to replace placeholders in string.\n     * \n     * @return String\n     */\n    formatStringWithObject(formatted, args) {\n        \"use strict\";\n        for (var prop in args) {\n            if (args.hasOwnProperty(prop)) {\n                var regexp = new RegExp(\"\\\\{\" + prop + \"\\\\}\", \"gi\");\n                formatted = formatted.replace(regexp, args[prop]);\n            }\n        }\n        return formatted;\n    }\n\n    // =========================================================================//\n    // EVENTS CALLBACK\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n    // =========================================================================//\n\n    /**\n     * Helper method for triggering event callback\n     *\n     * @param  string\teventName       Name of the event to trigger\n     * @param  array\tsuccessArgs     List of argument to pass to the callback\n     * @param  boolean  skip\t\t\tWhether to skip the event triggering\n     * @return mixed\tTrue when the triggering was skipped, false on error, else the callback function\n     */\n    triggerEvent(eventName, successArgs, skip) {\n        \"use strict\";\n\n        if ((arguments.length === 3 && skip) || this.options[eventName] === null) {\n            return true;\n        }\n\n        if (typeof this.options[eventName] === \"function\") {\n            if (typeof successArgs === \"function\") {\n                successArgs = successArgs();\n            }\n            return this.options[eventName].apply(this, successArgs);\n        } else {\n            console.log(\"Provided callback for \" + eventName + \" is not a function.\");\n            return false;\n        }\n    }\n\n    /**\n     * Event triggered on a mouse click on a subDomain cell\n     *\n     * @param  Date\t\td\t\tDate of the subdomain block\n     * @param  int\t\titemNb\tNumber of items in that date\n     */\n    onClick(d, itemNb) {\n        \"use strict\";\n\n        return this.triggerEvent(\"onClick\", [d, itemNb]);\n    }\n\n    /**\n     * Event triggered after drawing the calendar, byt before filling it with data\n     */\n    afterLoad() {\n        \"use strict\";\n\n        return this.triggerEvent(\"afterLoad\");\n    }\n\n    /**\n     * Event triggered after completing drawing and filling the calendar\n     */\n    onComplete() {\n        \"use strict\";\n\n        var response = this.triggerEvent(\"onComplete\", [], this._completed);\n        this._completed = true;\n        return response;\n    }\n\n    /**\n     * Event triggered after shifting the calendar one domain back\n     *\n     * @param  Date\t\tstart\tDomain start date\n     * @param  Date\t\tend\t\tDomain end date\n     */\n    afterLoadPreviousDomain(start) {\n        \"use strict\";\n\n        var parent = this;\n        return this.triggerEvent(\"afterLoadPreviousDomain\", function() {\n            var subDomain = parent.getSubDomain(start);\n            return [subDomain.shift(), subDomain.pop()];\n        });\n    }\n\n    /**\n     * Event triggered after shifting the calendar one domain above\n     *\n     * @param  Date\t\tstart\tDomain start date\n     * @param  Date\t\tend\t\tDomain end date\n     */\n    afterLoadNextDomain(start) {\n        \"use strict\";\n\n        var parent = this;\n        return this.triggerEvent(\"afterLoadNextDomain\", function() {\n            var subDomain = parent.getSubDomain(start);\n            return [subDomain.shift(), subDomain.pop()];\n        });\n    }\n\n    /**\n     * Event triggered after loading the leftmost domain allowed by minDate\n     *\n     * @param  boolean  reached True if the leftmost domain was reached\n     */\n    onMinDomainReached(reached) {\n        \"use strict\";\n\n        this._minDomainReached = reached;\n        return this.triggerEvent(\"onMinDomainReached\", [reached]);\n    }\n\n    /**\n     * Event triggered after loading the rightmost domain allowed by maxDate\n     *\n     * @param  boolean  reached True if the rightmost domain was reached\n     */\n    onMaxDomainReached(reached) {\n        \"use strict\";\n\n        this._maxDomainReached = reached;\n        return this.triggerEvent(\"onMaxDomainReached\", [reached]);\n    }\n\n    checkIfMinDomainIsReached(date, upperBound) {\n        \"use strict\";\n\n        if (this.minDomainIsReached(date)) {\n            this.onMinDomainReached(true);\n        }\n\n        if (arguments.length === 2) {\n            if (this._maxDomainReached && !this.maxDomainIsReached(upperBound)) {\n                this.onMaxDomainReached(false);\n            }\n        }\n    }\n\n    checkIfMaxDomainIsReached(date, lowerBound) {\n        \"use strict\";\n\n        if (this.maxDomainIsReached(date)) {\n            this.onMaxDomainReached(true);\n        }\n\n        if (arguments.length === 2) {\n            if (this._minDomainReached && !this.minDomainIsReached(lowerBound)) {\n                this.onMinDomainReached(false);\n            }\n        }\n    }\n\n    // =========================================================================//\n    // FORMATTER\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n    // =========================================================================//\n\n    formatNumber() {\n        return format(\",g\").apply(this, arguments);\n    }\n\n    formatDate(d, format) {\n        \"use strict\";\n\n        if (arguments.length < 2) {\n            format = \"title\";\n        }\n\n        if (typeof format === \"function\") {\n            return format(d);\n        } else {\n            var f = timeFormat(format);\n            return f(d);\n        }\n    }\n\n    getSubDomainTitle(d) {\n        \"use strict\";\n\n        if (d.v === null && !this.options.considerMissingDataAsZero) {\n            return this.formatStringWithObject(this.options.subDomainTitleFormat.empty, {\n                date: this.formatDate(new Date(d.t), this.options.subDomainDateFormat)\n            });\n        } else {\n            var value = d.v;\n            // Consider null as 0\n            if (value === null && this.options.considerMissingDataAsZero) {\n                value = 0;\n            }\n\n            return this.formatStringWithObject(this.options.subDomainTitleFormat.filled, {\n                count: this.formatNumber(value),\n                name: this.options.itemName[(value !== 1 ? 1 : 0)],\n                connector: this._domainType[this.options.subDomain].format.connector,\n                date: this.formatDate(new Date(d.t), this.options.subDomainDateFormat)\n            });\n        }\n    }\n\n    // =========================================================================//\n    // DOMAIN NAVIGATION\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n    // =========================================================================//\n\n    /**\n     * Shift the calendar one domain forward\n     *\n     * The new domain is loaded only if it's not beyond maxDate\n     *\n     * @param int n Number of domains to load\n     * @return bool True if the next domain was loaded, else false\n     */\n    loadNextDomain(n) {\n        \"use strict\";\n\n        if (this._maxDomainReached || n === 0) {\n            return false;\n        }\n\n        var bound = this.loadNewDomains(this.NAVIGATE_RIGHT, this.getDomain(this.getNextDomain(), n));\n\n        this.afterLoadNextDomain(bound.end);\n        this.checkIfMaxDomainIsReached(this.getNextDomain().getTime(), bound.start);\n\n        return true;\n    }\n\n    /**\n     * Shift the calendar one domain backward\n     *\n     * The previous domain is loaded only if it's not beyond the minDate\n     *\n     * @param int n Number of domains to load\n     * @return bool True if the previous domain was loaded, else false\n     */\n    loadPreviousDomain(n) {\n        \"use strict\";\n\n        if (this._minDomainReached || n === 0) {\n            return false;\n        }\n\n        var bound = this.loadNewDomains(this.NAVIGATE_LEFT, this.getDomain(this.getDomainKeys()[0], -n).reverse());\n\n        this.afterLoadPreviousDomain(bound.start);\n        this.checkIfMinDomainIsReached(bound.start, bound.end);\n\n        return true;\n    }\n\n    loadNewDomains(direction, newDomains) {\n        \"use strict\";\n\n        var parent = this;\n        var backward = direction === this.NAVIGATE_LEFT;\n        var i = -1;\n        var total = newDomains.length;\n        var domains = this.getDomainKeys();\n\n        function buildSubDomain(d) {\n            return { t: parent._domainType[parent.options.subDomain].extractUnit(d), v: null };\n        }\n\n        // Remove out of bound domains from list of new domains to prepend\n        while (++i < total) {\n            if (backward && this.minDomainIsReached(newDomains[i])) {\n                newDomains = newDomains.slice(0, i + 1);\n                break;\n            }\n            if (!backward && this.maxDomainIsReached(newDomains[i])) {\n                newDomains = newDomains.slice(0, i);\n                break;\n            }\n        }\n\n        newDomains = newDomains.slice(-this.options.range);\n\n        for (i = 0, total = newDomains.length; i < total; i++) {\n            this._domains.set(\n                newDomains[i].getTime(),\n                this.getSubDomain(newDomains[i]).map(buildSubDomain)\n            );\n\n            this._domains.remove(backward ? domains.pop() : domains.shift());\n        }\n\n        domains = this.getDomainKeys();\n\n        if (backward) {\n            newDomains = newDomains.reverse();\n        }\n\n        this.paint(direction);\n\n        this.getDatas(\n            this.options.data,\n            newDomains[0],\n            this.getSubDomain(newDomains[newDomains.length - 1]).pop(),\n            function() {\n                parent.fill(parent.lastInsertedSvg);\n            }\n        );\n\n        return {\n            start: newDomains[backward ? 0 : 1],\n            end: domains[domains.length - 1]\n        };\n    }\n\n    /**\n     * Return whether a date is inside the scope determined by maxDate\n     *\n     * @param int datetimestamp The timestamp in ms to test\n     * @return bool True if the specified date correspond to the calendar upper bound\n     */\n    maxDomainIsReached(datetimestamp) {\n        \"use strict\";\n\n        return (this.options.maxDate !== null && (this.options.maxDate.getTime() < datetimestamp));\n    }\n\n    /**\n     * Return whether a date is inside the scope determined by minDate\n     *\n     * @param int datetimestamp The timestamp in ms to test\n     * @return bool True if the specified date correspond to the calendar lower bound\n     */\n    minDomainIsReached(datetimestamp) {\n        \"use strict\";\n\n        return (this.options.minDate !== null && (this.options.minDate.getTime() >= datetimestamp));\n    }\n\n    /**\n     * Return the list of the calendar's domain timestamp\n     *\n     * @return Array a sorted array of timestamp\n     */\n    getDomainKeys() {\n        \"use strict\";\n\n        return this._domains.keys()\n            .map(function(d) {\n                return parseInt(d, 10);\n            })\n            .sort(function(a, b) {\n                return a - b;\n            });\n    }\n\n    // =========================================================================//\n    // POSITIONNING\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n    // =========================================================================//\n\n    positionSubDomainX(d) {\n        \"use strict\";\n\n        var index = this._domainType[this.options.subDomain].position.x(new Date(d));\n        return index * this.options.cellSize + index * this.options.cellPadding;\n    }\n\n    positionSubDomainY(d) {\n        \"use strict\";\n\n        var index = this._domainType[this.options.subDomain].position.y(new Date(d));\n        return index * this.options.cellSize + index * this.options.cellPadding;\n    }\n\n    getSubDomainColumnNumber(d) {\n        \"use strict\";\n\n        if (this.options.rowLimit > 0) {\n            var i = this._domainType[this.options.subDomain].maxItemNumber;\n            if (typeof i === \"function\") {\n                i = i(d);\n            }\n            return Math.ceil(i / this.options.rowLimit);\n        }\n\n        var j = this._domainType[this.options.subDomain].defaultColumnNumber;\n        if (typeof j === \"function\") {\n            j = j(d);\n\n        }\n        return this.options.colLimit || j;\n    }\n\n    getSubDomainRowNumber(d) {\n        \"use strict\";\n\n        if (this.options.colLimit > 0) {\n            var i = this._domainType[this.options.subDomain].maxItemNumber;\n            if (typeof i === \"function\") {\n                i = i(d);\n            }\n            return Math.ceil(i / this.options.colLimit);\n        }\n\n        var j = this._domainType[this.options.subDomain].defaultRowNumber;\n        if (typeof j === \"function\") {\n            j = j(d);\n\n        }\n        return this.options.rowLimit || j;\n    }\n\n    /**\n     * Return a classname if the specified date should be highlighted\n     *\n     * @param  timestamp date Date of the current subDomain\n     * @return String the highlight class\n     */\n    getHighlightClassName(d) {\n        \"use strict\";\n\n        d = new Date(d);\n\n        if (this.options.highlight.length > 0) {\n            for (var i in this.options.highlight) {\n                if (this.dateIsEqual(this.options.highlight[i], d)) {\n                    return this.isNow(this.options.highlight[i]) ? \" highlight-now\" : \" highlight\";\n                }\n            }\n        }\n        return \"\";\n    }\n\n    /**\n     * Return whether the specified date is now,\n     * according to the type of subdomain\n     *\n     * @param  Date d The date to compare\n     * @return bool True if the date correspond to a subdomain cell\n     */\n    isNow(d) {\n        \"use strict\";\n\n        return this.dateIsEqual(d, new Date());\n    }\n\n    /**\n     * Return whether 2 dates are equals\n     * This function is subdomain-aware,\n     * and dates comparison are dependent of the subdomain\n     *\n     * @param  Date dateA First date to compare\n     * @param  Date dateB Secon date to compare\n     * @return bool true if the 2 dates are equals\n     */\n    /* jshint maxcomplexity: false */\n    dateIsEqual(dateA, dateB) {\n        \"use strict\";\n\n        if (!(dateA instanceof Date)) {\n            dateA = new Date(dateA);\n        }\n\n        if (!(dateB instanceof Date)) {\n            dateB = new Date(dateB);\n        }\n\n        switch (this.options.subDomain) {\n            case \"x_min\":\n            case \"min\":\n                return dateA.getFullYear() === dateB.getFullYear() &&\n                    dateA.getMonth() === dateB.getMonth() &&\n                    dateA.getDate() === dateB.getDate() &&\n                    dateA.getHours() === dateB.getHours() &&\n                    dateA.getMinutes() === dateB.getMinutes();\n            case \"x_hour\":\n            case \"hour\":\n                return dateA.getFullYear() === dateB.getFullYear() &&\n                    dateA.getMonth() === dateB.getMonth() &&\n                    dateA.getDate() === dateB.getDate() &&\n                    dateA.getHours() === dateB.getHours();\n            case \"x_day\":\n            case \"day\":\n                return dateA.getFullYear() === dateB.getFullYear() &&\n                    dateA.getMonth() === dateB.getMonth() &&\n                    dateA.getDate() === dateB.getDate();\n            case \"x_week\":\n            case \"week\":\n                return dateA.getFullYear() === dateB.getFullYear() &&\n                    this.getWeekNumber(dateA) === this.getWeekNumber(dateB);\n            case \"x_month\":\n            case \"month\":\n                return dateA.getFullYear() === dateB.getFullYear() &&\n                    dateA.getMonth() === dateB.getMonth();\n            default:\n                return false;\n        }\n    }\n\n\n    /**\n     * Returns wether or not dateA is less than or equal to dateB. This function is subdomain aware.\n     * Performs automatic conversion of values.\n     * @param dateA may be a number or a Date\n     * @param dateB may be a number or a Date\n     * @returns {boolean}\n     */\n    dateIsLessThan(dateA, dateB) {\n        \"use strict\";\n\n        if (!(dateA instanceof Date)) {\n            dateA = new Date(dateA);\n        }\n\n        if (!(dateB instanceof Date)) {\n            dateB = new Date(dateB);\n        }\n\n\n        function normalizedMillis(date, subdomain) {\n            switch (subdomain) {\n                case \"x_min\":\n                case \"min\":\n                    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes()).getTime();\n                case \"x_hour\":\n                case \"hour\":\n                    return new Date(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours()).getTime();\n                case \"x_day\":\n                case \"day\":\n                    return new Date(date.getFullYear(), date.getMonth(), date.getDate()).getTime();\n                case \"x_week\":\n                case \"week\":\n                case \"x_month\":\n                case \"month\":\n                    return new Date(date.getFullYear(), date.getMonth()).getTime();\n                default:\n                    return date.getTime();\n            }\n        }\n\n        return normalizedMillis(dateA, this.options.subDomain) < normalizedMillis(dateB, this.options.subDomain);\n    }\n\n\n    // =========================================================================//\n    // DATE COMPUTATION\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n    // =========================================================================//\n\n    /**\n     * Return the day of the year for the date\n     * @param\tDate\n     * @return  int Day of the year [1,366]\n     */\n    getDayOfYear() {\n        return timeFormat(\"%j\").apply(this, arguments);\n    }\n\n    /**\n     * Return the week number of the year\n     * Monday as the first day of the week\n     * @return int\tWeek number [0-53]\n     */\n    getWeekNumber(d) {\n        \"use strict\";\n\n        var f = this.options.weekStartOnMonday === true ? timeFormat(\"%W\") : timeFormat(\"%U\");\n        return f(d);\n    }\n\n    /**\n     * Return the week number, relative to its month\n     *\n     * @param  int|Date d Date or timestamp in milliseconds\n     * @return int Week number, relative to the month [0-5]\n     */\n    getMonthWeekNumber(d) {\n        \"use strict\";\n\n        if (typeof d === \"number\") {\n            d = new Date(d);\n        }\n\n        var monthFirstWeekNumber = this.getWeekNumber(new Date(d.getFullYear(), d.getMonth()));\n        return this.getWeekNumber(d) - monthFirstWeekNumber - 1;\n    }\n\n    /**\n     * Return the number of weeks in the dates' year\n     *\n     * @param  int|Date d Date or timestamp in milliseconds\n     * @return int Number of weeks in the date's year\n     */\n    getWeekNumberInYear(d) {\n        \"use strict\";\n\n        if (typeof d === \"number\") {\n            d = new Date(d);\n        }\n    }\n\n    /**\n     * Return the number of days in the date's month\n     *\n     * @param  int|Date d Date or timestamp in milliseconds\n     * @return int Number of days in the date's month\n     */\n    getDayCountInMonth(d) {\n        \"use strict\";\n\n        return this.getEndOfMonth(d).getDate();\n    }\n\n    /**\n     * Return the number of days in the date's year\n     *\n     * @param  int|Date d Date or timestamp in milliseconds\n     * @return int Number of days in the date's year\n     */\n    getDayCountInYear(d) {\n        \"use strict\";\n\n        if (typeof d === \"number\") {\n            d = new Date(d);\n        }\n        return (new Date(d.getFullYear(), 1, 29).getMonth() === 1) ? 366 : 365;\n    }\n\n    /**\n     * Get the weekday from a date\n     *\n     * Return the week day number (0-6) of a date,\n     * depending on whether the week start on monday or sunday\n     *\n     * @param  Date d\n     * @return int The week day number (0-6)\n     */\n    getWeekDay(d) {\n        \"use strict\";\n\n        if (this.options.weekStartOnMonday === false) {\n            return d.getDay();\n        }\n        return d.getDay() === 0 ? 6 : (d.getDay() - 1);\n    }\n\n    /**\n     * Get the last day of the month\n     * @param  Date|int\td\tDate or timestamp in milliseconds\n     * @return Date\t\t\tLast day of the month\n     */\n    getEndOfMonth(d) {\n        \"use strict\";\n\n        if (typeof d === \"number\") {\n            d = new Date(d);\n        }\n        return new Date(d.getFullYear(), d.getMonth() + 1, 0);\n    }\n\n    /**\n     *\n     * @param  Date date\n     * @param  int count\n     * @param  string step\n     * @return Date\n     */\n    jumpDate(date, count, step) {\n        \"use strict\";\n\n        var d = new Date(date);\n        switch (step) {\n            case \"hour\":\n                d.setHours(d.getHours() + count);\n                break;\n            case \"day\":\n                d.setHours(d.getHours() + count * 24);\n                break;\n            case \"week\":\n                d.setHours(d.getHours() + count * 24 * 7);\n                break;\n            case \"month\":\n                d.setMonth(d.getMonth() + count);\n                break;\n            case \"year\":\n                d.setFullYear(d.getFullYear() + count);\n        }\n\n        return new Date(d);\n    }\n\n    // =========================================================================//\n    // DOMAIN COMPUTATION\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n    // =========================================================================//\n\n    /**\n     * Return all the minutes between 2 dates\n     *\n     * @param  Date\td\tdate\tA date\n     * @param  int|date\trange\tNumber of minutes in the range, or a stop date\n     * @return array\tAn array of minutes\n     */\n    getMinuteDomain(d, range) {\n        \"use strict\";\n\n        var start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n        var stop = null;\n        if (range instanceof Date) {\n            stop = new Date(range.getFullYear(), range.getMonth(), range.getDate(), range.getHours());\n        } else {\n            stop = new Date(+start + range * 1000 * 60);\n        }\n        return timeMinutes(Math.min(start, stop), Math.max(start, stop));\n    }\n\n    /**\n     * Return all the hours between 2 dates\n     *\n     * @param  Date\td\tA date\n     * @param  int|date\trange\tNumber of hours in the range, or a stop date\n     * @return array\tAn array of hours\n     */\n    getHourDomain(d, range) {\n        \"use strict\";\n\n        var start = new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\n        var stop = null;\n        if (range instanceof Date) {\n            stop = new Date(range.getFullYear(), range.getMonth(), range.getDate(), range.getHours());\n        } else {\n            stop = new Date(start);\n            stop.setHours(stop.getHours() + range);\n        }\n\n        var domains = timeHours(Math.min(start, stop), Math.max(start, stop));\n\n        // Passing from DST to standard time\n        // If there are 25 hours, let's compress the duplicate hours\n        var i = 0;\n        var total = domains.length;\n        for (i = 0; i < total; i++) {\n            if (i > 0 && (domains[i].getHours() === domains[i - 1].getHours())) {\n                this.DSTDomain.push(domains[i].getTime());\n                domains.splice(i, 1);\n                break;\n            }\n        }\n\n        // d3.time.hours is returning more hours than needed when changing\n        // from DST to standard time, because there is really 2 hours between\n        // 1am and 2am!\n        if (typeof range === \"number\" && domains.length > Math.abs(range)) {\n            domains.splice(domains.length - 1, 1);\n        }\n\n        return domains;\n    }\n\n    /**\n     * Return all the days between 2 dates\n     *\n     * @param  Date\t\td\t\tA date\n     * @param  int|date\trange\tNumber of days in the range, or a stop date\n     * @return array\tAn array of weeks\n     */\n    getDayDomain(d, range) {\n        \"use strict\";\n\n        var start = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n        var stop = null;\n        if (range instanceof Date) {\n            stop = new Date(range.getFullYear(), range.getMonth(), range.getDate());\n        } else {\n            stop = new Date(start);\n            stop = new Date(stop.setDate(stop.getDate() + parseInt(range, 10)));\n        }\n\n        return timeDays(Math.min(start, stop), Math.max(start, stop));\n    }\n\n    /**\n     * Return all the weeks between 2 dates\n     *\n     * @param  Date\td\tA date\n     * @param  int|date\trange\tNumber of minutes in the range, or a stop date\n     * @return array\tAn array of weeks\n     */\n    getWeekDomain(d, range) {\n        \"use strict\";\n\n        var weekStart;\n\n        if (this.options.weekStartOnMonday === false) {\n            weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate() - d.getDay());\n        } else {\n            if (d.getDay() === 1) {\n                weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n            } else if (d.getDay() === 0) {\n                weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                weekStart.setDate(weekStart.getDate() - 6);\n            } else {\n                weekStart = new Date(d.getFullYear(), d.getMonth(), d.getDate() - d.getDay() + 1);\n            }\n        }\n\n        var endDate = new Date(weekStart);\n\n        var stop = range;\n        if (typeof range !== \"object\") {\n            stop = new Date(endDate.setDate(endDate.getDate() + range * 7));\n        }\n\n        return (this.options.weekStartOnMonday === true) ?\n            timeMondays(Math.min(weekStart, stop), Math.max(weekStart, stop)) :\n            timeSundays(Math.min(weekStart, stop), Math.max(weekStart, stop));\n    }\n\n    /**\n     * Return all the months between 2 dates\n     *\n     * @param  Date\t\td\t\tA date\n     * @param  int|date\trange\tNumber of months in the range, or a stop date\n     * @return array\tAn array of months\n     */\n    getMonthDomain(d, range) {\n        \"use strict\";\n\n        var start = new Date(d.getFullYear(), d.getMonth());\n        var stop = null;\n        if (range instanceof Date) {\n            stop = new Date(range.getFullYear(), range.getMonth());\n        } else {\n            stop = new Date(start);\n            stop = stop.setMonth(stop.getMonth() + range);\n        }\n\n        return timeMonths(Math.min(start, stop), Math.max(start, stop));\n    }\n\n    /**\n     * Return all the years between 2 dates\n     *\n     * @param  Date\td\tdate\tA date\n     * @param  int|date\trange\tNumber of minutes in the range, or a stop date\n     * @return array\tAn array of hours\n     */\n    getYearDomain(d, range) {\n        \"use strict\";\n\n        var start = new Date(d.getFullYear(), 0);\n        var stop = null;\n        if (range instanceof Date) {\n            stop = new Date(range.getFullYear(), 0);\n        } else {\n            stop = new Date(d.getFullYear() + range, 0);\n        }\n\n        return timeYears(Math.min(start, stop), Math.max(start, stop));\n    }\n\n    /**\n     * Get an array of domain start dates\n     *\n     * @param  int|Date date A random date included in the wanted domain\n     * @param  int|Date range Number of dates to get, or a stop date\n     * @return Array of dates\n     */\n    getDomain(date, range) {\n        \"use strict\";\n\n        if (typeof date === \"number\") {\n            date = new Date(date);\n        }\n\n        if (arguments.length < 2) {\n            range = this.options.range;\n        }\n\n        switch (this.options.domain) {\n            case \"hour\":\n                var domains = this.getHourDomain(date, range);\n\n                // Case where an hour is missing, when passing from standard time to DST\n                // Missing hour is perfectly acceptabl in subDomain, but not in domains\n                if (typeof range === \"number\" && domains.length < range) {\n                    if (range > 0) {\n                        domains.push(this.getHourDomain(domains[domains.length - 1], 2)[1]);\n                    } else {\n                        domains.shift(this.getHourDomain(domains[0], -2)[0]);\n                    }\n                }\n                return domains;\n            case \"day\":\n                return this.getDayDomain(date, range);\n            case \"week\":\n                return this.getWeekDomain(date, range);\n            case \"month\":\n                return this.getMonthDomain(date, range);\n            case \"year\":\n                return this.getYearDomain(date, range);\n        }\n    }\n\n    /* jshint maxcomplexity: false */\n    getSubDomain(date) {\n        \"use strict\";\n\n        if (typeof date === \"number\") {\n            date = new Date(date);\n        }\n\n        var parent = this;\n\n        /**\n         * @return int\n         */\n        var computeDaySubDomainSize = function(date, domain) {\n            switch (domain) {\n                case \"year\":\n                    return parent.getDayCountInYear(date);\n                case \"month\":\n                    return parent.getDayCountInMonth(date);\n                case \"week\":\n                    return 7;\n            }\n        };\n\n        /**\n         * @return int\n         */\n        var computeMinSubDomainSize = function(date, domain) {\n            switch (domain) {\n                case \"hour\":\n                    return 60;\n                case \"day\":\n                    return 60 * 24;\n                case \"week\":\n                    return 60 * 24 * 7;\n            }\n        };\n\n        /**\n         * @return int\n         */\n        var computeHourSubDomainSize = function(date, domain) {\n            switch (domain) {\n                case \"day\":\n                    return 24;\n                case \"week\":\n                    return 168;\n                case \"month\":\n                    return parent.getDayCountInMonth(date) * 24;\n            }\n        };\n\n        /**\n         * @return int\n         */\n        var computeWeekSubDomainSize = function(date, domain) {\n            if (domain === \"month\") {\n                var endOfMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n                var endWeekNb = parent.getWeekNumber(endOfMonth);\n                var startWeekNb = parent.getWeekNumber(new Date(date.getFullYear(), date.getMonth()));\n\n                if (startWeekNb > endWeekNb) {\n                    startWeekNb = 0;\n                    endWeekNb++;\n                }\n\n                return endWeekNb - startWeekNb + 1;\n            } else if (domain === \"year\") {\n                return parent.getWeekNumber(new Date(date.getFullYear(), 11, 31));\n            }\n        };\n\n        switch (this.options.subDomain) {\n            case \"x_min\":\n            case \"min\":\n                return this.getMinuteDomain(date, computeMinSubDomainSize(date, this.options.domain));\n            case \"x_hour\":\n            case \"hour\":\n                return this.getHourDomain(date, computeHourSubDomainSize(date, this.options.domain));\n            case \"x_day\":\n            case \"day\":\n                return this.getDayDomain(date, computeDaySubDomainSize(date, this.options.domain));\n            case \"x_week\":\n            case \"week\":\n                return this.getWeekDomain(date, computeWeekSubDomainSize(date, this.options.domain));\n            case \"x_month\":\n            case \"month\":\n                return this.getMonthDomain(date, 12);\n        }\n    }\n\n    /**\n     * Get the n-th next domain after the calendar newest (rightmost) domain\n     * @param  int n\n     * @return Date The start date of the wanted domain\n     */\n    getNextDomain(n) {\n        \"use strict\";\n\n        if (arguments.length === 0) {\n            n = 1;\n        }\n        return this.getDomain(this.jumpDate(this.getDomainKeys().pop(), n, this.options.domain), 1)[0];\n    }\n\n    /**\n     * Get the n-th domain before the calendar oldest (leftmost) domain\n     * @param  int n\n     * @return Date The start date of the wanted domain\n     */\n    getPreviousDomain(n) {\n        \"use strict\";\n\n        if (arguments.length === 0) {\n            n = 1;\n        }\n        return this.getDomain(this.jumpDate(this.getDomainKeys().shift(), -n, this.options.domain), 1)[0];\n    }\n\n\n    // =========================================================================//\n    // DATAS\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n    // =========================================================================//\n\n    /**\n     * Fetch and interpret data from the datasource\n     *\n     * @param string|object source\n     * @param Date startDate\n     * @param Date endDate\n     * @param function callback\n     * @param function|boolean afterLoad function used to convert the data into a json object. Use true to use the afterLoad callback\n     * @param updateMode\n     *\n     * @return mixed\n     * - True if there are no data to load\n     * - False if data are loaded asynchronously\n     */\n    getDatas(source, startDate, endDate, callback, afterLoad, updateMode) {\n        \"use strict\";\n\n        var self = this;\n        if (arguments.length < 5) {\n            afterLoad = true;\n        }\n        if (arguments.length < 6) {\n            updateMode = this.APPEND_ON_UPDATE;\n        }\n        var _callback = function(data) {\n            if (afterLoad !== false) {\n                if (typeof afterLoad === \"function\") {\n                    data = afterLoad(data);\n                } else if (typeof(self.options.afterLoadData) === \"function\") {\n                    data = self.options.afterLoadData(data);\n                } else {\n                    console.log(\"Provided callback for afterLoadData is not a function.\");\n                }\n            } else if (self.options.dataType === \"csv\" || self.options.dataType === \"tsv\") {\n                data = this.interpretCSV(data);\n            }\n            self.parseDatas(data, updateMode, startDate, endDate);\n            if (typeof callback === \"function\") {\n                callback();\n            }\n        };\n\n        switch (typeof source) {\n            case \"string\":\n                if (source === \"\") {\n                    _callback({});\n                    return true;\n                } else {\n                    var url = this.parseURI(source, startDate, endDate);\n                    var requestType = \"GET\";\n                    if (self.options.dataPostPayload !== null) {\n                        requestType = \"POST\";\n                    }\n                    var payload = null;\n                    if (self.options.dataPostPayload !== null) {\n                        payload = this.parseURI(self.options.dataPostPayload, startDate, endDate);\n                    }\n\n                    switch (this.options.dataType) {\n                        case \"json\":\n                            json(url, _callback).send(requestType, payload);\n                            break;\n                        case \"csv\":\n                            csv(url, _callback).send(requestType, payload);\n                            break;\n                        case \"tsv\":\n                            tsv(url, _callback).send(requestType, payload);\n                            break;\n                        case \"txt\":\n                            text(url, _callback).send(requestType, payload);\n                            break;\n                    }\n                }\n                return false;\n            case \"object\":\n                if (source === Object(source)) {\n                    _callback(source);\n                    return false;\n                }\n                /* falls through */\n            default:\n                _callback({});\n                return true;\n        }\n    }\n\n    /**\n     * Populate the calendar internal data\n     *\n     * @param object data\n     * @param constant updateMode\n     * @param Date startDate\n     * @param Date endDate\n     *\n     * @return void\n     */\n    parseDatas(data, updateMode, startDate, endDate) {\n        \"use strict\";\n\n        if (updateMode === this.RESET_ALL_ON_UPDATE) {\n            this._domains.forEach(function(key, value) {\n                value.forEach(function(element, index, array) {\n                    array[index].v = null;\n                });\n            });\n        }\n\n        var temp = {};\n\n        var extractTime = function(d) {\n            return d.t;\n        };\n\n        /*jshint forin:false */\n        for (var d in data) {\n            var date = new Date(d * 1000);\n            var domainUnit = this.getDomain(date)[0].getTime();\n\n            // The current data belongs to a domain that was compressed\n            // Compress the data for the two duplicate hours into the same hour\n            if (this.DSTDomain.indexOf(domainUnit) >= 0) {\n\n                // Re-assign all data to the first or the second duplicate hours\n                // depending on which is visible\n                if (this._domains.has(domainUnit - 3600 * 1000)) {\n                    domainUnit -= 3600 * 1000;\n                }\n            }\n\n            // Skip if data is not relevant to current domain\n            if (isNaN(d) || !data.hasOwnProperty(d) || !this._domains.has(domainUnit) || !(domainUnit >= +startDate && domainUnit < +endDate)) {\n                continue;\n            }\n\n            var subDomainsData = this._domains.get(domainUnit);\n\n            if (!temp.hasOwnProperty(domainUnit)) {\n                temp[domainUnit] = subDomainsData.map(extractTime);\n            }\n\n            var index = temp[domainUnit].indexOf(this._domainType[this.options.subDomain].extractUnit(date));\n\n            if (updateMode === this.RESET_SINGLE_ON_UPDATE) {\n                subDomainsData[index].v = data[d];\n            } else {\n                if (!isNaN(subDomainsData[index].v)) {\n                    subDomainsData[index].v += data[d];\n                } else {\n                    subDomainsData[index].v = data[d];\n                }\n            }\n        }\n    }\n\n    parseURI(str, startDate, endDate) {\n        \"use strict\";\n\n        // Use a timestamp in seconds\n        str = str.replace(/\\{\\{t:start\\}\\}/g, startDate.getTime() / 1000);\n        str = str.replace(/\\{\\{t:end\\}\\}/g, endDate.getTime() / 1000);\n\n        // Use a string date, following the ISO-8601\n        str = str.replace(/\\{\\{d:start\\}\\}/g, startDate.toISOString());\n        str = str.replace(/\\{\\{d:end\\}\\}/g, endDate.toISOString());\n\n        return str;\n    }\n\n    interpretCSV(data) {\n        \"use strict\";\n\n        var d = {};\n        var keys = Object.keys(data[0]);\n        var i, total;\n        for (i = 0, total = data.length; i < total; i++) {\n            d[data[i][keys[0]]] = +data[i][keys[1]];\n        }\n        return d;\n    }\n\n    /**\n     * Handle the calendar layout and dimension\n     *\n     * Expand and shrink the container depending on its children dimension\n     * Also rearrange the children position depending on their dimension,\n     * and the legend position\n     *\n     * @return void\n     */\n    resize() {\n        \"use strict\";\n\n        var parent = this;\n        var options = parent.options;\n        var legendWidth = options.displayLegend ? (parent.Legend.getDim(\"width\") + options.legendMargin[1] + options.legendMargin[3]) : 0;\n        var legendHeight = options.displayLegend ? (parent.Legend.getDim(\"height\") + options.legendMargin[0] + options.legendMargin[2]) : 0;\n\n        var graphWidth = parent.graphDim.width - options.domainGutter - options.cellPadding;\n        var graphHeight = parent.graphDim.height - options.domainGutter - options.cellPadding;\n\n        this.root.transition().duration(options.animationDuration)\n            .attr(\"width\", function() {\n                if (options.legendVerticalPosition === \"middle\" || options.legendVerticalPosition === \"center\") {\n                    return graphWidth + legendWidth;\n                }\n                return Math.max(graphWidth, legendWidth);\n            })\n            .attr(\"height\", function() {\n                if (options.legendVerticalPosition === \"middle\" || options.legendVerticalPosition === \"center\") {\n                    return Math.max(graphHeight, legendHeight);\n                }\n                return graphHeight + legendHeight;\n            });\n\n        this.root.select(\".graph\").transition().duration(options.animationDuration)\n            .attr(\"y\", function() {\n                if (options.legendVerticalPosition === \"top\") {\n                    return legendHeight;\n                }\n                return 0;\n            })\n            .attr(\"x\", function() {\n                if (\n                    (options.legendVerticalPosition === \"middle\" || options.legendVerticalPosition === \"center\") &&\n                    options.legendHorizontalPosition === \"left\") {\n                    return legendWidth;\n                }\n                return 0;\n\n            });\n    }\n\n    // =========================================================================//\n    // PUBLIC API\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n    // =========================================================================//\n\n    /**\n     * Shift the calendar forward\n     */\n    next(n) {\n        \"use strict\";\n\n        if (arguments.length === 0) {\n            n = 1;\n        }\n        return this.loadNextDomain(n);\n    }\n\n    /**\n     * Shift the calendar backward\n     */\n    previous(n) {\n        \"use strict\";\n\n        if (arguments.length === 0) {\n            n = 1;\n        }\n        return this.loadPreviousDomain(n);\n    }\n\n    /**\n     * Jump directly to a specific date\n     *\n     * JumpTo will scroll the calendar until the wanted domain with the specified\n     * date is visible. Unless you set reset to true, the wanted domain\n     * will not necessarily be the first (leftmost) domain of the calendar.\n     *\n     * @param Date date Jump to the domain containing that date\n     * @param bool reset Whether the wanted domain should be the first domain of the calendar\n     * @param bool True of the calendar was scrolled\n     */\n    jumpTo(date, reset) {\n        \"use strict\";\n\n        if (arguments.length < 2) {\n            reset = false;\n        }\n        var domains = this.getDomainKeys();\n        var firstDomain = domains[0];\n        var lastDomain = domains[domains.length - 1];\n\n        if (date < firstDomain) {\n            return this.loadPreviousDomain(this.getDomain(firstDomain, date).length);\n        } else {\n            if (reset) {\n                return this.loadNextDomain(this.getDomain(firstDomain, date).length);\n            }\n\n            if (date > lastDomain) {\n                return this.loadNextDomain(this.getDomain(lastDomain, date).length);\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Navigate back to the start date\n     *\n     * @since  3.3.8\n     * @return void\n     */\n    rewind() {\n        \"use strict\";\n\n        this.jumpTo(this.options.start, true);\n    }\n\n    /**\n     * Update the calendar with new data\n     *\n     * @param  object|string\t\tdataSource\t\tThe calendar's datasource, same type as this.options.data\n     * @param  boolean|function\t\tafterLoad\t\tWhether to execute afterLoad() on the data. Pass directly a function\n     * if you don't want to use the afterLoad() callback\n     */\n    update(dataSource, afterLoad, updateMode) {\n        \"use strict\";\n\n        if (arguments.length < 2) {\n            afterLoad = true;\n        }\n        if (arguments.length < 3) {\n            updateMode = this.RESET_ALL_ON_UPDATE;\n        }\n\n        var domains = this.getDomainKeys();\n        var self = this;\n        this.getDatas(\n            dataSource,\n            new Date(domains[0]),\n            this.getSubDomain(domains[domains.length - 1]).pop(),\n            function() {\n                self.fill();\n            },\n            afterLoad,\n            updateMode\n        );\n    }\n\n    /**\n     * Set the legend\n     *\n     * @param array legend an array of integer, representing the different threshold value\n     * @param array colorRange an array of 2 hex colors, for the minimum and maximum colors\n     */\n    setLegend() {\n        \"use strict\";\n\n        var oldLegend = this.options.legend.slice(0);\n        if (arguments.length >= 1 && Array.isArray(arguments[0])) {\n            this.options.legend = arguments[0];\n        }\n        if (arguments.length >= 2) {\n            if (Array.isArray(arguments[1]) && arguments[1].length >= 2) {\n                this.options.legendColors = [arguments[1][0], arguments[1][1]];\n            } else {\n                this.options.legendColors = arguments[1];\n            }\n        }\n\n        if ((arguments.length > 0 && !arrayEquals(oldLegend, this.options.legend)) || arguments.length >= 2) {\n            this.Legend.buildColors();\n            this.fill();\n        }\n\n        this.Legend.redraw(this.graphDim.width - this.options.domainGutter - this.options.cellPadding);\n    }\n\n    /**\n     * Remove the legend\n     *\n     * @return bool False if there is no legend to remove\n     */\n    removeLegend() {\n        \"use strict\";\n\n        if (!this.options.displayLegend) {\n            return false;\n        }\n        this.options.displayLegend = false;\n        this.Legend.remove();\n        return true;\n    }\n\n    /**\n     * Display the legend\n     *\n     * @return bool False if the legend was already displayed\n     */\n    showLegend() {\n        \"use strict\";\n\n        if (this.options.displayLegend) {\n            return false;\n        }\n        this.options.displayLegend = true;\n        this.Legend.redraw(this.graphDim.width - this.options.domainGutter - this.options.cellPadding);\n        return true;\n    }\n\n    /**\n     * Highlight dates\n     *\n     * Add a highlight class to a set of dates\n     *\n     * @since  3.3.5\n     * @param  array Array of dates to highlight\n     * @return bool True if dates were highlighted\n     */\n    highlight(args) {\n        \"use strict\";\n\n        if ((this.options.highlight = this.expandDateSetting(args)).length > 0) {\n            this.fill();\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * Destroy the calendar\n     *\n     * Usage: cal = cal.destroy();\n     *\n     * @since  3.3.6\n     * @param function A callback function to trigger after destroying the calendar\n     * @return null\n     */\n    destroy(callback) {\n        \"use strict\";\n\n        this.root.transition().duration(this.options.animationDuration)\n            .attr(\"width\", 0)\n            .attr(\"height\", 0)\n            .remove()\n            .each(function() {\n                if (typeof callback === \"function\") {\n                    callback();\n                } else if (typeof callback !== \"undefined\") {\n                    console.log(\"Provided callback for destroy() is not a function.\");\n                }\n            });\n\n        return null;\n    }\n\n    getSVG() {\n        \"use strict\";\n\n        var styles = {\n            \".cal-heatmap-container\": {},\n            \".graph\": {},\n            \".graph-rect\": {},\n            \"rect.highlight\": {},\n            \"rect.now\": {},\n            \"rect.highlight-now\": {},\n            \"text.highlight\": {},\n            \"text.now\": {},\n            \"text.highlight-now\": {},\n            \".domain-background\": {},\n            \".graph-label\": {},\n            \".subdomain-text\": {},\n            \".q0\": {},\n            \".qi\": {}\n        };\n\n        for (var j = 1, total = this.options.legend.length + 1; j <= total; j++) {\n            styles[\".q\" + j] = {};\n        }\n\n        var root = this.root;\n\n        var whitelistStyles = [\n            // SVG specific properties\n            \"stroke\", \"stroke-width\", \"stroke-opacity\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-miterlimit\",\n            \"fill\", \"fill-opacity\", \"fill-rule\",\n            \"marker\", \"marker-start\", \"marker-mid\", \"marker-end\",\n            \"alignement-baseline\", \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\", \"glyph-orientation-vertical\", \"kerning\", \"text-anchor\",\n            \"shape-rendering\",\n\n            // Text Specific properties\n            \"text-transform\", \"font-family\", \"font\", \"font-size\", \"font-weight\"\n        ];\n\n        var filterStyles = function(attribute, property, value) {\n            if (whitelistStyles.indexOf(property) !== -1) {\n                styles[attribute][property] = value;\n            }\n        };\n\n        var getElement = function(e) {\n            return root.select(e).node();\n        };\n\n        /* jshint forin:false */\n        for (var element in styles) {\n            if (!styles.hasOwnProperty(element)) {\n                continue;\n            }\n\n            var dom = getElement(element);\n\n            if (dom === null) {\n                continue;\n            }\n\n            // The DOM Level 2 CSS way\n            /* jshint maxdepth: false */\n            if (\"getComputedStyle\" in window) {\n                var cs = getComputedStyle(dom, null);\n                if (cs.length !== 0) {\n                    for (var i = 0; i < cs.length; i++) {\n                        filterStyles(element, cs.item(i), cs.getPropertyValue(cs.item(i)));\n                    }\n\n                    // Opera workaround. Opera doesn\"t support `item`/`length`\n                    // on CSSStyleDeclaration.\n                } else {\n                    for (var k in cs) {\n                        if (cs.hasOwnProperty(k)) {\n                            filterStyles(element, k, cs[k]);\n                        }\n                    }\n                }\n\n                // The IE way\n            } else if (\"currentStyle\" in dom) {\n                var css = dom.currentStyle;\n                for (var p in css) {\n                    filterStyles(element, p, css[p]);\n                }\n            }\n        }\n\n        var string = \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" \" +\n            \"xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><style type=\\\"text/css\\\"><![CDATA[ \";\n\n        for (var style in styles) {\n            string += style + \" {\\n\";\n            for (var l in styles[style]) {\n                string += \"\\t\" + l + \":\" + styles[style][l] + \";\\n\";\n            }\n            string += \"}\\n\";\n        }\n\n        string += \"]]></style>\";\n        string += new XMLSerializer().serializeToString(this.root.node());\n        string += \"</svg>\";\n\n        return string;\n    }\n}\n\n// =========================================================================//\n// DOMAIN POSITION COMPUTATION\t\t\t\t\t\t\t\t\t\t\t\t//\n// =========================================================================//\n\n/**\n * Compute the position of a domain, relative to the calendar\n */\nclass DomainPosition {\n    constructor() {\n        \"use strict\";\n\n        this.positions = map();\n    }\n\n    getPosition(d) {\n        \"use strict\";\n\n        return this.positions.get(d);\n    }\n\n    getPositionFromIndex(i) {\n        \"use strict\";\n\n        var domains = this.getKeys();\n        return this.positions.get(domains[i]);\n    }\n\n    getLast() {\n        \"use strict\";\n\n        var domains = this.getKeys();\n        return this.positions.get(domains[domains.length - 1]);\n    }\n\n    setPosition(d, dim) {\n        \"use strict\";\n\n        this.positions.set(d, dim);\n    }\n\n    shiftRightBy(exitingDomainDim) {\n        \"use strict\";\n\n        this.positions.each(function(key, value, map) {\n            map.set(key, value - exitingDomainDim);\n        });\n\n        var domains = this.getKeys();\n        this.positions.remove(domains[0]);\n    }\n\n    shiftLeftBy(enteringDomainDim) {\n        \"use strict\";\n\n        this.positions.each(function(key, value, map) {\n            map.set(key, value + enteringDomainDim);\n        });\n\n        var domains = this.getKeys();\n        this.positions.remove(domains[domains.length - 1]);\n    }\n\n    getKeys() {\n        \"use strict\";\n\n        return this.positions.keys().sort(function(a, b) {\n            return parseInt(a, 10) - parseInt(b, 10);\n        });\n    }\n}\n\n// =========================================================================//\n// LEGEND\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//\n// =========================================================================//\n\nclass Legend {\n    constructor(calendar) {\n        \"use strict\";\n\n        this.calendar = calendar;\n        this.computeDim();\n\n        if (calendar.options.legendColors !== null) {\n            this.buildColors();\n        }\n    }\n\n    computeDim() {\n        \"use strict\";\n\n        var options = this.calendar.options; // Shorter accessor for variable name mangling when minifying\n        this.dim = {\n            width: options.legendCellSize * (options.legend.length + 1) +\n                options.legendCellPadding * (options.legend.length),\n            height: options.legendCellSize\n        };\n    }\n\n    remove() {\n        \"use strict\";\n\n        this.calendar.root.select(\".graph-legend\").remove();\n        this.calendar.resize();\n    }\n\n    redraw(width) {\n        \"use strict\";\n\n        if (!this.calendar.options.displayLegend) {\n            return false;\n        }\n\n        var parent = this;\n        var calendar = this.calendar;\n        var legend = calendar.root;\n        var legendItem;\n        var options = calendar.options; // Shorter accessor for variable name mangling when minifying\n\n        this.computeDim();\n\n        var _legend = options.legend.slice(0);\n        _legend.push(_legend[_legend.length - 1] + 1);\n\n        var legendElement = calendar.root.select(\".graph-legend\");\n        if (legendElement.node() !== null) {\n            legend = legendElement;\n            legendItem = legend\n                .select(\"g\")\n                .selectAll(\"rect\").data(_legend);\n        } else {\n            // Creating the new legend DOM if it doesn't already exist\n            legend = options.legendVerticalPosition === \"top\" ? legend.insert(\"svg\", \".graph\") : legend.append(\"svg\");\n\n            legend\n                .attr(\"x\", getLegendXPosition())\n                .attr(\"y\", getLegendYPosition());\n\n            legendItem = legend\n                .attr(\"class\", \"graph-legend\")\n                .attr(\"height\", parent.getDim(\"height\"))\n                .attr(\"width\", parent.getDim(\"width\"))\n                .append(\"g\")\n                .selectAll().data(_legend);\n        }\n\n        legendItem\n            .enter()\n            .append(\"rect\")\n            .call(legendCellLayout)\n            .attr(\"class\", function(d) {\n                return calendar.Legend.getClass(d, (calendar.legendScale === null));\n            })\n            .attr(\"fill-opacity\", 0)\n            .call(function(selection) {\n                if (calendar.legendScale !== null && options.legendColors !== null && options.legendColors.hasOwnProperty(\"base\")) {\n                    selection.attr(\"fill\", options.legendColors.base);\n                }\n            })\n            .append(\"title\");\n\n        legendItem.exit().transition().duration(options.animationDuration)\n            .attr(\"fill-opacity\", 0)\n            .remove();\n\n        legendItem.transition().delay(function(d, i) {\n                return options.animationDuration * i / 10;\n            })\n            .call(legendCellLayout)\n            .attr(\"fill-opacity\", 1)\n            .call(function(element) {\n                element.attr(\"fill\", function(d, i) {\n                    if (calendar.legendScale === null) {\n                        return \"\";\n                    }\n\n                    if (i === 0) {\n                        return calendar.legendScale(d - 1);\n                    }\n                    return calendar.legendScale(options.legend[i - 1]);\n                });\n\n                element.attr(\"class\", function(d) {\n                    return calendar.Legend.getClass(d, (calendar.legendScale === null));\n                });\n            });\n\n        function legendCellLayout(selection) {\n            selection\n                .attr(\"width\", options.legendCellSize)\n                .attr(\"height\", options.legendCellSize)\n                .attr(\"x\", function(d, i) {\n                    return i * (options.legendCellSize + options.legendCellPadding);\n                });\n        }\n\n        legendItem.select(\"title\").text(function(d, i) {\n            if (i === 0) {\n                return calendar.formatStringWithObject(options.legendTitleFormat.lower, {\n                    min: options.legend[i],\n                    name: options.itemName[1]\n                });\n            } else if (i === _legend.length - 1) {\n                return calendar.formatStringWithObject(options.legendTitleFormat.upper, {\n                    max: options.legend[i - 1],\n                    name: options.itemName[1]\n                });\n            } else {\n                return calendar.formatStringWithObject(options.legendTitleFormat.inner, {\n                    down: options.legend[i - 1],\n                    up: options.legend[i],\n                    name: options.itemName[1]\n                });\n            }\n        });\n\n        legend.transition().duration(options.animationDuration)\n            .attr(\"x\", getLegendXPosition())\n            .attr(\"y\", getLegendYPosition())\n            .attr(\"width\", parent.getDim(\"width\"))\n            .attr(\"height\", parent.getDim(\"height\"));\n\n        legend.select(\"g\").transition().duration(options.animationDuration)\n            .attr(\"transform\", function() {\n                if (options.legendOrientation === \"vertical\") {\n                    return \"rotate(90 \" + options.legendCellSize / 2 + \" \" + options.legendCellSize / 2 + \")\";\n                }\n                return \"\";\n            });\n\n        function getLegendXPosition() {\n            switch (options.legendHorizontalPosition) {\n                case \"right\":\n                    if (options.legendVerticalPosition === \"center\" || options.legendVerticalPosition === \"middle\") {\n                        return width + options.legendMargin[3];\n                    }\n                    return width - parent.getDim(\"width\") - options.legendMargin[1];\n                case \"middle\":\n                case \"center\":\n                    return Math.round(width / 2 - parent.getDim(\"width\") / 2);\n                default:\n                    return options.legendMargin[3];\n            }\n        }\n\n        function getLegendYPosition() {\n            if (options.legendVerticalPosition === \"bottom\") {\n                return calendar.graphDim.height + options.legendMargin[0] - options.domainGutter - options.cellPadding;\n            }\n            return options.legendMargin[0];\n        }\n\n        calendar.resize();\n    }\n\n    /**\n     * Return the dimension of the legend\n     *\n     * Takes into account rotation\n     *\n     * @param  string axis Width or height\n     * @return int height or width in pixels\n     */\n    getDim(axis) {\n        \"use strict\";\n\n        var isHorizontal = (this.calendar.options.legendOrientation === \"horizontal\");\n\n        switch (axis) {\n            case \"width\":\n                return this.dim[isHorizontal ? \"width\" : \"height\"];\n            case \"height\":\n                return this.dim[isHorizontal ? \"height\" : \"width\"];\n        }\n    }\n\n    buildColors() {\n        \"use strict\";\n\n        var options = this.calendar.options; // Shorter accessor for variable name mangling when minifying\n\n        if (options.legendColors === null) {\n            this.calendar.legendScale = null;\n            return false;\n        }\n\n        var _colorRange = [];\n\n        if (Array.isArray(options.legendColors)) {\n            _colorRange = options.legendColors;\n        } else if (options.legendColors.hasOwnProperty(\"min\") && options.legendColors.hasOwnProperty(\"max\")) {\n            _colorRange = [options.legendColors.min, options.legendColors.max];\n        } else {\n            options.legendColors = null;\n            return false;\n        }\n\n        var _legend = options.legend.slice(0);\n\n        if (_legend[0] > 0) {\n            _legend.unshift(0);\n        } else if (_legend[0] < 0) {\n            // Let's guess the leftmost value, it we have to add one\n            _legend.unshift(_legend[0] - (_legend[_legend.length - 1] - _legend[0]) / _legend.length);\n        }\n\n        var colorScale = scaleLinear()\n            .range(_colorRange)\n            .interpolate(interpolateHcl)\n            .domain([min(_legend), max(_legend)]);\n\n        var legendColors = _legend.map(function(element) {\n            return colorScale(element);\n        });\n        this.calendar.legendScale = scaleThreshold().domain(options.legend).range(legendColors);\n\n        return true;\n    }\n\n    /**\n     * Return the classname on the legend for the specified value\n     *\n     * @param integer n Value associated to a date\n     * @param bool withCssClass Whether to display the css class used to style the cell.\n     *                          Disabling will allow styling directly via html fill attribute\n     *\n     * @return string Classname according to the legend\n     */\n    getClass(n, withCssClass) {\n        \"use strict\";\n\n        if (n === null || isNaN(n)) {\n            return \"\";\n        }\n\n        var index = [this.calendar.options.legend.length + 1];\n\n        for (var i = 0, total = this.calendar.options.legend.length - 1; i <= total; i++) {\n\n            if (this.calendar.options.legend[0] > 0 && n < 0) {\n                index = [\"1\", \"i\"];\n                break;\n            }\n\n            if (n <= this.calendar.options.legend[i]) {\n                index = [i + 1];\n                break;\n            }\n        }\n\n        if (n === 0) {\n            index.push(0);\n        }\n\n        index.unshift(\"\");\n        return (index.join(\" r\") + (withCssClass ? index.join(\" q\") : \"\")).trim();\n    }\n}\n\n/**\n * #source http://stackoverflow.com/a/383245/805649\n */\nfunction mergeRecursive(obj1, obj2) {\n    \"use strict\";\n\n    /*jshint forin:false */\n    for (var p in obj2) {\n        try {\n            // Property in destination object set; update its value.\n            if (obj2[p].constructor === Object) {\n                obj1[p] = mergeRecursive(obj1[p], obj2[p]);\n            } else {\n                obj1[p] = obj2[p];\n            }\n        } catch (e) {\n            // Property in destination object not set; create it and set its value.\n            obj1[p] = obj2[p];\n        }\n    }\n\n    return obj1;\n}\n\n/**\n * Check if 2 arrays are equals\n *\n * @link http://stackoverflow.com/a/14853974/805649\n * @param  array array the array to compare to\n * @return bool true of the 2 arrays are equals\n */\nfunction arrayEquals(arrayA, arrayB) {\n    \"use strict\";\n\n    // if the other array is a falsy value, return\n    if (!arrayB || !arrayA) {\n        return false;\n    }\n\n    // compare lengths - can save a lot of time\n    if (arrayA.length !== arrayB.length) {\n        return false;\n    }\n\n    for (var i = 0; i < arrayA.length; i++) {\n        // Check if we have nested arrays\n        if (arrayA[i] instanceof Array && arrayB[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!arrayEquals(arrayA[i], arrayB[i])) {\n                return false;\n            }\n        } else if (arrayA[i] !== arrayB[i]) {\n            // Warning - two different object instances will never be equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n}\n"],"names":["mergeRecursive","obj1","obj2","p","constructor","Object","e","arrayEquals","arrayA","arrayB","length","i","Array","CalHeatMap","[object Object]","_initCalendar","self","verticalDomainLabel","options","label","position","domainVerticalLabelHeight","height","Math","max","cellSize","domainHorizontalLabelWidth","domainLabelFormat","width","paint","nextSelector","select","on","itemNamespace","event","preventDefault","loadNextDomain","previousSelector","loadPreviousDomain","Legend","redraw","graphDim","domainGutter","cellPadding","afterLoad","domains","getDomainKeys","loadOnInit","getDatas","data","Date","getSubDomain","pop","fill","onComplete","checkIfMinDomainIsReached","checkIfMaxDomainIsReached","getNextDomain","getTime","w","d","outer","_domainType","subDomain","column","arguments","domainMargin","h","row","this","allowedDataType","itemSelector","paintOnLoad","range","cellRadius","domain","colLimit","rowLimit","weekStartOnMonday","start","minDate","maxDate","dataType","dataPostPayload","considerMissingDataAsZero","verticalOrientation","domainDynamicDimension","align","offset","x","y","rotate","legend","displayLegend","legendCellSize","legendCellPadding","legendMargin","legendVerticalPosition","legendHorizontalPosition","legendOrientation","legendColors","highlight","itemName","subDomainTitleFormat","empty","filled","subDomainDateFormat","subDomainTextFormat","legendTitleFormat","lower","inner","upper","animationDuration","tooltip","onClick","afterLoadNextDomain","afterLoadPreviousDomain","onMaxDomainReached","onMinDomainReached","min","name","level","maxItemNumber","defaultRowNumber","defaultColumnNumber","getSubDomainRowNumber","getSubDomainColumnNumber","floor","getMinutes","format","date","connector","getFullYear","getMonth","getDate","getHours","hour","getDayCountInMonth","getWeekDay","day","getDayCountInYear","getWeekNumber","getDayOfYear","week","getMonthWeekNumber","dt","weekDay","getDay","setDate","month","year","type","hasOwnProperty","extractUnit","lastInsertedSvg","_completed","_domains","map","legendDim","NAVIGATE_LEFT","NAVIGATE_RIGHT","RESET_ALL_ON_UPDATE","RESET_SINGLE_ON_UPDATE","APPEND_ON_UPDATE","DEFAULT_LEGEND_MARGIN","root","_maxDomainReached","_minDomainReached","domainPosition","DomainPosition","legendScale","DSTDomain","_init","getDomain","set","t","v","append","attr","current","navigationDir","getDomainPosition","domainIndex","axis","domainDim","tmp","setPosition","enteringDomainDim","exitingDomainDim","getPositionFromIndex","shiftRightBy","getLast","shiftLeftBy","domainRotate","selection","s","domainSvg","selectAll","reverse","svg","enter","classname","subDomainSvgGroup","rect","get","getHighlightClassName","positionSubDomainX","positionSubDomainY","call","base","domainNode","parentNode","html","getSubDomainTitle","tooltipPositionX","node","offsetWidth","tooltipPositionY","offsetHeight","parseInt","getAttribute","text","formatDate","transition","duration","getPosition","tempWidth","tempHeight","exit","remove","resize","settings","validateSelector","selector","canBeFalse","Element","Error","getOptimalSubDomain","validateDomainType","parent","substring","autoAlignLabel","autoAddLegendMargin","expandMarginSetting","value","isArray","console","log","slice","expandItemName","parseColLimit","parseRowLimit","indexOf","error","message","k","expandDateSetting","filter","addStyle","element","overflow","formatSubDomainText","htmlClass","trim","split","pastDate","dateIsLessThan","sameDate","dateIsEqual","push","getClass","join","formatted","args","prop","regexp","RegExp","replace","eventName","successArgs","skip","apply","itemNb","triggerEvent","response","shift","reached","upperBound","minDomainIsReached","maxDomainIsReached","lowerBound","f","timeFormat","formatStringWithObject","count","formatNumber","n","bound","loadNewDomains","end","direction","newDomains","buildSubDomain","backward","total","datetimestamp","keys","sort","a","b","index","ceil","j","isNow","dateA","dateB","normalizedMillis","subdomain","monthFirstWeekNumber","getEndOfMonth","step","setHours","setMonth","setFullYear","stop","timeMinutes","timeHours","splice","abs","timeDays","weekStart","endDate","timeMondays","timeSundays","timeMonths","timeYears","getHourDomain","getDayDomain","getWeekDomain","getMonthDomain","getYearDomain","computeDaySubDomainSize","computeMinSubDomainSize","computeHourSubDomainSize","computeWeekSubDomainSize","endOfMonth","endWeekNb","startWeekNb","getMinuteDomain","jumpDate","source","startDate","callback","updateMode","_callback","afterLoadData","interpretCSV","parseDatas","url","parseURI","requestType","payload","json","send","csv","tsv","forEach","key","array","temp","extractTime","domainUnit","has","isNaN","subDomainsData","str","toISOString","legendWidth","getDim","legendHeight","graphWidth","graphHeight","reset","firstDomain","lastDomain","jumpTo","dataSource","oldLegend","buildColors","each","styles",".cal-heatmap-container",".graph",".graph-rect","rect.highlight","rect.now","rect.highlight-now","text.highlight","text.now","text.highlight-now",".domain-background",".graph-label",".subdomain-text",".q0",".qi","whitelistStyles","filterStyles","attribute","property","getElement","dom","window","cs","getComputedStyle","item","getPropertyValue","css","currentStyle","string","style","l","XMLSerializer","serializeToString","positions","getKeys","dim","calendar","computeDim","legendCellLayout","getLegendXPosition","round","getLegendYPosition","legendItem","_legend","legendElement","insert","delay","down","up","isHorizontal","_colorRange","unshift","colorScale","scaleLinear","interpolate","interpolateHcl","scaleThreshold","withCssClass"],"mappings":"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"}